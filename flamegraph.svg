<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1237.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="6262"><g><title>[[stack]] (1 samples, 0.02%)</title><rect x="0.0000%" y="1173" width="0.0160%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1183.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.02%)</title><rect x="0.0000%" y="1157" width="0.0160%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="0.0000%" y="1141" width="0.0160%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.0000%" y="1125" width="0.0160%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1135.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.03%)</title><rect x="0.0479%" y="1141" width="0.0319%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="2"/><text x="0.2979%" y="1151.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.03%)</title><rect x="0.0479%" y="1125" width="0.0319%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="2"/><text x="0.2979%" y="1135.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="0.0639%" y="1109" width="0.0160%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="0.3139%" y="1119.50"></text></g><g><title>memset (1 samples, 0.02%)</title><rect x="0.0639%" y="1093" width="0.0160%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="1"/><text x="0.3139%" y="1103.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.10%)</title><rect x="0.0160%" y="1157" width="0.0958%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="6"/><text x="0.2660%" y="1167.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="0.0798%" y="1141" width="0.0319%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="2"/><text x="0.3298%" y="1151.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.11%)</title><rect x="0.0160%" y="1173" width="0.1118%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="7"/><text x="0.2660%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.1118%" y="1157" width="0.0160%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="1"/><text x="0.3618%" y="1167.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="0.6867%" y="1109" width="0.0160%" height="15" fill="rgb(216,20,37)" fg:x="43" fg:w="1"/><text x="0.9367%" y="1119.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="0.6867%" y="1093" width="0.0160%" height="15" fill="rgb(206,188,39)" fg:x="43" fg:w="1"/><text x="0.9367%" y="1103.50"></text></g><g><title>[libc.so.6] (3 samples, 0.05%)</title><rect x="0.7027%" y="1077" width="0.0479%" height="15" fill="rgb(217,207,13)" fg:x="44" fg:w="3"/><text x="0.9527%" y="1087.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.06%)</title><rect x="0.7027%" y="1109" width="0.0639%" height="15" fill="rgb(231,73,38)" fg:x="44" fg:w="4"/><text x="0.9527%" y="1119.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::&lt;impl core::convert::From&lt;ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt; for ppv_lite86::x86_64::vec512_storage&gt;::from (4 samples, 0.06%)</title><rect x="0.7027%" y="1093" width="0.0639%" height="15" fill="rgb(225,20,46)" fg:x="44" fg:w="4"/><text x="0.9527%" y="1103.50"></text></g><g><title>memcpy@plt (1 samples, 0.02%)</title><rect x="0.7506%" y="1077" width="0.0160%" height="15" fill="rgb(210,31,41)" fg:x="47" fg:w="1"/><text x="1.0006%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (10 samples, 0.16%)</title><rect x="0.8943%" y="1045" width="0.1597%" height="15" fill="rgb(221,200,47)" fg:x="56" fg:w="10"/><text x="1.1443%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (10 samples, 0.16%)</title><rect x="0.8943%" y="1029" width="0.1597%" height="15" fill="rgb(226,26,5)" fg:x="56" fg:w="10"/><text x="1.1443%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (5 samples, 0.08%)</title><rect x="0.9741%" y="1013" width="0.0798%" height="15" fill="rgb(249,33,26)" fg:x="61" fg:w="5"/><text x="1.2241%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (5 samples, 0.08%)</title><rect x="0.9741%" y="997" width="0.0798%" height="15" fill="rgb(235,183,28)" fg:x="61" fg:w="5"/><text x="1.2241%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (3 samples, 0.05%)</title><rect x="1.0061%" y="981" width="0.0479%" height="15" fill="rgb(221,5,38)" fg:x="63" fg:w="3"/><text x="1.2561%" y="991.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (3 samples, 0.05%)</title><rect x="1.0061%" y="965" width="0.0479%" height="15" fill="rgb(247,18,42)" fg:x="63" fg:w="3"/><text x="1.2561%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (17 samples, 0.27%)</title><rect x="0.7985%" y="1077" width="0.2715%" height="15" fill="rgb(241,131,45)" fg:x="50" fg:w="17"/><text x="1.0485%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (16 samples, 0.26%)</title><rect x="0.8144%" y="1061" width="0.2555%" height="15" fill="rgb(249,31,29)" fg:x="51" fg:w="16"/><text x="1.0644%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.02%)</title><rect x="1.0540%" y="1045" width="0.0160%" height="15" fill="rgb(225,111,53)" fg:x="66" fg:w="1"/><text x="1.3040%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="1.0540%" y="1029" width="0.0160%" height="15" fill="rgb(238,160,17)" fg:x="66" fg:w="1"/><text x="1.3040%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.02%)</title><rect x="1.0699%" y="1077" width="0.0160%" height="15" fill="rgb(214,148,48)" fg:x="67" fg:w="1"/><text x="1.3199%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.40%)</title><rect x="0.7665%" y="1109" width="0.3992%" height="15" fill="rgb(232,36,49)" fg:x="48" fg:w="25"/><text x="1.0165%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (25 samples, 0.40%)</title><rect x="0.7665%" y="1093" width="0.3992%" height="15" fill="rgb(209,103,24)" fg:x="48" fg:w="25"/><text x="1.0165%" y="1103.50"></text></g><g><title>[libc.so.6] (5 samples, 0.08%)</title><rect x="1.0859%" y="1077" width="0.0798%" height="15" fill="rgb(229,88,8)" fg:x="68" fg:w="5"/><text x="1.3359%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::len (8 samples, 0.13%)</title><rect x="1.4053%" y="1061" width="0.1278%" height="15" fill="rgb(213,181,19)" fg:x="88" fg:w="8"/><text x="1.6553%" y="1071.50"></text></g><g><title>core::ptr::metadata::metadata (6 samples, 0.10%)</title><rect x="1.4372%" y="1045" width="0.0958%" height="15" fill="rgb(254,191,54)" fg:x="90" fg:w="6"/><text x="1.6872%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.46%)</title><rect x="1.1658%" y="1109" width="0.4631%" height="15" fill="rgb(241,83,37)" fg:x="73" fg:w="29"/><text x="1.4158%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::split_at_mut (19 samples, 0.30%)</title><rect x="1.3255%" y="1093" width="0.3034%" height="15" fill="rgb(233,36,39)" fg:x="83" fg:w="19"/><text x="1.5755%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::split_at_mut_unchecked (19 samples, 0.30%)</title><rect x="1.3255%" y="1077" width="0.3034%" height="15" fill="rgb(226,3,54)" fg:x="83" fg:w="19"/><text x="1.5755%" y="1087.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (6 samples, 0.10%)</title><rect x="1.5331%" y="1061" width="0.0958%" height="15" fill="rgb(245,192,40)" fg:x="96" fg:w="6"/><text x="1.7831%" y="1071.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (6 samples, 0.10%)</title><rect x="1.5331%" y="1045" width="0.0958%" height="15" fill="rgb(238,167,29)" fg:x="96" fg:w="6"/><text x="1.7831%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (14 samples, 0.22%)</title><rect x="1.6289%" y="1093" width="0.2236%" height="15" fill="rgb(232,182,51)" fg:x="102" fg:w="14"/><text x="1.8789%" y="1103.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (8 samples, 0.13%)</title><rect x="1.7247%" y="1077" width="0.1278%" height="15" fill="rgb(231,60,39)" fg:x="108" fg:w="8"/><text x="1.9747%" y="1087.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (2 samples, 0.03%)</title><rect x="1.8205%" y="1061" width="0.0319%" height="15" fill="rgb(208,69,12)" fg:x="114" fg:w="2"/><text x="2.0705%" y="1071.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (16 samples, 0.26%)</title><rect x="1.6289%" y="1109" width="0.2555%" height="15" fill="rgb(235,93,37)" fg:x="102" fg:w="16"/><text x="1.8789%" y="1119.50"></text></g><g><title>ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt;::new (2 samples, 0.03%)</title><rect x="1.8524%" y="1093" width="0.0319%" height="15" fill="rgb(213,116,39)" fg:x="116" fg:w="2"/><text x="2.1024%" y="1103.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (73 samples, 1.17%)</title><rect x="1.8844%" y="1109" width="1.1658%" height="15" fill="rgb(222,207,29)" fg:x="118" fg:w="73"/><text x="2.1344%" y="1119.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (50 samples, 0.80%)</title><rect x="2.2517%" y="1093" width="0.7985%" height="15" fill="rgb(206,96,30)" fg:x="141" fg:w="50"/><text x="2.5017%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (7 samples, 0.11%)</title><rect x="2.9384%" y="1077" width="0.1118%" height="15" fill="rgb(218,138,4)" fg:x="184" fg:w="7"/><text x="3.1884%" y="1087.50"></text></g><g><title>core::ptr::write_unaligned (2 samples, 0.03%)</title><rect x="3.0182%" y="1061" width="0.0319%" height="15" fill="rgb(250,191,14)" fg:x="189" fg:w="2"/><text x="3.2682%" y="1071.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (25 samples, 0.40%)</title><rect x="3.1460%" y="1093" width="0.3992%" height="15" fill="rgb(239,60,40)" fg:x="197" fg:w="25"/><text x="3.3960%" y="1103.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (8 samples, 0.13%)</title><rect x="3.4174%" y="1077" width="0.1278%" height="15" fill="rgb(206,27,48)" fg:x="214" fg:w="8"/><text x="3.6674%" y="1087.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (5 samples, 0.08%)</title><rect x="3.4653%" y="1061" width="0.0798%" height="15" fill="rgb(225,35,8)" fg:x="217" fg:w="5"/><text x="3.7153%" y="1071.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (39 samples, 0.62%)</title><rect x="3.0501%" y="1109" width="0.6228%" height="15" fill="rgb(250,213,24)" fg:x="191" fg:w="39"/><text x="3.3001%" y="1119.50"></text></g><g><title>ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt;::new (8 samples, 0.13%)</title><rect x="3.5452%" y="1093" width="0.1278%" height="15" fill="rgb(247,123,22)" fg:x="222" fg:w="8"/><text x="3.7952%" y="1103.50"></text></g><g><title>[libc.so.6] (12 samples, 0.19%)</title><rect x="3.6729%" y="1109" width="0.1916%" height="15" fill="rgb(231,138,38)" fg:x="230" fg:w="12"/><text x="3.9229%" y="1119.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="3.8646%" y="1109" width="0.0160%" height="15" fill="rgb(231,145,46)" fg:x="242" fg:w="1"/><text x="4.1146%" y="1119.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="3.8646%" y="1093" width="0.0160%" height="15" fill="rgb(251,118,11)" fg:x="242" fg:w="1"/><text x="4.1146%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="4.0402%" y="1093" width="0.0160%" height="15" fill="rgb(217,147,25)" fg:x="253" fg:w="1"/><text x="4.2902%" y="1103.50"></text></g><g><title>[libc.so.6] (8 samples, 0.13%)</title><rect x="4.0722%" y="1061" width="0.1278%" height="15" fill="rgb(247,81,37)" fg:x="255" fg:w="8"/><text x="4.3222%" y="1071.50"></text></g><g><title>core::cmp::min (6 samples, 0.10%)</title><rect x="4.1999%" y="1061" width="0.0958%" height="15" fill="rgb(209,12,38)" fg:x="263" fg:w="6"/><text x="4.4499%" y="1071.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.10%)</title><rect x="4.1999%" y="1045" width="0.0958%" height="15" fill="rgb(227,1,9)" fg:x="263" fg:w="6"/><text x="4.4499%" y="1055.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.10%)</title><rect x="4.1999%" y="1029" width="0.0958%" height="15" fill="rgb(248,47,43)" fg:x="263" fg:w="6"/><text x="4.4499%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.05%)</title><rect x="4.2478%" y="1013" width="0.0479%" height="15" fill="rgb(221,10,30)" fg:x="266" fg:w="3"/><text x="4.4978%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (2 samples, 0.03%)</title><rect x="4.2638%" y="997" width="0.0319%" height="15" fill="rgb(210,229,1)" fg:x="267" fg:w="2"/><text x="4.5138%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="4.3437%" y="1045" width="0.0160%" height="15" fill="rgb(222,148,37)" fg:x="272" fg:w="1"/><text x="4.5937%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (31 samples, 0.50%)</title><rect x="3.8805%" y="1109" width="0.4950%" height="15" fill="rgb(234,67,33)" fg:x="243" fg:w="31"/><text x="4.1305%" y="1119.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (20 samples, 0.32%)</title><rect x="4.0562%" y="1093" width="0.3194%" height="15" fill="rgb(247,98,35)" fg:x="254" fg:w="20"/><text x="4.3062%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (20 samples, 0.32%)</title><rect x="4.0562%" y="1077" width="0.3194%" height="15" fill="rgb(247,138,52)" fg:x="254" fg:w="20"/><text x="4.3062%" y="1087.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (5 samples, 0.08%)</title><rect x="4.2958%" y="1061" width="0.0798%" height="15" fill="rgb(213,79,30)" fg:x="269" fg:w="5"/><text x="4.5458%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="4.3596%" y="1045" width="0.0160%" height="15" fill="rgb(246,177,23)" fg:x="273" fg:w="1"/><text x="4.6096%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.05%)</title><rect x="4.3756%" y="1109" width="0.0479%" height="15" fill="rgb(230,62,27)" fg:x="274" fg:w="3"/><text x="4.6256%" y="1119.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::Store&lt;ppv_lite86::x86_64::vec128_storage&gt;&gt;::unpack (17 samples, 0.27%)</title><rect x="4.4235%" y="1093" width="0.2715%" height="15" fill="rgb(216,154,8)" fg:x="277" fg:w="17"/><text x="4.6735%" y="1103.50"></text></g><g><title>ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt;::new (4 samples, 0.06%)</title><rect x="4.6311%" y="1077" width="0.0639%" height="15" fill="rgb(244,35,45)" fg:x="290" fg:w="4"/><text x="4.8811%" y="1087.50"></text></g><g><title>ppv_lite86::types::Machine::unpack (19 samples, 0.30%)</title><rect x="4.4235%" y="1109" width="0.3034%" height="15" fill="rgb(251,115,12)" fg:x="277" fg:w="19"/><text x="4.6735%" y="1119.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::&lt;impl ppv_lite86::types::Store&lt;ppv_lite86::x86_64::vec512_storage&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::unpack (2 samples, 0.03%)</title><rect x="4.6950%" y="1093" width="0.0319%" height="15" fill="rgb(240,54,50)" fg:x="294" fg:w="2"/><text x="4.9450%" y="1103.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::Store&lt;ppv_lite86::x86_64::vec256_storage&gt;&gt;::unpack (1 samples, 0.02%)</title><rect x="4.7110%" y="1077" width="0.0160%" height="15" fill="rgb(233,84,52)" fg:x="295" fg:w="1"/><text x="4.9610%" y="1087.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;::new (1 samples, 0.02%)</title><rect x="4.7110%" y="1061" width="0.0160%" height="15" fill="rgb(207,117,47)" fg:x="295" fg:w="1"/><text x="4.9610%" y="1071.50"></text></g><g><title>ppv_lite86::types::Machine::vec (3 samples, 0.05%)</title><rect x="4.7269%" y="1109" width="0.0479%" height="15" fill="rgb(249,43,39)" fg:x="296" fg:w="3"/><text x="4.9769%" y="1119.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::MultiLane&lt;[u32: 4]&gt;&gt;::from_lanes (3 samples, 0.05%)</title><rect x="4.7269%" y="1093" width="0.0479%" height="15" fill="rgb(209,38,44)" fg:x="296" fg:w="3"/><text x="4.9769%" y="1103.50"></text></g><g><title>core::core_arch::x86_64::sse2::_mm_cvtsi64_si128 (2 samples, 0.03%)</title><rect x="4.7429%" y="1077" width="0.0319%" height="15" fill="rgb(236,212,23)" fg:x="297" fg:w="2"/><text x="4.9929%" y="1087.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi64x (2 samples, 0.03%)</title><rect x="4.7429%" y="1061" width="0.0319%" height="15" fill="rgb(242,79,21)" fg:x="297" fg:w="2"/><text x="4.9929%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_m128i (9 samples, 0.14%)</title><rect x="4.8068%" y="1077" width="0.1437%" height="15" fill="rgb(211,96,35)" fg:x="301" fg:w="9"/><text x="5.0568%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_m128i (9 samples, 0.14%)</title><rect x="4.8068%" y="1061" width="0.1437%" height="15" fill="rgb(253,215,40)" fg:x="301" fg:w="9"/><text x="5.0568%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_m128 (3 samples, 0.05%)</title><rect x="4.9026%" y="1045" width="0.0479%" height="15" fill="rgb(211,81,21)" fg:x="307" fg:w="3"/><text x="5.1526%" y="1055.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::from_lanes (13 samples, 0.21%)</title><rect x="4.7748%" y="1109" width="0.2076%" height="15" fill="rgb(208,190,38)" fg:x="299" fg:w="13"/><text x="5.0248%" y="1119.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::from_lanes (11 samples, 0.18%)</title><rect x="4.8068%" y="1093" width="0.1757%" height="15" fill="rgb(235,213,38)" fg:x="301" fg:w="11"/><text x="5.0568%" y="1103.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;::new (2 samples, 0.03%)</title><rect x="4.9505%" y="1077" width="0.0319%" height="15" fill="rgb(237,122,38)" fg:x="310" fg:w="2"/><text x="5.2005%" y="1087.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::to_lanes (116 samples, 1.85%)</title><rect x="4.9824%" y="1109" width="1.8524%" height="15" fill="rgb(244,218,35)" fg:x="312" fg:w="116"/><text x="5.2324%" y="1119.50">p..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::to_lanes (113 samples, 1.80%)</title><rect x="5.0303%" y="1093" width="1.8045%" height="15" fill="rgb(240,68,47)" fg:x="315" fg:w="113"/><text x="5.2803%" y="1103.50">&lt;..</text></g><g><title>core::core_arch::x86::avx2::_mm256_extracti128_si256 (108 samples, 1.72%)</title><rect x="5.1102%" y="1077" width="1.7247%" height="15" fill="rgb(210,16,53)" fg:x="320" fg:w="108"/><text x="5.3602%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (8 samples, 0.13%)</title><rect x="6.7071%" y="1061" width="0.1278%" height="15" fill="rgb(235,124,12)" fg:x="420" fg:w="8"/><text x="6.9571%" y="1071.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.03%)</title><rect x="6.8029%" y="1045" width="0.0319%" height="15" fill="rgb(224,169,11)" fg:x="426" fg:w="2"/><text x="7.0529%" y="1055.50"></text></g><g><title>core::core_arch::x86_64::sse2::_mm_cvtsi128_si64 (1 samples, 0.02%)</title><rect x="6.8349%" y="1061" width="0.0160%" height="15" fill="rgb(250,166,2)" fg:x="428" fg:w="1"/><text x="7.0849%" y="1071.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::extract (7 samples, 0.11%)</title><rect x="6.8349%" y="1093" width="0.1118%" height="15" fill="rgb(242,216,29)" fg:x="428" fg:w="7"/><text x="7.0849%" y="1103.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::MultiLane&lt;[u32: 4]&gt;&gt;::to_lanes (7 samples, 0.11%)</title><rect x="6.8349%" y="1077" width="0.1118%" height="15" fill="rgb(230,116,27)" fg:x="428" fg:w="7"/><text x="7.0849%" y="1087.50"></text></g><g><title>core::core_arch::x86_64::sse41::_mm_extract_epi64 (6 samples, 0.10%)</title><rect x="6.8508%" y="1061" width="0.0958%" height="15" fill="rgb(228,99,48)" fg:x="429" fg:w="6"/><text x="7.1008%" y="1071.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i64x2 (3 samples, 0.05%)</title><rect x="6.8988%" y="1045" width="0.0479%" height="15" fill="rgb(253,11,6)" fg:x="432" fg:w="3"/><text x="7.1488%" y="1055.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (1 samples, 0.02%)</title><rect x="6.9307%" y="1029" width="0.0160%" height="15" fill="rgb(247,143,39)" fg:x="434" fg:w="1"/><text x="7.1807%" y="1039.50"></text></g><g><title>rand_chacha::guts::ChaCha::pos64 (29 samples, 0.46%)</title><rect x="6.8349%" y="1109" width="0.4631%" height="15" fill="rgb(236,97,10)" fg:x="428" fg:w="29"/><text x="7.0849%" y="1119.50"></text></g><g><title>ppv_lite86::types::Machine::unpack (22 samples, 0.35%)</title><rect x="6.9467%" y="1093" width="0.3513%" height="15" fill="rgb(233,208,19)" fg:x="435" fg:w="22"/><text x="7.1967%" y="1103.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::Store&lt;ppv_lite86::x86_64::vec128_storage&gt;&gt;::unpack (22 samples, 0.35%)</title><rect x="6.9467%" y="1077" width="0.3513%" height="15" fill="rgb(216,164,2)" fg:x="435" fg:w="22"/><text x="7.1967%" y="1087.50"></text></g><g><title>ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt;::new (3 samples, 0.05%)</title><rect x="7.2501%" y="1061" width="0.0479%" height="15" fill="rgb(220,129,5)" fg:x="454" fg:w="3"/><text x="7.5001%" y="1071.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (75 samples, 1.20%)</title><rect x="7.3459%" y="1093" width="1.1977%" height="15" fill="rgb(242,17,10)" fg:x="460" fg:w="75"/><text x="7.5959%" y="1103.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (75 samples, 1.20%)</title><rect x="7.3459%" y="1077" width="1.1977%" height="15" fill="rgb(242,107,0)" fg:x="460" fg:w="75"/><text x="7.5959%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (75 samples, 1.20%)</title><rect x="7.3459%" y="1061" width="1.1977%" height="15" fill="rgb(251,28,31)" fg:x="460" fg:w="75"/><text x="7.5959%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (8 samples, 0.13%)</title><rect x="8.4158%" y="1045" width="0.1278%" height="15" fill="rgb(233,223,10)" fg:x="527" fg:w="8"/><text x="8.6658%" y="1055.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (72 samples, 1.15%)</title><rect x="8.5436%" y="1093" width="1.1498%" height="15" fill="rgb(215,21,27)" fg:x="535" fg:w="72"/><text x="8.7936%" y="1103.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (72 samples, 1.15%)</title><rect x="8.5436%" y="1077" width="1.1498%" height="15" fill="rgb(232,23,21)" fg:x="535" fg:w="72"/><text x="8.7936%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (72 samples, 1.15%)</title><rect x="8.5436%" y="1061" width="1.1498%" height="15" fill="rgb(244,5,23)" fg:x="535" fg:w="72"/><text x="8.7936%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.05%)</title><rect x="9.6455%" y="1045" width="0.0479%" height="15" fill="rgb(226,81,46)" fg:x="604" fg:w="3"/><text x="9.8955%" y="1055.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="9.6774%" y="1029" width="0.0160%" height="15" fill="rgb(247,70,30)" fg:x="606" fg:w="1"/><text x="9.9274%" y="1039.50"></text></g><g><title>rand_chacha::guts::diagonalize (227 samples, 3.63%)</title><rect x="7.2980%" y="1109" width="3.6250%" height="15" fill="rgb(212,68,19)" fg:x="457" fg:w="227"/><text x="7.5480%" y="1119.50">rand..</text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (77 samples, 1.23%)</title><rect x="9.6934%" y="1093" width="1.2296%" height="15" fill="rgb(240,187,13)" fg:x="607" fg:w="77"/><text x="9.9434%" y="1103.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (77 samples, 1.23%)</title><rect x="9.6934%" y="1077" width="1.2296%" height="15" fill="rgb(223,113,26)" fg:x="607" fg:w="77"/><text x="9.9434%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (77 samples, 1.23%)</title><rect x="9.6934%" y="1061" width="1.2296%" height="15" fill="rgb(206,192,2)" fg:x="607" fg:w="77"/><text x="9.9434%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (12 samples, 0.19%)</title><rect x="10.7314%" y="1045" width="0.1916%" height="15" fill="rgb(241,108,4)" fg:x="672" fg:w="12"/><text x="10.9814%" y="1055.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (6 samples, 0.10%)</title><rect x="10.8272%" y="1029" width="0.0958%" height="15" fill="rgb(247,173,49)" fg:x="678" fg:w="6"/><text x="11.0772%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (645 samples, 10.30%)</title><rect x="11.0987%" y="1093" width="10.3002%" height="15" fill="rgb(224,114,35)" fg:x="695" fg:w="645"/><text x="11.3487%" y="1103.50">&lt;ppv_lite86::so..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (639 samples, 10.20%)</title><rect x="11.1945%" y="1077" width="10.2044%" height="15" fill="rgb(245,159,27)" fg:x="701" fg:w="639"/><text x="11.4445%" y="1087.50">&lt;ppv_lite86::x8..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (635 samples, 10.14%)</title><rect x="11.2584%" y="1061" width="10.1405%" height="15" fill="rgb(245,172,44)" fg:x="705" fg:w="635"/><text x="11.5084%" y="1071.50">&lt;ppv_lite86::x8..</text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (629 samples, 10.04%)</title><rect x="11.3542%" y="1045" width="10.0447%" height="15" fill="rgb(236,23,11)" fg:x="711" fg:w="629"/><text x="11.6042%" y="1055.50">core::core_arch..</text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (20 samples, 0.32%)</title><rect x="21.0795%" y="1029" width="0.3194%" height="15" fill="rgb(205,117,38)" fg:x="1320" fg:w="20"/><text x="21.3295%" y="1039.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (3 samples, 0.05%)</title><rect x="21.3510%" y="1013" width="0.0479%" height="15" fill="rgb(237,72,25)" fg:x="1337" fg:w="3"/><text x="21.6010%" y="1023.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (589 samples, 9.41%)</title><rect x="21.3989%" y="1093" width="9.4059%" height="15" fill="rgb(244,70,9)" fg:x="1340" fg:w="589"/><text x="21.6489%" y="1103.50">&lt;ppv_lite86::..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (589 samples, 9.41%)</title><rect x="21.3989%" y="1077" width="9.4059%" height="15" fill="rgb(217,125,39)" fg:x="1340" fg:w="589"/><text x="21.6489%" y="1087.50">&lt;ppv_lite86::..</text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (589 samples, 9.41%)</title><rect x="21.3989%" y="1061" width="9.4059%" height="15" fill="rgb(235,36,10)" fg:x="1340" fg:w="589"/><text x="21.6489%" y="1071.50">core::core_ar..</text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (32 samples, 0.51%)</title><rect x="30.2938%" y="1045" width="0.5110%" height="15" fill="rgb(251,123,47)" fg:x="1897" fg:w="32"/><text x="30.5438%" y="1055.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (9 samples, 0.14%)</title><rect x="30.6611%" y="1029" width="0.1437%" height="15" fill="rgb(221,13,13)" fg:x="1920" fg:w="9"/><text x="30.9111%" y="1039.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (67 samples, 1.07%)</title><rect x="31.2201%" y="1061" width="1.0699%" height="15" fill="rgb(238,131,9)" fg:x="1955" fg:w="67"/><text x="31.4701%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (27 samples, 0.43%)</title><rect x="31.8588%" y="1045" width="0.4312%" height="15" fill="rgb(211,50,8)" fg:x="1995" fg:w="27"/><text x="32.1088%" y="1055.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="32.2740%" y="1029" width="0.0160%" height="15" fill="rgb(245,182,24)" fg:x="2021" fg:w="1"/><text x="32.5240%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (195 samples, 3.11%)</title><rect x="30.8049%" y="1093" width="3.1140%" height="15" fill="rgb(242,14,37)" fg:x="1929" fg:w="195"/><text x="31.0549%" y="1103.50">&lt;pp..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (195 samples, 3.11%)</title><rect x="30.8049%" y="1077" width="3.1140%" height="15" fill="rgb(246,228,12)" fg:x="1929" fg:w="195"/><text x="31.0549%" y="1087.50">&lt;pp..</text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (102 samples, 1.63%)</title><rect x="32.2900%" y="1061" width="1.6289%" height="15" fill="rgb(213,55,15)" fg:x="2022" fg:w="102"/><text x="32.5400%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (90 samples, 1.44%)</title><rect x="32.4816%" y="1045" width="1.4372%" height="15" fill="rgb(209,9,3)" fg:x="2034" fg:w="90"/><text x="32.7316%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (105 samples, 1.68%)</title><rect x="33.9668%" y="1061" width="1.6768%" height="15" fill="rgb(230,59,30)" fg:x="2127" fg:w="105"/><text x="34.2168%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (13 samples, 0.21%)</title><rect x="35.4360%" y="1045" width="0.2076%" height="15" fill="rgb(209,121,21)" fg:x="2219" fg:w="13"/><text x="35.6860%" y="1055.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (12 samples, 0.19%)</title><rect x="37.8154%" y="1045" width="0.1916%" height="15" fill="rgb(220,109,13)" fg:x="2368" fg:w="12"/><text x="38.0654%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (149 samples, 2.38%)</title><rect x="35.6436%" y="1061" width="2.3794%" height="15" fill="rgb(232,18,1)" fg:x="2232" fg:w="149"/><text x="35.8936%" y="1071.50">co..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="38.0070%" y="1045" width="0.0160%" height="15" fill="rgb(215,41,42)" fg:x="2380" fg:w="1"/><text x="38.2570%" y="1055.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (9 samples, 0.14%)</title><rect x="40.1150%" y="1045" width="0.1437%" height="15" fill="rgb(224,123,36)" fg:x="2512" fg:w="9"/><text x="40.3650%" y="1055.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (405 samples, 6.47%)</title><rect x="33.9189%" y="1093" width="6.4676%" height="15" fill="rgb(240,125,3)" fg:x="2124" fg:w="405"/><text x="34.1689%" y="1103.50">&lt;ppv_lit..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (405 samples, 6.47%)</title><rect x="33.9189%" y="1077" width="6.4676%" height="15" fill="rgb(205,98,50)" fg:x="2124" fg:w="405"/><text x="34.1689%" y="1087.50">&lt;ppv_lit..</text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (148 samples, 2.36%)</title><rect x="38.0230%" y="1061" width="2.3635%" height="15" fill="rgb(205,185,37)" fg:x="2381" fg:w="148"/><text x="38.2730%" y="1071.50">co..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (8 samples, 0.13%)</title><rect x="40.2587%" y="1045" width="0.1278%" height="15" fill="rgb(238,207,15)" fg:x="2521" fg:w="8"/><text x="40.5087%" y="1055.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="40.3705%" y="1029" width="0.0160%" height="15" fill="rgb(213,199,42)" fg:x="2528" fg:w="1"/><text x="40.6205%" y="1039.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (91 samples, 1.45%)</title><rect x="40.6739%" y="1061" width="1.4532%" height="15" fill="rgb(235,201,11)" fg:x="2547" fg:w="91"/><text x="40.9239%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (37 samples, 0.59%)</title><rect x="41.5363%" y="1045" width="0.5909%" height="15" fill="rgb(207,46,11)" fg:x="2601" fg:w="37"/><text x="41.7863%" y="1055.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (199 samples, 3.18%)</title><rect x="40.3865%" y="1093" width="3.1779%" height="15" fill="rgb(241,35,35)" fg:x="2529" fg:w="199"/><text x="40.6365%" y="1103.50">&lt;pp..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (199 samples, 3.18%)</title><rect x="40.3865%" y="1077" width="3.1779%" height="15" fill="rgb(243,32,47)" fg:x="2529" fg:w="199"/><text x="40.6365%" y="1087.50">&lt;pp..</text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (90 samples, 1.44%)</title><rect x="42.1271%" y="1061" width="1.4372%" height="15" fill="rgb(247,202,23)" fg:x="2638" fg:w="90"/><text x="42.3771%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (77 samples, 1.23%)</title><rect x="42.3347%" y="1045" width="1.2296%" height="15" fill="rgb(219,102,11)" fg:x="2651" fg:w="77"/><text x="42.5847%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (97 samples, 1.55%)</title><rect x="43.5963%" y="1061" width="1.5490%" height="15" fill="rgb(243,110,44)" fg:x="2730" fg:w="97"/><text x="43.8463%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (9 samples, 0.14%)</title><rect x="45.0016%" y="1045" width="0.1437%" height="15" fill="rgb(222,74,54)" fg:x="2818" fg:w="9"/><text x="45.2516%" y="1055.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (12 samples, 0.19%)</title><rect x="46.9179%" y="1045" width="0.1916%" height="15" fill="rgb(216,99,12)" fg:x="2938" fg:w="12"/><text x="47.1679%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (124 samples, 1.98%)</title><rect x="45.1453%" y="1061" width="1.9802%" height="15" fill="rgb(226,22,26)" fg:x="2827" fg:w="124"/><text x="45.3953%" y="1071.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="47.1095%" y="1045" width="0.0160%" height="15" fill="rgb(217,163,10)" fg:x="2950" fg:w="1"/><text x="47.3595%" y="1055.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="49.6646%" y="1045" width="0.0160%" height="15" fill="rgb(213,25,53)" fg:x="3110" fg:w="1"/><text x="49.9146%" y="1055.50"></text></g><g><title>rand_chacha::guts::round (2,438 samples, 38.93%)</title><rect x="10.9230%" y="1109" width="38.9332%" height="15" fill="rgb(252,105,26)" fg:x="684" fg:w="2438"/><text x="11.1730%" y="1119.50">rand_chacha::guts::round</text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (394 samples, 6.29%)</title><rect x="43.5644%" y="1093" width="6.2919%" height="15" fill="rgb(220,39,43)" fg:x="2728" fg:w="394"/><text x="43.8144%" y="1103.50">&lt;ppv_lit..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (394 samples, 6.29%)</title><rect x="43.5644%" y="1077" width="6.2919%" height="15" fill="rgb(229,68,48)" fg:x="2728" fg:w="394"/><text x="43.8144%" y="1087.50">&lt;ppv_lit..</text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (171 samples, 2.73%)</title><rect x="47.1255%" y="1061" width="2.7308%" height="15" fill="rgb(252,8,32)" fg:x="2951" fg:w="171"/><text x="47.3755%" y="1071.50">co..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (11 samples, 0.18%)</title><rect x="49.6806%" y="1045" width="0.1757%" height="15" fill="rgb(223,20,43)" fg:x="3111" fg:w="11"/><text x="49.9306%" y="1055.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.03%)</title><rect x="49.8243%" y="1029" width="0.0319%" height="15" fill="rgb(229,81,49)" fg:x="3120" fg:w="2"/><text x="50.0743%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (79 samples, 1.26%)</title><rect x="49.8563%" y="1093" width="1.2616%" height="15" fill="rgb(236,28,36)" fg:x="3122" fg:w="79"/><text x="50.1063%" y="1103.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (79 samples, 1.26%)</title><rect x="49.8563%" y="1077" width="1.2616%" height="15" fill="rgb(249,185,26)" fg:x="3122" fg:w="79"/><text x="50.1063%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (78 samples, 1.25%)</title><rect x="49.8722%" y="1061" width="1.2456%" height="15" fill="rgb(249,174,33)" fg:x="3123" fg:w="78"/><text x="50.1222%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.06%)</title><rect x="51.0540%" y="1045" width="0.0639%" height="15" fill="rgb(233,201,37)" fg:x="3197" fg:w="4"/><text x="51.3040%" y="1055.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.03%)</title><rect x="51.0859%" y="1029" width="0.0319%" height="15" fill="rgb(221,78,26)" fg:x="3199" fg:w="2"/><text x="51.3359%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (55 samples, 0.88%)</title><rect x="51.1179%" y="1093" width="0.8783%" height="15" fill="rgb(250,127,30)" fg:x="3201" fg:w="55"/><text x="51.3679%" y="1103.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (55 samples, 0.88%)</title><rect x="51.1179%" y="1077" width="0.8783%" height="15" fill="rgb(230,49,44)" fg:x="3201" fg:w="55"/><text x="51.3679%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (55 samples, 0.88%)</title><rect x="51.1179%" y="1061" width="0.8783%" height="15" fill="rgb(229,67,23)" fg:x="3201" fg:w="55"/><text x="51.3679%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.03%)</title><rect x="51.9642%" y="1045" width="0.0319%" height="15" fill="rgb(249,83,47)" fg:x="3254" fg:w="2"/><text x="52.2142%" y="1055.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (60 samples, 0.96%)</title><rect x="51.9962%" y="1093" width="0.9582%" height="15" fill="rgb(215,43,3)" fg:x="3256" fg:w="60"/><text x="52.2462%" y="1103.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (60 samples, 0.96%)</title><rect x="51.9962%" y="1077" width="0.9582%" height="15" fill="rgb(238,154,13)" fg:x="3256" fg:w="60"/><text x="52.2462%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (60 samples, 0.96%)</title><rect x="51.9962%" y="1061" width="0.9582%" height="15" fill="rgb(219,56,2)" fg:x="3256" fg:w="60"/><text x="52.2462%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.03%)</title><rect x="52.9224%" y="1045" width="0.0319%" height="15" fill="rgb(233,0,4)" fg:x="3314" fg:w="2"/><text x="53.1724%" y="1055.50"></text></g><g><title>[unknown] (3,312 samples, 52.89%)</title><rect x="0.1278%" y="1173" width="52.8905%" height="15" fill="rgb(235,30,7)" fg:x="8" fg:w="3312"/><text x="0.3778%" y="1183.50">[unknown]</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (3,312 samples, 52.89%)</title><rect x="0.1278%" y="1157" width="52.8905%" height="15" fill="rgb(250,79,13)" fg:x="8" fg:w="3312"/><text x="0.3778%" y="1167.50">rand_chacha::guts::refill_wide::impl_avx2</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (3,312 samples, 52.89%)</title><rect x="0.1278%" y="1141" width="52.8905%" height="15" fill="rgb(211,146,34)" fg:x="8" fg:w="3312"/><text x="0.3778%" y="1151.50">rand_chacha::guts::refill_wide::fn_impl</text></g><g><title>rand_chacha::guts::refill_wide_impl (3,312 samples, 52.89%)</title><rect x="0.1278%" y="1125" width="52.8905%" height="15" fill="rgb(228,22,38)" fg:x="8" fg:w="3312"/><text x="0.3778%" y="1135.50">rand_chacha::guts::refill_wide_impl</text></g><g><title>rand_chacha::guts::undiagonalize (198 samples, 3.16%)</title><rect x="49.8563%" y="1109" width="3.1619%" height="15" fill="rgb(235,168,5)" fg:x="3122" fg:w="198"/><text x="50.1063%" y="1119.50">ran..</text></g><g><title>[libc.so.6] (4 samples, 0.06%)</title><rect x="52.9543%" y="1093" width="0.0639%" height="15" fill="rgb(221,155,16)" fg:x="3316" fg:w="4"/><text x="53.2043%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::AddAssign&lt;&amp;str&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="53.0342%" y="533" width="0.0160%" height="15" fill="rgb(215,215,53)" fg:x="3321" fg:w="1"/><text x="53.2842%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="53.0342%" y="517" width="0.0160%" height="15" fill="rgb(223,4,10)" fg:x="3321" fg:w="1"/><text x="53.2842%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="53.0342%" y="501" width="0.0160%" height="15" fill="rgb(234,103,6)" fg:x="3321" fg:w="1"/><text x="53.2842%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="53.0342%" y="485" width="0.0160%" height="15" fill="rgb(227,97,0)" fg:x="3321" fg:w="1"/><text x="53.2842%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="53.0342%" y="469" width="0.0160%" height="15" fill="rgb(234,150,53)" fg:x="3321" fg:w="1"/><text x="53.2842%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="53.0342%" y="453" width="0.0160%" height="15" fill="rgb(228,201,54)" fg:x="3321" fg:w="1"/><text x="53.2842%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="53.0342%" y="437" width="0.0160%" height="15" fill="rgb(222,22,37)" fg:x="3321" fg:w="1"/><text x="53.2842%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.02%)</title><rect x="53.0501%" y="533" width="0.0160%" height="15" fill="rgb(237,53,32)" fg:x="3322" fg:w="1"/><text x="53.3001%" y="543.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (1 samples, 0.02%)</title><rect x="53.0501%" y="517" width="0.0160%" height="15" fill="rgb(233,25,53)" fg:x="3322" fg:w="1"/><text x="53.3001%" y="527.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.02%)</title><rect x="53.0501%" y="501" width="0.0160%" height="15" fill="rgb(210,40,34)" fg:x="3322" fg:w="1"/><text x="53.3001%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.0501%" y="485" width="0.0160%" height="15" fill="rgb(241,220,44)" fg:x="3322" fg:w="1"/><text x="53.3001%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.0501%" y="469" width="0.0160%" height="15" fill="rgb(235,28,35)" fg:x="3322" fg:w="1"/><text x="53.3001%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.02%)</title><rect x="53.0821%" y="517" width="0.0160%" height="15" fill="rgb(210,56,17)" fg:x="3324" fg:w="1"/><text x="53.3321%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.05%)</title><rect x="53.0661%" y="533" width="0.0479%" height="15" fill="rgb(224,130,29)" fg:x="3323" fg:w="3"/><text x="53.3161%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="53.0981%" y="517" width="0.0160%" height="15" fill="rgb(235,212,8)" fg:x="3325" fg:w="1"/><text x="53.3481%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="53.0981%" y="501" width="0.0160%" height="15" fill="rgb(223,33,50)" fg:x="3325" fg:w="1"/><text x="53.3481%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="53.0981%" y="485" width="0.0160%" height="15" fill="rgb(219,149,13)" fg:x="3325" fg:w="1"/><text x="53.3481%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="53.0981%" y="469" width="0.0160%" height="15" fill="rgb(250,156,29)" fg:x="3325" fg:w="1"/><text x="53.3481%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="53.0981%" y="453" width="0.0160%" height="15" fill="rgb(216,193,19)" fg:x="3325" fg:w="1"/><text x="53.3481%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="53.0981%" y="437" width="0.0160%" height="15" fill="rgb(216,135,14)" fg:x="3325" fg:w="1"/><text x="53.3481%" y="447.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="53.0981%" y="421" width="0.0160%" height="15" fill="rgb(241,47,5)" fg:x="3325" fg:w="1"/><text x="53.3481%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="53.0981%" y="405" width="0.0160%" height="15" fill="rgb(233,42,35)" fg:x="3325" fg:w="1"/><text x="53.3481%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="53.0981%" y="389" width="0.0160%" height="15" fill="rgb(231,13,6)" fg:x="3325" fg:w="1"/><text x="53.3481%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.02%)</title><rect x="53.2418%" y="229" width="0.0160%" height="15" fill="rgb(207,181,40)" fg:x="3334" fg:w="1"/><text x="53.4918%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.03%)</title><rect x="53.2418%" y="261" width="0.0319%" height="15" fill="rgb(254,173,49)" fg:x="3334" fg:w="2"/><text x="53.4918%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.03%)</title><rect x="53.2418%" y="245" width="0.0319%" height="15" fill="rgb(221,1,38)" fg:x="3334" fg:w="2"/><text x="53.4918%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="53.2577%" y="229" width="0.0160%" height="15" fill="rgb(206,124,46)" fg:x="3335" fg:w="1"/><text x="53.5077%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.10%)</title><rect x="53.2098%" y="309" width="0.0958%" height="15" fill="rgb(249,21,11)" fg:x="3332" fg:w="6"/><text x="53.4598%" y="319.50"></text></g><g><title>alloc::string::String::push_str (5 samples, 0.08%)</title><rect x="53.2258%" y="293" width="0.0798%" height="15" fill="rgb(222,201,40)" fg:x="3333" fg:w="5"/><text x="53.4758%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.08%)</title><rect x="53.2258%" y="277" width="0.0798%" height="15" fill="rgb(235,61,29)" fg:x="3333" fg:w="5"/><text x="53.4758%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.03%)</title><rect x="53.2737%" y="261" width="0.0319%" height="15" fill="rgb(219,207,3)" fg:x="3336" fg:w="2"/><text x="53.5237%" y="271.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.03%)</title><rect x="53.2737%" y="245" width="0.0319%" height="15" fill="rgb(222,56,46)" fg:x="3336" fg:w="2"/><text x="53.5237%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.02%)</title><rect x="53.2897%" y="229" width="0.0160%" height="15" fill="rgb(239,76,54)" fg:x="3337" fg:w="1"/><text x="53.5397%" y="239.50"></text></g><g><title>core::fmt::Formatter::new (3 samples, 0.05%)</title><rect x="53.3057%" y="309" width="0.0479%" height="15" fill="rgb(231,124,27)" fg:x="3338" fg:w="3"/><text x="53.5557%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="53.4813%" y="117" width="0.0160%" height="15" fill="rgb(249,195,6)" fg:x="3349" fg:w="1"/><text x="53.7313%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.03%)</title><rect x="53.4973%" y="117" width="0.0319%" height="15" fill="rgb(237,174,47)" fg:x="3350" fg:w="2"/><text x="53.7473%" y="127.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="53.5612%" y="69" width="0.0319%" height="15" fill="rgb(206,201,31)" fg:x="3354" fg:w="2"/><text x="53.8112%" y="79.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="53.5612%" y="101" width="0.0479%" height="15" fill="rgb(231,57,52)" fg:x="3354" fg:w="3"/><text x="53.8112%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="53.5612%" y="85" width="0.0479%" height="15" fill="rgb(248,177,22)" fg:x="3354" fg:w="3"/><text x="53.8112%" y="95.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="53.5931%" y="69" width="0.0160%" height="15" fill="rgb(215,211,37)" fg:x="3356" fg:w="1"/><text x="53.8431%" y="79.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="53.5931%" y="53" width="0.0160%" height="15" fill="rgb(241,128,51)" fg:x="3356" fg:w="1"/><text x="53.8431%" y="63.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="53.5931%" y="37" width="0.0160%" height="15" fill="rgb(227,165,31)" fg:x="3356" fg:w="1"/><text x="53.8431%" y="47.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.03%)</title><rect x="53.6091%" y="101" width="0.0319%" height="15" fill="rgb(228,167,24)" fg:x="3357" fg:w="2"/><text x="53.8591%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.03%)</title><rect x="53.6091%" y="85" width="0.0319%" height="15" fill="rgb(228,143,12)" fg:x="3357" fg:w="2"/><text x="53.8591%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.18%)</title><rect x="53.5292%" y="117" width="0.1757%" height="15" fill="rgb(249,149,8)" fg:x="3352" fg:w="11"/><text x="53.7792%" y="127.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.06%)</title><rect x="53.6410%" y="101" width="0.0639%" height="15" fill="rgb(243,35,44)" fg:x="3359" fg:w="4"/><text x="53.8910%" y="111.50"></text></g><g><title>core::cmp::max (5 samples, 0.08%)</title><rect x="53.7049%" y="117" width="0.0798%" height="15" fill="rgb(246,89,9)" fg:x="3363" fg:w="5"/><text x="53.9549%" y="127.50"></text></g><g><title>core::cmp::Ord::max (5 samples, 0.08%)</title><rect x="53.7049%" y="101" width="0.0798%" height="15" fill="rgb(233,213,13)" fg:x="3363" fg:w="5"/><text x="53.9549%" y="111.50"></text></g><g><title>core::cmp::max_by (5 samples, 0.08%)</title><rect x="53.7049%" y="85" width="0.0798%" height="15" fill="rgb(233,141,41)" fg:x="3363" fg:w="5"/><text x="53.9549%" y="95.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.05%)</title><rect x="53.7368%" y="69" width="0.0479%" height="15" fill="rgb(239,167,4)" fg:x="3365" fg:w="3"/><text x="53.9868%" y="79.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.05%)</title><rect x="53.7368%" y="53" width="0.0479%" height="15" fill="rgb(209,217,16)" fg:x="3365" fg:w="3"/><text x="53.9868%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 0.38%)</title><rect x="53.4334%" y="133" width="0.3833%" height="15" fill="rgb(219,88,35)" fg:x="3346" fg:w="24"/><text x="53.6834%" y="143.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.03%)</title><rect x="53.7847%" y="117" width="0.0319%" height="15" fill="rgb(220,193,23)" fg:x="3368" fg:w="2"/><text x="54.0347%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="53.8007%" y="101" width="0.0160%" height="15" fill="rgb(230,90,52)" fg:x="3369" fg:w="1"/><text x="54.0507%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.48%)</title><rect x="53.4015%" y="181" width="0.4791%" height="15" fill="rgb(252,106,19)" fg:x="3344" fg:w="30"/><text x="53.6515%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 0.46%)</title><rect x="53.4174%" y="165" width="0.4631%" height="15" fill="rgb(206,74,20)" fg:x="3345" fg:w="29"/><text x="53.6674%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.46%)</title><rect x="53.4174%" y="149" width="0.4631%" height="15" fill="rgb(230,138,44)" fg:x="3345" fg:w="29"/><text x="53.6674%" y="159.50"></text></g><g><title>alloc::raw_vec::handle_reserve (4 samples, 0.06%)</title><rect x="53.8167%" y="133" width="0.0639%" height="15" fill="rgb(235,182,43)" fg:x="3370" fg:w="4"/><text x="54.0667%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.03%)</title><rect x="53.8486%" y="117" width="0.0319%" height="15" fill="rgb(242,16,51)" fg:x="3372" fg:w="2"/><text x="54.0986%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (31 samples, 0.50%)</title><rect x="53.4015%" y="197" width="0.4950%" height="15" fill="rgb(248,9,4)" fg:x="3344" fg:w="31"/><text x="53.6515%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="53.8805%" y="181" width="0.0160%" height="15" fill="rgb(210,31,22)" fg:x="3374" fg:w="1"/><text x="54.1305%" y="191.50"></text></g><g><title>memcpy@plt (1 samples, 0.02%)</title><rect x="53.8805%" y="165" width="0.0160%" height="15" fill="rgb(239,54,39)" fg:x="3374" fg:w="1"/><text x="54.1305%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (2 samples, 0.03%)</title><rect x="53.8965%" y="165" width="0.0319%" height="15" fill="rgb(230,99,41)" fg:x="3375" fg:w="2"/><text x="54.1465%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.02%)</title><rect x="53.9125%" y="149" width="0.0160%" height="15" fill="rgb(253,106,12)" fg:x="3376" fg:w="1"/><text x="54.1625%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.54%)</title><rect x="53.4015%" y="213" width="0.5430%" height="15" fill="rgb(213,46,41)" fg:x="3344" fg:w="34"/><text x="53.6515%" y="223.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (3 samples, 0.05%)</title><rect x="53.8965%" y="197" width="0.0479%" height="15" fill="rgb(215,133,35)" fg:x="3375" fg:w="3"/><text x="54.1465%" y="207.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (3 samples, 0.05%)</title><rect x="53.8965%" y="181" width="0.0479%" height="15" fill="rgb(213,28,5)" fg:x="3375" fg:w="3"/><text x="54.1465%" y="191.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="53.9285%" y="165" width="0.0160%" height="15" fill="rgb(215,77,49)" fg:x="3377" fg:w="1"/><text x="54.1785%" y="175.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="53.9285%" y="149" width="0.0160%" height="15" fill="rgb(248,100,22)" fg:x="3377" fg:w="1"/><text x="54.1785%" y="159.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="53.9285%" y="133" width="0.0160%" height="15" fill="rgb(208,67,9)" fg:x="3377" fg:w="1"/><text x="54.1785%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (38 samples, 0.61%)</title><rect x="53.3536%" y="261" width="0.6068%" height="15" fill="rgb(219,133,21)" fg:x="3341" fg:w="38"/><text x="53.6036%" y="271.50"></text></g><g><title>alloc::string::String::push_str (38 samples, 0.61%)</title><rect x="53.3536%" y="245" width="0.6068%" height="15" fill="rgb(246,46,29)" fg:x="3341" fg:w="38"/><text x="53.6036%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (38 samples, 0.61%)</title><rect x="53.3536%" y="229" width="0.6068%" height="15" fill="rgb(246,185,52)" fg:x="3341" fg:w="38"/><text x="53.6036%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="53.9444%" y="213" width="0.0160%" height="15" fill="rgb(252,136,11)" fg:x="3378" fg:w="1"/><text x="54.1944%" y="223.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="53.9444%" y="197" width="0.0160%" height="15" fill="rgb(219,138,53)" fg:x="3378" fg:w="1"/><text x="54.1944%" y="207.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.02%)</title><rect x="53.9604%" y="261" width="0.0160%" height="15" fill="rgb(211,51,23)" fg:x="3379" fg:w="1"/><text x="54.2104%" y="271.50"></text></g><g><title>&lt;simd::material::Color as core::fmt::Display&gt;::fmt (51 samples, 0.81%)</title><rect x="53.1779%" y="341" width="0.8144%" height="15" fill="rgb(247,221,28)" fg:x="3330" fg:w="51"/><text x="53.4279%" y="351.50"></text></g><g><title>core::fmt::write (51 samples, 0.81%)</title><rect x="53.1779%" y="325" width="0.8144%" height="15" fill="rgb(251,222,45)" fg:x="3330" fg:w="51"/><text x="53.4279%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (40 samples, 0.64%)</title><rect x="53.3536%" y="309" width="0.6388%" height="15" fill="rgb(217,162,53)" fg:x="3341" fg:w="40"/><text x="53.6036%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (40 samples, 0.64%)</title><rect x="53.3536%" y="293" width="0.6388%" height="15" fill="rgb(229,93,14)" fg:x="3341" fg:w="40"/><text x="53.6036%" y="303.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (40 samples, 0.64%)</title><rect x="53.3536%" y="277" width="0.6388%" height="15" fill="rgb(209,67,49)" fg:x="3341" fg:w="40"/><text x="53.6036%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="53.9764%" y="261" width="0.0160%" height="15" fill="rgb(213,87,29)" fg:x="3380" fg:w="1"/><text x="54.2264%" y="271.50"></text></g><g><title>alloc::string::String::new (1 samples, 0.02%)</title><rect x="53.9923%" y="341" width="0.0160%" height="15" fill="rgb(205,151,52)" fg:x="3381" fg:w="1"/><text x="54.2423%" y="351.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (57 samples, 0.91%)</title><rect x="53.1619%" y="357" width="0.9103%" height="15" fill="rgb(253,215,39)" fg:x="3329" fg:w="57"/><text x="53.4119%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (4 samples, 0.06%)</title><rect x="54.0083%" y="341" width="0.0639%" height="15" fill="rgb(221,220,41)" fg:x="3382" fg:w="4"/><text x="54.2583%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 1.04%)</title><rect x="53.1140%" y="405" width="1.0380%" height="15" fill="rgb(218,133,21)" fg:x="3326" fg:w="65"/><text x="53.3640%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (65 samples, 1.04%)</title><rect x="53.1140%" y="389" width="1.0380%" height="15" fill="rgb(221,193,43)" fg:x="3326" fg:w="65"/><text x="53.3640%" y="399.50"></text></g><g><title>simd::cpu_compute::_{{closure}} (63 samples, 1.01%)</title><rect x="53.1460%" y="373" width="1.0061%" height="15" fill="rgb(240,128,52)" fg:x="3328" fg:w="63"/><text x="53.3960%" y="383.50"></text></g><g><title>&lt;simd::material::Color as core::convert::From&lt;simd::math::Vec3&gt;&gt;::from (5 samples, 0.08%)</title><rect x="54.0722%" y="357" width="0.0798%" height="15" fill="rgb(253,114,12)" fg:x="3386" fg:w="5"/><text x="54.3222%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="54.2319%" y="309" width="0.0319%" height="15" fill="rgb(215,223,47)" fg:x="3396" fg:w="2"/><text x="54.4819%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.2478%" y="293" width="0.0160%" height="15" fill="rgb(248,225,23)" fg:x="3397" fg:w="1"/><text x="54.4978%" y="303.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="54.2478%" y="277" width="0.0160%" height="15" fill="rgb(250,108,0)" fg:x="3397" fg:w="1"/><text x="54.4978%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="54.2638%" y="309" width="0.0160%" height="15" fill="rgb(228,208,7)" fg:x="3398" fg:w="1"/><text x="54.5138%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="54.2638%" y="293" width="0.0160%" height="15" fill="rgb(244,45,10)" fg:x="3398" fg:w="1"/><text x="54.5138%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="54.2638%" y="277" width="0.0160%" height="15" fill="rgb(207,125,25)" fg:x="3398" fg:w="1"/><text x="54.5138%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="54.2638%" y="261" width="0.0160%" height="15" fill="rgb(210,195,18)" fg:x="3398" fg:w="1"/><text x="54.5138%" y="271.50"></text></g><g><title>memcpy@plt (1 samples, 0.02%)</title><rect x="54.2638%" y="245" width="0.0160%" height="15" fill="rgb(249,80,12)" fg:x="3398" fg:w="1"/><text x="54.5138%" y="255.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="54.2958%" y="245" width="0.0160%" height="15" fill="rgb(221,65,9)" fg:x="3400" fg:w="1"/><text x="54.5458%" y="255.50"></text></g><g><title>alloc::str::join_generic_copy::_{{closure}}::_{{closure}} (1 samples, 0.02%)</title><rect x="54.3437%" y="229" width="0.0160%" height="15" fill="rgb(235,49,36)" fg:x="3403" fg:w="1"/><text x="54.5937%" y="239.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (1 samples, 0.02%)</title><rect x="54.3437%" y="213" width="0.0160%" height="15" fill="rgb(225,32,20)" fg:x="3403" fg:w="1"/><text x="54.5937%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.02%)</title><rect x="54.3437%" y="197" width="0.0160%" height="15" fill="rgb(215,141,46)" fg:x="3403" fg:w="1"/><text x="54.5937%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (6 samples, 0.10%)</title><rect x="54.2798%" y="309" width="0.0958%" height="15" fill="rgb(250,160,47)" fg:x="3399" fg:w="6"/><text x="54.5298%" y="319.50"></text></g><g><title>alloc::str::join_generic_copy::_{{closure}} (6 samples, 0.10%)</title><rect x="54.2798%" y="293" width="0.0958%" height="15" fill="rgb(216,222,40)" fg:x="3399" fg:w="6"/><text x="54.5298%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.10%)</title><rect x="54.2798%" y="277" width="0.0958%" height="15" fill="rgb(234,217,39)" fg:x="3399" fg:w="6"/><text x="54.5298%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.10%)</title><rect x="54.2798%" y="261" width="0.0958%" height="15" fill="rgb(207,178,40)" fg:x="3399" fg:w="6"/><text x="54.5298%" y="271.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (4 samples, 0.06%)</title><rect x="54.3117%" y="245" width="0.0639%" height="15" fill="rgb(221,136,13)" fg:x="3401" fg:w="4"/><text x="54.5617%" y="255.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.02%)</title><rect x="54.3596%" y="229" width="0.0160%" height="15" fill="rgb(249,199,10)" fg:x="3404" fg:w="1"/><text x="54.6096%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.02%)</title><rect x="54.3756%" y="309" width="0.0160%" height="15" fill="rgb(249,222,13)" fg:x="3405" fg:w="1"/><text x="54.6256%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="54.3756%" y="293" width="0.0160%" height="15" fill="rgb(244,185,38)" fg:x="3405" fg:w="1"/><text x="54.6256%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.05%)</title><rect x="54.4235%" y="245" width="0.0479%" height="15" fill="rgb(236,202,9)" fg:x="3408" fg:w="3"/><text x="54.6735%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (86 samples, 1.37%)</title><rect x="53.1140%" y="533" width="1.3734%" height="15" fill="rgb(250,229,37)" fg:x="3326" fg:w="86"/><text x="53.3640%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (86 samples, 1.37%)</title><rect x="53.1140%" y="517" width="1.3734%" height="15" fill="rgb(206,174,23)" fg:x="3326" fg:w="86"/><text x="53.3640%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (86 samples, 1.37%)</title><rect x="53.1140%" y="501" width="1.3734%" height="15" fill="rgb(211,33,43)" fg:x="3326" fg:w="86"/><text x="53.3640%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (86 samples, 1.37%)</title><rect x="53.1140%" y="485" width="1.3734%" height="15" fill="rgb(245,58,50)" fg:x="3326" fg:w="86"/><text x="53.3640%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (86 samples, 1.37%)</title><rect x="53.1140%" y="469" width="1.3734%" height="15" fill="rgb(244,68,36)" fg:x="3326" fg:w="86"/><text x="53.3640%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (86 samples, 1.37%)</title><rect x="53.1140%" y="453" width="1.3734%" height="15" fill="rgb(232,229,15)" fg:x="3326" fg:w="86"/><text x="53.3640%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (86 samples, 1.37%)</title><rect x="53.1140%" y="437" width="1.3734%" height="15" fill="rgb(254,30,23)" fg:x="3326" fg:w="86"/><text x="53.3640%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (86 samples, 1.37%)</title><rect x="53.1140%" y="421" width="1.3734%" height="15" fill="rgb(235,160,14)" fg:x="3326" fg:w="86"/><text x="53.3640%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 0.34%)</title><rect x="54.1520%" y="405" width="0.3354%" height="15" fill="rgb(212,155,44)" fg:x="3391" fg:w="21"/><text x="54.4020%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (21 samples, 0.34%)</title><rect x="54.1520%" y="389" width="0.3354%" height="15" fill="rgb(226,2,50)" fg:x="3391" fg:w="21"/><text x="54.4020%" y="399.50"></text></g><g><title>simd::cpu_compute::_{{closure}} (21 samples, 0.34%)</title><rect x="54.1520%" y="373" width="0.3354%" height="15" fill="rgb(234,177,6)" fg:x="3391" fg:w="21"/><text x="54.4020%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (21 samples, 0.34%)</title><rect x="54.1520%" y="357" width="0.3354%" height="15" fill="rgb(217,24,9)" fg:x="3391" fg:w="21"/><text x="54.4020%" y="367.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (21 samples, 0.34%)</title><rect x="54.1520%" y="341" width="0.3354%" height="15" fill="rgb(220,13,46)" fg:x="3391" fg:w="21"/><text x="54.4020%" y="351.50"></text></g><g><title>alloc::str::join_generic_copy (21 samples, 0.34%)</title><rect x="54.1520%" y="325" width="0.3354%" height="15" fill="rgb(239,221,27)" fg:x="3391" fg:w="21"/><text x="54.4020%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (6 samples, 0.10%)</title><rect x="54.3916%" y="309" width="0.0958%" height="15" fill="rgb(222,198,25)" fg:x="3406" fg:w="6"/><text x="54.6416%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (4 samples, 0.06%)</title><rect x="54.4235%" y="293" width="0.0639%" height="15" fill="rgb(211,99,13)" fg:x="3408" fg:w="4"/><text x="54.6735%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (4 samples, 0.06%)</title><rect x="54.4235%" y="277" width="0.0639%" height="15" fill="rgb(232,111,31)" fg:x="3408" fg:w="4"/><text x="54.6735%" y="287.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.06%)</title><rect x="54.4235%" y="261" width="0.0639%" height="15" fill="rgb(245,82,37)" fg:x="3408" fg:w="4"/><text x="54.6735%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.02%)</title><rect x="54.4714%" y="245" width="0.0160%" height="15" fill="rgb(227,149,46)" fg:x="3411" fg:w="1"/><text x="54.7214%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.13%)</title><rect x="55.6212%" y="517" width="0.1278%" height="15" fill="rgb(218,36,50)" fg:x="3483" fg:w="8"/><text x="55.8712%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.06%)</title><rect x="55.6851%" y="501" width="0.0639%" height="15" fill="rgb(226,80,48)" fg:x="3487" fg:w="4"/><text x="55.9351%" y="511.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Add&gt;::add (8 samples, 0.13%)</title><rect x="56.1322%" y="501" width="0.1278%" height="15" fill="rgb(238,224,15)" fg:x="3515" fg:w="8"/><text x="56.3822%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast_const (1 samples, 0.02%)</title><rect x="56.5634%" y="405" width="0.0160%" height="15" fill="rgb(241,136,10)" fg:x="3542" fg:w="1"/><text x="56.8134%" y="415.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (6 samples, 0.10%)</title><rect x="56.5315%" y="437" width="0.0958%" height="15" fill="rgb(208,32,45)" fg:x="3540" fg:w="6"/><text x="56.7815%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.08%)</title><rect x="56.5474%" y="421" width="0.0798%" height="15" fill="rgb(207,135,9)" fg:x="3541" fg:w="5"/><text x="56.7974%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (3 samples, 0.05%)</title><rect x="56.5794%" y="405" width="0.0479%" height="15" fill="rgb(206,86,44)" fg:x="3543" fg:w="3"/><text x="56.8294%" y="415.50"></text></g><g><title>&lt;alloc::rc::RcBox&lt;T&gt; as alloc::rc::RcInnerPtr&gt;::strong_ref (1 samples, 0.02%)</title><rect x="56.6432%" y="421" width="0.0160%" height="15" fill="rgb(245,177,15)" fg:x="3547" fg:w="1"/><text x="56.8932%" y="431.50"></text></g><g><title>alloc::rc::RcInnerPtr::strong (11 samples, 0.18%)</title><rect x="56.6592%" y="421" width="0.1757%" height="15" fill="rgb(206,64,50)" fg:x="3548" fg:w="11"/><text x="56.9092%" y="431.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (14 samples, 0.22%)</title><rect x="56.6273%" y="437" width="0.2236%" height="15" fill="rgb(234,36,40)" fg:x="3546" fg:w="14"/><text x="56.8773%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="56.8349%" y="421" width="0.0160%" height="15" fill="rgb(213,64,8)" fg:x="3559" fg:w="1"/><text x="57.0849%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="56.8349%" y="405" width="0.0160%" height="15" fill="rgb(210,75,36)" fg:x="3559" fg:w="1"/><text x="57.0849%" y="415.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="56.8349%" y="389" width="0.0160%" height="15" fill="rgb(229,88,21)" fg:x="3559" fg:w="1"/><text x="57.0849%" y="399.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="56.8349%" y="373" width="0.0160%" height="15" fill="rgb(252,204,47)" fg:x="3559" fg:w="1"/><text x="57.0849%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;rand::rngs::thread::ThreadRng&gt; (40 samples, 0.64%)</title><rect x="56.2600%" y="485" width="0.6388%" height="15" fill="rgb(208,77,27)" fg:x="3523" fg:w="40"/><text x="56.5100%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::UnsafeCell&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;rand_chacha::chacha::ChaCha12Core,rand_core::os::OsRng&gt;&gt;&gt;&gt; (36 samples, 0.57%)</title><rect x="56.3239%" y="469" width="0.5749%" height="15" fill="rgb(221,76,26)" fg:x="3527" fg:w="36"/><text x="56.5739%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.54%)</title><rect x="56.3558%" y="453" width="0.5430%" height="15" fill="rgb(225,139,18)" fg:x="3529" fg:w="34"/><text x="56.6058%" y="463.50"></text></g><g><title>alloc::rc::RcInnerPtr::strong (3 samples, 0.05%)</title><rect x="56.8508%" y="437" width="0.0479%" height="15" fill="rgb(230,137,11)" fg:x="3560" fg:w="3"/><text x="57.1008%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (3 samples, 0.05%)</title><rect x="56.8508%" y="421" width="0.0479%" height="15" fill="rgb(212,28,1)" fg:x="3560" fg:w="3"/><text x="57.1008%" y="431.50"></text></g><g><title>&lt;f32 as rand::distributions::utils::FloatSIMDUtils&gt;::cast_from_int (1 samples, 0.02%)</title><rect x="57.4417%" y="453" width="0.0160%" height="15" fill="rgb(248,164,17)" fg:x="3597" fg:w="1"/><text x="57.6917%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.03%)</title><rect x="57.6014%" y="405" width="0.0319%" height="15" fill="rgb(222,171,42)" fg:x="3607" fg:w="2"/><text x="57.8514%" y="415.50"></text></g><g><title>&lt;rand_chacha::chacha::Array64&lt;T&gt; as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (9 samples, 0.14%)</title><rect x="57.9048%" y="373" width="0.1437%" height="15" fill="rgb(243,84,45)" fg:x="3626" fg:w="9"/><text x="58.1548%" y="383.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.18%)</title><rect x="58.3839%" y="309" width="0.1757%" height="15" fill="rgb(252,49,23)" fg:x="3656" fg:w="11"/><text x="58.6339%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (4 samples, 0.06%)</title><rect x="58.5915%" y="293" width="0.0639%" height="15" fill="rgb(215,19,7)" fg:x="3669" fg:w="4"/><text x="58.8415%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.02%)</title><rect x="58.6554%" y="293" width="0.0160%" height="15" fill="rgb(238,81,41)" fg:x="3673" fg:w="1"/><text x="58.9054%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.61%)</title><rect x="58.1124%" y="325" width="0.6068%" height="15" fill="rgb(210,199,37)" fg:x="3639" fg:w="38"/><text x="58.3624%" y="335.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (10 samples, 0.16%)</title><rect x="58.5596%" y="309" width="0.1597%" height="15" fill="rgb(244,192,49)" fg:x="3667" fg:w="10"/><text x="58.8096%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (3 samples, 0.05%)</title><rect x="58.6714%" y="293" width="0.0479%" height="15" fill="rgb(226,211,11)" fg:x="3674" fg:w="3"/><text x="58.9214%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.02%)</title><rect x="58.7193%" y="293" width="0.0160%" height="15" fill="rgb(236,162,54)" fg:x="3677" fg:w="1"/><text x="58.9693%" y="303.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (47 samples, 0.75%)</title><rect x="58.0485%" y="341" width="0.7506%" height="15" fill="rgb(220,229,9)" fg:x="3635" fg:w="47"/><text x="58.2985%" y="351.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (5 samples, 0.08%)</title><rect x="58.7193%" y="325" width="0.0798%" height="15" fill="rgb(250,87,22)" fg:x="3677" fg:w="5"/><text x="58.9693%" y="335.50"></text></g><g><title>rand_chacha::guts::refill_wide (5 samples, 0.08%)</title><rect x="58.7193%" y="309" width="0.0798%" height="15" fill="rgb(239,43,17)" fg:x="3677" fg:w="5"/><text x="58.9693%" y="319.50"></text></g><g><title>std_detect::detect::arch::x86::__is_feature_detected::avx2 (4 samples, 0.06%)</title><rect x="58.7352%" y="293" width="0.0639%" height="15" fill="rgb(231,177,25)" fg:x="3678" fg:w="4"/><text x="58.9852%" y="303.50"></text></g><g><title>std_detect::detect::check_for (1 samples, 0.02%)</title><rect x="58.7831%" y="277" width="0.0160%" height="15" fill="rgb(219,179,1)" fg:x="3681" fg:w="1"/><text x="59.0331%" y="287.50"></text></g><g><title>std_detect::detect::cache::test (1 samples, 0.02%)</title><rect x="58.7831%" y="261" width="0.0160%" height="15" fill="rgb(238,219,53)" fg:x="3681" fg:w="1"/><text x="59.0331%" y="271.50"></text></g><g><title>std_detect::detect::cache::Cache::test (1 samples, 0.02%)</title><rect x="58.7831%" y="245" width="0.0160%" height="15" fill="rgb(232,167,36)" fg:x="3681" fg:w="1"/><text x="59.0331%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="58.7831%" y="229" width="0.0160%" height="15" fill="rgb(244,19,51)" fg:x="3681" fg:w="1"/><text x="59.0331%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="58.7831%" y="213" width="0.0160%" height="15" fill="rgb(224,6,22)" fg:x="3681" fg:w="1"/><text x="59.0331%" y="223.50"></text></g><g><title>rand::rng::Rng::gen (120 samples, 1.92%)</title><rect x="56.8988%" y="485" width="1.9163%" height="15" fill="rgb(224,145,5)" fg:x="3563" fg:w="120"/><text x="57.1488%" y="495.50">r..</text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (110 samples, 1.76%)</title><rect x="57.0584%" y="469" width="1.7566%" height="15" fill="rgb(234,130,49)" fg:x="3573" fg:w="110"/><text x="57.3084%" y="479.50"></text></g><g><title>rand::rng::Rng::gen (85 samples, 1.36%)</title><rect x="57.4577%" y="453" width="1.3574%" height="15" fill="rgb(254,6,2)" fg:x="3598" fg:w="85"/><text x="57.7077%" y="463.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (85 samples, 1.36%)</title><rect x="57.4577%" y="437" width="1.3574%" height="15" fill="rgb(208,96,46)" fg:x="3598" fg:w="85"/><text x="57.7077%" y="447.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (82 samples, 1.31%)</title><rect x="57.5056%" y="421" width="1.3095%" height="15" fill="rgb(239,3,39)" fg:x="3601" fg:w="82"/><text x="57.7556%" y="431.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (74 samples, 1.18%)</title><rect x="57.6333%" y="405" width="1.1817%" height="15" fill="rgb(233,210,1)" fg:x="3609" fg:w="74"/><text x="57.8833%" y="415.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (74 samples, 1.18%)</title><rect x="57.6333%" y="389" width="1.1817%" height="15" fill="rgb(244,137,37)" fg:x="3609" fg:w="74"/><text x="57.8833%" y="399.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (48 samples, 0.77%)</title><rect x="58.0485%" y="373" width="0.7665%" height="15" fill="rgb(240,136,2)" fg:x="3635" fg:w="48"/><text x="58.2985%" y="383.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (48 samples, 0.77%)</title><rect x="58.0485%" y="357" width="0.7665%" height="15" fill="rgb(239,18,37)" fg:x="3635" fg:w="48"/><text x="58.2985%" y="367.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (1 samples, 0.02%)</title><rect x="58.7991%" y="341" width="0.0160%" height="15" fill="rgb(218,185,22)" fg:x="3682" fg:w="1"/><text x="59.0491%" y="351.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="58.7991%" y="325" width="0.0160%" height="15" fill="rgb(225,218,4)" fg:x="3682" fg:w="1"/><text x="59.0491%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (3 samples, 0.05%)</title><rect x="59.0067%" y="453" width="0.0479%" height="15" fill="rgb(230,182,32)" fg:x="3695" fg:w="3"/><text x="59.2567%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (2 samples, 0.03%)</title><rect x="59.1824%" y="437" width="0.0319%" height="15" fill="rgb(242,56,43)" fg:x="3706" fg:w="2"/><text x="59.4324%" y="447.50"></text></g><g><title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (2 samples, 0.03%)</title><rect x="59.1824%" y="421" width="0.0319%" height="15" fill="rgb(233,99,24)" fg:x="3706" fg:w="2"/><text x="59.4324%" y="431.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="59.5337%" y="389" width="0.0160%" height="15" fill="rgb(234,209,42)" fg:x="3728" fg:w="1"/><text x="59.7837%" y="399.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (22 samples, 0.35%)</title><rect x="59.2143%" y="437" width="0.3513%" height="15" fill="rgb(227,7,12)" fg:x="3708" fg:w="22"/><text x="59.4643%" y="447.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (13 samples, 0.21%)</title><rect x="59.3580%" y="421" width="0.2076%" height="15" fill="rgb(245,203,43)" fg:x="3717" fg:w="13"/><text x="59.6080%" y="431.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.03%)</title><rect x="59.5337%" y="405" width="0.0319%" height="15" fill="rgb(238,205,33)" fg:x="3728" fg:w="2"/><text x="59.7837%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="59.5497%" y="389" width="0.0160%" height="15" fill="rgb(231,56,7)" fg:x="3729" fg:w="1"/><text x="59.7997%" y="399.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (7 samples, 0.11%)</title><rect x="59.6774%" y="405" width="0.1118%" height="15" fill="rgb(244,186,29)" fg:x="3737" fg:w="7"/><text x="59.9274%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7 samples, 0.11%)</title><rect x="59.6774%" y="389" width="0.1118%" height="15" fill="rgb(234,111,31)" fg:x="3737" fg:w="7"/><text x="59.9274%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.06%)</title><rect x="59.7253%" y="373" width="0.0639%" height="15" fill="rgb(241,149,10)" fg:x="3740" fg:w="4"/><text x="59.9753%" y="383.50"></text></g><g><title>alloc::rc::RcInnerPtr::strong (10 samples, 0.16%)</title><rect x="60.1565%" y="389" width="0.1597%" height="15" fill="rgb(249,206,44)" fg:x="3767" fg:w="10"/><text x="60.4065%" y="399.50"></text></g><g><title>rand::random (257 samples, 4.10%)</title><rect x="56.2600%" y="501" width="4.1041%" height="15" fill="rgb(251,153,30)" fg:x="3523" fg:w="257"/><text x="56.5100%" y="511.50">rand..</text></g><g><title>rand::rngs::thread::thread_rng (97 samples, 1.55%)</title><rect x="58.8151%" y="485" width="1.5490%" height="15" fill="rgb(239,152,38)" fg:x="3683" fg:w="97"/><text x="59.0651%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (91 samples, 1.45%)</title><rect x="58.9109%" y="469" width="1.4532%" height="15" fill="rgb(249,139,47)" fg:x="3689" fg:w="91"/><text x="59.1609%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (82 samples, 1.31%)</title><rect x="59.0546%" y="453" width="1.3095%" height="15" fill="rgb(244,64,35)" fg:x="3698" fg:w="82"/><text x="59.3046%" y="463.50"></text></g><g><title>rand::rngs::thread::thread_rng::_{{closure}} (50 samples, 0.80%)</title><rect x="59.5656%" y="437" width="0.7985%" height="15" fill="rgb(216,46,15)" fg:x="3730" fg:w="50"/><text x="59.8156%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.80%)</title><rect x="59.5656%" y="421" width="0.7985%" height="15" fill="rgb(250,74,19)" fg:x="3730" fg:w="50"/><text x="59.8156%" y="431.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (36 samples, 0.57%)</title><rect x="59.7892%" y="405" width="0.5749%" height="15" fill="rgb(249,42,33)" fg:x="3744" fg:w="36"/><text x="60.0392%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (3 samples, 0.05%)</title><rect x="60.3162%" y="389" width="0.0479%" height="15" fill="rgb(242,149,17)" fg:x="3777" fg:w="3"/><text x="60.5662%" y="399.50"></text></g><g><title>&lt;simd::math::Vec3 as core::clone::Clone&gt;::clone (31 samples, 0.50%)</title><rect x="61.0508%" y="485" width="0.4950%" height="15" fill="rgb(244,29,21)" fg:x="3823" fg:w="31"/><text x="61.3008%" y="495.50"></text></g><g><title>simd::math::Vec3::normalized (78 samples, 1.25%)</title><rect x="60.3641%" y="501" width="1.2456%" height="15" fill="rgb(220,130,37)" fg:x="3780" fg:w="78"/><text x="60.6141%" y="511.50"></text></g><g><title>simd::math::Vec3::normalize (4 samples, 0.06%)</title><rect x="61.5458%" y="485" width="0.0639%" height="15" fill="rgb(211,67,2)" fg:x="3854" fg:w="4"/><text x="61.7958%" y="495.50"></text></g><g><title>simd::math::Vec3::length (4 samples, 0.06%)</title><rect x="61.5458%" y="469" width="0.0639%" height="15" fill="rgb(235,68,52)" fg:x="3854" fg:w="4"/><text x="61.7958%" y="479.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (3 samples, 0.05%)</title><rect x="61.5618%" y="453" width="0.0479%" height="15" fill="rgb(246,142,3)" fg:x="3855" fg:w="3"/><text x="61.8118%" y="463.50"></text></g><g><title>__powisf2 (3 samples, 0.05%)</title><rect x="61.5618%" y="437" width="0.0479%" height="15" fill="rgb(241,25,7)" fg:x="3855" fg:w="3"/><text x="61.8118%" y="447.50"></text></g><g><title>compiler_builtins::float::pow::__powisf2 (3 samples, 0.05%)</title><rect x="61.5618%" y="421" width="0.0479%" height="15" fill="rgb(242,119,39)" fg:x="3855" fg:w="3"/><text x="61.8118%" y="431.50"></text></g><g><title>compiler_builtins::float::pow::pow (3 samples, 0.05%)</title><rect x="61.5618%" y="405" width="0.0479%" height="15" fill="rgb(241,98,45)" fg:x="3855" fg:w="3"/><text x="61.8118%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="62.7914%" y="453" width="0.0160%" height="15" fill="rgb(254,28,30)" fg:x="3932" fg:w="1"/><text x="63.0414%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.03%)</title><rect x="62.7914%" y="469" width="0.0319%" height="15" fill="rgb(241,142,54)" fg:x="3932" fg:w="2"/><text x="63.0414%" y="479.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="62.8074%" y="453" width="0.0160%" height="15" fill="rgb(222,85,15)" fg:x="3933" fg:w="1"/><text x="63.0574%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="62.8074%" y="437" width="0.0160%" height="15" fill="rgb(210,85,47)" fg:x="3933" fg:w="1"/><text x="63.0574%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="62.8074%" y="421" width="0.0160%" height="15" fill="rgb(224,206,25)" fg:x="3933" fg:w="1"/><text x="63.0574%" y="431.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.05%)</title><rect x="62.7914%" y="485" width="0.0479%" height="15" fill="rgb(243,201,19)" fg:x="3932" fg:w="3"/><text x="63.0414%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="62.8234%" y="469" width="0.0160%" height="15" fill="rgb(236,59,4)" fg:x="3934" fg:w="1"/><text x="63.0734%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="62.8234%" y="453" width="0.0160%" height="15" fill="rgb(254,179,45)" fg:x="3934" fg:w="1"/><text x="63.0734%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.02%)</title><rect x="62.8234%" y="437" width="0.0160%" height="15" fill="rgb(226,14,10)" fg:x="3934" fg:w="1"/><text x="63.0734%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.10%)</title><rect x="62.8393%" y="485" width="0.0958%" height="15" fill="rgb(244,27,41)" fg:x="3935" fg:w="6"/><text x="63.0893%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.03%)</title><rect x="62.9032%" y="469" width="0.0319%" height="15" fill="rgb(235,35,32)" fg:x="3939" fg:w="2"/><text x="63.1532%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="62.9192%" y="453" width="0.0160%" height="15" fill="rgb(218,68,31)" fg:x="3940" fg:w="1"/><text x="63.1692%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.21%)</title><rect x="64.4043%" y="469" width="0.2076%" height="15" fill="rgb(207,120,37)" fg:x="4033" fg:w="13"/><text x="64.6543%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="64.6119%" y="469" width="0.0160%" height="15" fill="rgb(227,98,0)" fg:x="4046" fg:w="1"/><text x="64.8619%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="64.6119%" y="453" width="0.0160%" height="15" fill="rgb(207,7,3)" fg:x="4046" fg:w="1"/><text x="64.8619%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (3 samples, 0.05%)</title><rect x="65.2667%" y="453" width="0.0479%" height="15" fill="rgb(206,98,19)" fg:x="4087" fg:w="3"/><text x="65.5167%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (151 samples, 2.41%)</title><rect x="62.9352%" y="485" width="2.4114%" height="15" fill="rgb(217,5,26)" fg:x="3941" fg:w="151"/><text x="63.1852%" y="495.50">&lt;c..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (45 samples, 0.72%)</title><rect x="64.6279%" y="469" width="0.7186%" height="15" fill="rgb(235,190,38)" fg:x="4047" fg:w="45"/><text x="64.8779%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2 samples, 0.03%)</title><rect x="65.3146%" y="453" width="0.0319%" height="15" fill="rgb(247,86,24)" fg:x="4090" fg:w="2"/><text x="65.5646%" y="463.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Add&gt;::add (11 samples, 0.18%)</title><rect x="65.7617%" y="469" width="0.1757%" height="15" fill="rgb(205,101,16)" fg:x="4118" fg:w="11"/><text x="66.0117%" y="479.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (8 samples, 0.13%)</title><rect x="66.2089%" y="389" width="0.1278%" height="15" fill="rgb(246,168,33)" fg:x="4146" fg:w="8"/><text x="66.4589%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (8 samples, 0.13%)</title><rect x="66.2089%" y="373" width="0.1278%" height="15" fill="rgb(231,114,1)" fg:x="4146" fg:w="8"/><text x="66.4589%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast_const (2 samples, 0.03%)</title><rect x="66.3047%" y="357" width="0.0319%" height="15" fill="rgb(207,184,53)" fg:x="4152" fg:w="2"/><text x="66.5547%" y="367.50"></text></g><g><title>&lt;alloc::rc::RcBox&lt;T&gt; as alloc::rc::RcInnerPtr&gt;::strong_ref (1 samples, 0.02%)</title><rect x="66.3845%" y="373" width="0.0160%" height="15" fill="rgb(224,95,51)" fg:x="4157" fg:w="1"/><text x="66.6345%" y="383.50"></text></g><g><title>alloc::rc::RcInnerPtr::strong (12 samples, 0.19%)</title><rect x="66.4005%" y="373" width="0.1916%" height="15" fill="rgb(212,188,45)" fg:x="4158" fg:w="12"/><text x="66.6505%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;rand::rngs::thread::ThreadRng&gt; (35 samples, 0.56%)</title><rect x="66.0492%" y="437" width="0.5589%" height="15" fill="rgb(223,154,38)" fg:x="4136" fg:w="35"/><text x="66.2992%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::UnsafeCell&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;rand_chacha::chacha::ChaCha12Core,rand_core::os::OsRng&gt;&gt;&gt;&gt; (32 samples, 0.51%)</title><rect x="66.0971%" y="421" width="0.5110%" height="15" fill="rgb(251,22,52)" fg:x="4139" fg:w="32"/><text x="66.3471%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.43%)</title><rect x="66.1769%" y="405" width="0.4312%" height="15" fill="rgb(229,209,22)" fg:x="4144" fg:w="27"/><text x="66.4269%" y="415.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (17 samples, 0.27%)</title><rect x="66.3366%" y="389" width="0.2715%" height="15" fill="rgb(234,138,34)" fg:x="4154" fg:w="17"/><text x="66.5866%" y="399.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="66.5921%" y="373" width="0.0160%" height="15" fill="rgb(212,95,11)" fg:x="4170" fg:w="1"/><text x="66.8421%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="66.5921%" y="357" width="0.0160%" height="15" fill="rgb(240,179,47)" fg:x="4170" fg:w="1"/><text x="66.8421%" y="367.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="66.5921%" y="341" width="0.0160%" height="15" fill="rgb(240,163,11)" fg:x="4170" fg:w="1"/><text x="66.8421%" y="351.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="66.5921%" y="325" width="0.0160%" height="15" fill="rgb(236,37,12)" fg:x="4170" fg:w="1"/><text x="66.8421%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.14%)</title><rect x="67.0233%" y="357" width="0.1437%" height="15" fill="rgb(232,164,16)" fg:x="4197" fg:w="9"/><text x="67.2733%" y="367.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (6 samples, 0.10%)</title><rect x="67.0712%" y="341" width="0.0958%" height="15" fill="rgb(244,205,15)" fg:x="4200" fg:w="6"/><text x="67.3212%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.10%)</title><rect x="67.0712%" y="325" width="0.0958%" height="15" fill="rgb(223,117,47)" fg:x="4200" fg:w="6"/><text x="67.3212%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.06%)</title><rect x="67.1032%" y="309" width="0.0639%" height="15" fill="rgb(244,107,35)" fg:x="4202" fg:w="4"/><text x="67.3532%" y="319.50"></text></g><g><title>&lt;rand_chacha::chacha::Array64&lt;T&gt; as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (2 samples, 0.03%)</title><rect x="67.2948%" y="325" width="0.0319%" height="15" fill="rgb(205,140,8)" fg:x="4214" fg:w="2"/><text x="67.5448%" y="335.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.06%)</title><rect x="67.6621%" y="261" width="0.0639%" height="15" fill="rgb(228,84,46)" fg:x="4237" fg:w="4"/><text x="67.9121%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (4 samples, 0.06%)</title><rect x="67.7260%" y="245" width="0.0639%" height="15" fill="rgb(254,188,9)" fg:x="4241" fg:w="4"/><text x="67.9760%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.46%)</title><rect x="67.3427%" y="277" width="0.4631%" height="15" fill="rgb(206,112,54)" fg:x="4217" fg:w="29"/><text x="67.5927%" y="287.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (5 samples, 0.08%)</title><rect x="67.7260%" y="261" width="0.0798%" height="15" fill="rgb(216,84,49)" fg:x="4241" fg:w="5"/><text x="67.9760%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.02%)</title><rect x="67.7898%" y="245" width="0.0160%" height="15" fill="rgb(214,194,35)" fg:x="4245" fg:w="1"/><text x="68.0398%" y="255.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (32 samples, 0.51%)</title><rect x="67.3267%" y="293" width="0.5110%" height="15" fill="rgb(249,28,3)" fg:x="4216" fg:w="32"/><text x="67.5767%" y="303.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (2 samples, 0.03%)</title><rect x="67.8058%" y="277" width="0.0319%" height="15" fill="rgb(222,56,52)" fg:x="4246" fg:w="2"/><text x="68.0558%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide (2 samples, 0.03%)</title><rect x="67.8058%" y="261" width="0.0319%" height="15" fill="rgb(245,217,50)" fg:x="4246" fg:w="2"/><text x="68.0558%" y="271.50"></text></g><g><title>std_detect::detect::arch::x86::__is_feature_detected::avx2 (2 samples, 0.03%)</title><rect x="67.8058%" y="245" width="0.0319%" height="15" fill="rgb(213,201,24)" fg:x="4246" fg:w="2"/><text x="68.0558%" y="255.50"></text></g><g><title>std_detect::detect::check_for (2 samples, 0.03%)</title><rect x="67.8058%" y="229" width="0.0319%" height="15" fill="rgb(248,116,28)" fg:x="4246" fg:w="2"/><text x="68.0558%" y="239.50"></text></g><g><title>std_detect::detect::cache::test (2 samples, 0.03%)</title><rect x="67.8058%" y="213" width="0.0319%" height="15" fill="rgb(219,72,43)" fg:x="4246" fg:w="2"/><text x="68.0558%" y="223.50"></text></g><g><title>std_detect::detect::cache::Cache::test (1 samples, 0.02%)</title><rect x="67.8218%" y="197" width="0.0160%" height="15" fill="rgb(209,138,14)" fg:x="4247" fg:w="1"/><text x="68.0718%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="67.8218%" y="181" width="0.0160%" height="15" fill="rgb(222,18,33)" fg:x="4247" fg:w="1"/><text x="68.0718%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="67.8218%" y="165" width="0.0160%" height="15" fill="rgb(213,199,7)" fg:x="4247" fg:w="1"/><text x="68.0718%" y="175.50"></text></g><g><title>rand::rng::Rng::gen (78 samples, 1.25%)</title><rect x="66.6081%" y="437" width="1.2456%" height="15" fill="rgb(250,110,10)" fg:x="4171" fg:w="78"/><text x="66.8581%" y="447.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (74 samples, 1.18%)</title><rect x="66.6720%" y="421" width="1.1817%" height="15" fill="rgb(248,123,6)" fg:x="4175" fg:w="74"/><text x="66.9220%" y="431.50"></text></g><g><title>rand::rng::Rng::gen (55 samples, 0.88%)</title><rect x="66.9754%" y="405" width="0.8783%" height="15" fill="rgb(206,91,31)" fg:x="4194" fg:w="55"/><text x="67.2254%" y="415.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (55 samples, 0.88%)</title><rect x="66.9754%" y="389" width="0.8783%" height="15" fill="rgb(211,154,13)" fg:x="4194" fg:w="55"/><text x="67.2254%" y="399.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (53 samples, 0.85%)</title><rect x="67.0073%" y="373" width="0.8464%" height="15" fill="rgb(225,148,7)" fg:x="4196" fg:w="53"/><text x="67.2573%" y="383.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (43 samples, 0.69%)</title><rect x="67.1670%" y="357" width="0.6867%" height="15" fill="rgb(220,160,43)" fg:x="4206" fg:w="43"/><text x="67.4170%" y="367.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (43 samples, 0.69%)</title><rect x="67.1670%" y="341" width="0.6867%" height="15" fill="rgb(213,52,39)" fg:x="4206" fg:w="43"/><text x="67.4170%" y="351.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (33 samples, 0.53%)</title><rect x="67.3267%" y="325" width="0.5270%" height="15" fill="rgb(243,137,7)" fg:x="4216" fg:w="33"/><text x="67.5767%" y="335.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (33 samples, 0.53%)</title><rect x="67.3267%" y="309" width="0.5270%" height="15" fill="rgb(230,79,13)" fg:x="4216" fg:w="33"/><text x="67.5767%" y="319.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (1 samples, 0.02%)</title><rect x="67.8378%" y="293" width="0.0160%" height="15" fill="rgb(247,105,23)" fg:x="4248" fg:w="1"/><text x="68.0878%" y="303.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="68.0613%" y="389" width="0.0160%" height="15" fill="rgb(223,179,41)" fg:x="4262" fg:w="1"/><text x="68.3113%" y="399.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (13 samples, 0.21%)</title><rect x="68.0773%" y="389" width="0.2076%" height="15" fill="rgb(218,9,34)" fg:x="4263" fg:w="13"/><text x="68.3273%" y="399.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (10 samples, 0.16%)</title><rect x="68.1252%" y="373" width="0.1597%" height="15" fill="rgb(222,106,8)" fg:x="4266" fg:w="10"/><text x="68.3752%" y="383.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.03%)</title><rect x="68.2530%" y="357" width="0.0319%" height="15" fill="rgb(211,220,0)" fg:x="4274" fg:w="2"/><text x="68.5030%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.03%)</title><rect x="68.2530%" y="341" width="0.0319%" height="15" fill="rgb(229,52,16)" fg:x="4274" fg:w="2"/><text x="68.5030%" y="351.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="68.3807%" y="357" width="0.0160%" height="15" fill="rgb(212,155,18)" fg:x="4282" fg:w="1"/><text x="68.6307%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="68.3807%" y="341" width="0.0160%" height="15" fill="rgb(242,21,14)" fg:x="4282" fg:w="1"/><text x="68.6307%" y="351.50"></text></g><g><title>alloc::rc::RcInnerPtr::strong (7 samples, 0.11%)</title><rect x="68.6841%" y="341" width="0.1118%" height="15" fill="rgb(222,19,48)" fg:x="4301" fg:w="7"/><text x="68.9341%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (3 samples, 0.05%)</title><rect x="68.7480%" y="325" width="0.0479%" height="15" fill="rgb(232,45,27)" fg:x="4305" fg:w="3"/><text x="68.9980%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="68.7959%" y="341" width="0.0160%" height="15" fill="rgb(249,103,42)" fg:x="4308" fg:w="1"/><text x="69.0459%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="68.7959%" y="325" width="0.0160%" height="15" fill="rgb(246,81,33)" fg:x="4308" fg:w="1"/><text x="69.0459%" y="335.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="68.7959%" y="309" width="0.0160%" height="15" fill="rgb(252,33,42)" fg:x="4308" fg:w="1"/><text x="69.0459%" y="319.50"></text></g><g><title>rand::random (174 samples, 2.78%)</title><rect x="66.0492%" y="453" width="2.7787%" height="15" fill="rgb(209,212,41)" fg:x="4136" fg:w="174"/><text x="66.2992%" y="463.50">ra..</text></g><g><title>rand::rngs::thread::thread_rng (61 samples, 0.97%)</title><rect x="67.8537%" y="437" width="0.9741%" height="15" fill="rgb(207,154,6)" fg:x="4249" fg:w="61"/><text x="68.1037%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (52 samples, 0.83%)</title><rect x="67.9974%" y="421" width="0.8304%" height="15" fill="rgb(223,64,47)" fg:x="4258" fg:w="52"/><text x="68.2474%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (49 samples, 0.78%)</title><rect x="68.0454%" y="405" width="0.7825%" height="15" fill="rgb(211,161,38)" fg:x="4261" fg:w="49"/><text x="68.2954%" y="415.50"></text></g><g><title>rand::rngs::thread::thread_rng::_{{closure}} (34 samples, 0.54%)</title><rect x="68.2849%" y="389" width="0.5430%" height="15" fill="rgb(219,138,40)" fg:x="4276" fg:w="34"/><text x="68.5349%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.54%)</title><rect x="68.2849%" y="373" width="0.5430%" height="15" fill="rgb(241,228,46)" fg:x="4276" fg:w="34"/><text x="68.5349%" y="383.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (27 samples, 0.43%)</title><rect x="68.3967%" y="357" width="0.4312%" height="15" fill="rgb(223,209,38)" fg:x="4283" fg:w="27"/><text x="68.6467%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="68.8119%" y="341" width="0.0160%" height="15" fill="rgb(236,164,45)" fg:x="4309" fg:w="1"/><text x="69.0619%" y="351.50"></text></g><g><title>&lt;simd::math::Vec3 as core::clone::Clone&gt;::clone (14 samples, 0.22%)</title><rect x="69.1632%" y="437" width="0.2236%" height="15" fill="rgb(231,15,5)" fg:x="4331" fg:w="14"/><text x="69.4132%" y="447.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (254 samples, 4.06%)</title><rect x="65.3465%" y="485" width="4.0562%" height="15" fill="rgb(252,35,15)" fg:x="4092" fg:w="254"/><text x="65.5965%" y="495.50">&lt;sim..</text></g><g><title>simd::math::Vec3::random_unit_vector (217 samples, 3.47%)</title><rect x="65.9374%" y="469" width="3.4653%" height="15" fill="rgb(248,181,18)" fg:x="4129" fg:w="217"/><text x="66.1874%" y="479.50">sim..</text></g><g><title>simd::math::Vec3::normalized (36 samples, 0.57%)</title><rect x="68.8279%" y="453" width="0.5749%" height="15" fill="rgb(233,39,42)" fg:x="4310" fg:w="36"/><text x="69.0779%" y="463.50"></text></g><g><title>simd::math::Vec3::normalize (1 samples, 0.02%)</title><rect x="69.3868%" y="437" width="0.0160%" height="15" fill="rgb(238,110,33)" fg:x="4345" fg:w="1"/><text x="69.6368%" y="447.50"></text></g><g><title>simd::math::Vec3::length (1 samples, 0.02%)</title><rect x="69.3868%" y="421" width="0.0160%" height="15" fill="rgb(233,195,10)" fg:x="4345" fg:w="1"/><text x="69.6368%" y="431.50"></text></g><g><title>&lt;simd::material::PointLightMaterial as simd::material::Material&gt;::scatter (15 samples, 0.24%)</title><rect x="69.4027%" y="485" width="0.2395%" height="15" fill="rgb(254,105,3)" fg:x="4346" fg:w="15"/><text x="69.6527%" y="495.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Mul&gt;::mul (7 samples, 0.11%)</title><rect x="69.6423%" y="485" width="0.1118%" height="15" fill="rgb(221,225,9)" fg:x="4361" fg:w="7"/><text x="69.8923%" y="495.50"></text></g><g><title>[libc.so.6] (57 samples, 0.91%)</title><rect x="69.7541%" y="485" width="0.9103%" height="15" fill="rgb(224,227,45)" fg:x="4368" fg:w="57"/><text x="70.0041%" y="495.50"></text></g><g><title>memcpy@plt (2 samples, 0.03%)</title><rect x="70.6643%" y="485" width="0.0319%" height="15" fill="rgb(229,198,43)" fg:x="4425" fg:w="2"/><text x="70.9143%" y="495.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Div&lt;f32&gt;&gt;::div (7 samples, 0.11%)</title><rect x="76.4612%" y="453" width="0.1118%" height="15" fill="rgb(206,209,35)" fg:x="4788" fg:w="7"/><text x="76.7112%" y="463.50"></text></g><g><title>core::core_simd::ops::&lt;impl core::ops::arith::Sub for core::core_simd::vector::Simd&lt;f32,_&gt;&gt;::sub (13 samples, 0.21%)</title><rect x="80.1022%" y="437" width="0.2076%" height="15" fill="rgb(245,195,53)" fg:x="5016" fg:w="13"/><text x="80.3522%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (152 samples, 2.43%)</title><rect x="81.5235%" y="405" width="2.4273%" height="15" fill="rgb(240,92,26)" fg:x="5105" fg:w="152"/><text x="81.7735%" y="415.50">co..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (2 samples, 0.03%)</title><rect x="83.9508%" y="405" width="0.0319%" height="15" fill="rgb(207,40,23)" fg:x="5257" fg:w="2"/><text x="84.2008%" y="415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (6 samples, 0.10%)</title><rect x="83.9828%" y="405" width="0.0958%" height="15" fill="rgb(223,111,35)" fg:x="5259" fg:w="6"/><text x="84.2328%" y="415.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Sub&gt;::sub (473 samples, 7.55%)</title><rect x="76.5730%" y="453" width="7.5535%" height="15" fill="rgb(229,147,28)" fg:x="4795" fg:w="473"/><text x="76.8230%" y="463.50">&lt;simd::mat..</text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::from_array (239 samples, 3.82%)</title><rect x="80.3098%" y="437" width="3.8167%" height="15" fill="rgb(211,29,28)" fg:x="5029" fg:w="239"/><text x="80.5598%" y="447.50">core..</text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::load (225 samples, 3.59%)</title><rect x="80.5334%" y="421" width="3.5931%" height="15" fill="rgb(228,72,33)" fg:x="5043" fg:w="225"/><text x="80.7834%" y="431.50">core..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (3 samples, 0.05%)</title><rect x="84.0786%" y="405" width="0.0479%" height="15" fill="rgb(205,214,31)" fg:x="5265" fg:w="3"/><text x="84.3286%" y="415.50"></text></g><g><title>[libc.so.6] (7 samples, 0.11%)</title><rect x="84.1265%" y="453" width="0.1118%" height="15" fill="rgb(224,111,15)" fg:x="5268" fg:w="7"/><text x="84.3765%" y="463.50"></text></g><g><title>simd::math::Vec3::dot (51 samples, 0.81%)</title><rect x="84.2383%" y="453" width="0.8144%" height="15" fill="rgb(253,21,26)" fg:x="5275" fg:w="51"/><text x="84.4883%" y="463.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Add&gt;::add (7 samples, 0.11%)</title><rect x="85.0846%" y="437" width="0.1118%" height="15" fill="rgb(245,139,43)" fg:x="5328" fg:w="7"/><text x="85.3346%" y="447.50"></text></g><g><title>simd::ray::Ray::at (27 samples, 0.43%)</title><rect x="85.0527%" y="453" width="0.4312%" height="15" fill="rgb(252,170,7)" fg:x="5326" fg:w="27"/><text x="85.3027%" y="463.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (18 samples, 0.29%)</title><rect x="85.1964%" y="437" width="0.2874%" height="15" fill="rgb(231,118,14)" fg:x="5335" fg:w="18"/><text x="85.4464%" y="447.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (18 samples, 0.29%)</title><rect x="85.4839%" y="453" width="0.2874%" height="15" fill="rgb(238,83,0)" fg:x="5353" fg:w="18"/><text x="85.7339%" y="463.50"></text></g><g><title>__powisf2 (9 samples, 0.14%)</title><rect x="85.6276%" y="437" width="0.1437%" height="15" fill="rgb(221,39,39)" fg:x="5362" fg:w="9"/><text x="85.8776%" y="447.50"></text></g><g><title>compiler_builtins::float::pow::__powisf2 (8 samples, 0.13%)</title><rect x="85.6436%" y="421" width="0.1278%" height="15" fill="rgb(222,119,46)" fg:x="5363" fg:w="8"/><text x="85.8936%" y="431.50"></text></g><g><title>compiler_builtins::float::pow::pow (8 samples, 0.13%)</title><rect x="85.6436%" y="405" width="0.1278%" height="15" fill="rgb(222,165,49)" fg:x="5363" fg:w="8"/><text x="85.8936%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::MulAssign&gt;::mul_assign (2 samples, 0.03%)</title><rect x="85.7394%" y="389" width="0.0319%" height="15" fill="rgb(219,113,52)" fg:x="5369" fg:w="2"/><text x="85.9894%" y="399.50"></text></g><g><title>simd::object::Object::hit (962 samples, 15.36%)</title><rect x="70.6963%" y="485" width="15.3625%" height="15" fill="rgb(214,7,15)" fg:x="4427" fg:w="962"/><text x="70.9463%" y="495.50">simd::object::Object::hit</text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (950 samples, 15.17%)</title><rect x="70.8879%" y="469" width="15.1709%" height="15" fill="rgb(235,32,4)" fg:x="4439" fg:w="950"/><text x="71.1379%" y="479.50">&lt;simd::mesh::Sphere as ..</text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (18 samples, 0.29%)</title><rect x="85.7713%" y="453" width="0.2874%" height="15" fill="rgb(238,90,54)" fg:x="5371" fg:w="18"/><text x="86.0213%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="86.4420%" y="453" width="0.0160%" height="15" fill="rgb(213,208,19)" fg:x="5413" fg:w="1"/><text x="86.6920%" y="463.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="86.4420%" y="437" width="0.0160%" height="15" fill="rgb(233,156,4)" fg:x="5413" fg:w="1"/><text x="86.6920%" y="447.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="86.4420%" y="421" width="0.0160%" height="15" fill="rgb(207,194,5)" fg:x="5413" fg:w="1"/><text x="86.6920%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="86.4420%" y="405" width="0.0160%" height="15" fill="rgb(206,111,30)" fg:x="5413" fg:w="1"/><text x="86.6920%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.05%)</title><rect x="86.4261%" y="469" width="0.0479%" height="15" fill="rgb(243,70,54)" fg:x="5412" fg:w="3"/><text x="86.6761%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="86.4580%" y="453" width="0.0160%" height="15" fill="rgb(242,28,8)" fg:x="5414" fg:w="1"/><text x="86.7080%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="86.4580%" y="437" width="0.0160%" height="15" fill="rgb(219,106,18)" fg:x="5414" fg:w="1"/><text x="86.7080%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.08%)</title><rect x="87.1607%" y="453" width="0.0798%" height="15" fill="rgb(244,222,10)" fg:x="5458" fg:w="5"/><text x="87.4107%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.02%)</title><rect x="87.4960%" y="437" width="0.0160%" height="15" fill="rgb(236,179,52)" fg:x="5479" fg:w="1"/><text x="87.7460%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 1.05%)</title><rect x="86.4740%" y="469" width="1.0540%" height="15" fill="rgb(213,23,39)" fg:x="5415" fg:w="66"/><text x="86.7240%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (18 samples, 0.29%)</title><rect x="87.2405%" y="453" width="0.2874%" height="15" fill="rgb(238,48,10)" fg:x="5463" fg:w="18"/><text x="87.4905%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.02%)</title><rect x="87.5120%" y="437" width="0.0160%" height="15" fill="rgb(251,196,23)" fg:x="5480" fg:w="1"/><text x="87.7620%" y="447.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="87.6238%" y="453" width="0.0160%" height="15" fill="rgb(250,152,24)" fg:x="5487" fg:w="1"/><text x="87.8738%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;rand::rngs::thread::ThreadRng&gt; (3 samples, 0.05%)</title><rect x="87.6557%" y="421" width="0.0479%" height="15" fill="rgb(209,150,17)" fg:x="5489" fg:w="3"/><text x="87.9057%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::UnsafeCell&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;rand_chacha::chacha::ChaCha12Core,rand_core::os::OsRng&gt;&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="87.6557%" y="405" width="0.0479%" height="15" fill="rgb(234,202,34)" fg:x="5489" fg:w="3"/><text x="87.9057%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="87.6557%" y="389" width="0.0479%" height="15" fill="rgb(253,148,53)" fg:x="5489" fg:w="3"/><text x="87.9057%" y="399.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (3 samples, 0.05%)</title><rect x="87.6557%" y="373" width="0.0479%" height="15" fill="rgb(218,129,16)" fg:x="5489" fg:w="3"/><text x="87.9057%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.05%)</title><rect x="87.6557%" y="357" width="0.0479%" height="15" fill="rgb(216,85,19)" fg:x="5489" fg:w="3"/><text x="87.9057%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast_const (3 samples, 0.05%)</title><rect x="87.6557%" y="341" width="0.0479%" height="15" fill="rgb(235,228,7)" fg:x="5489" fg:w="3"/><text x="87.9057%" y="351.50"></text></g><g><title>&lt;rand_chacha::chacha::Array64&lt;T&gt; as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (1 samples, 0.02%)</title><rect x="87.8633%" y="309" width="0.0160%" height="15" fill="rgb(245,175,0)" fg:x="5502" fg:w="1"/><text x="88.1133%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.8793%" y="261" width="0.0160%" height="15" fill="rgb(208,168,36)" fg:x="5503" fg:w="1"/><text x="88.1293%" y="271.50"></text></g><g><title>rand::rng::Rng::gen (13 samples, 0.21%)</title><rect x="87.7036%" y="421" width="0.2076%" height="15" fill="rgb(246,171,24)" fg:x="5492" fg:w="13"/><text x="87.9536%" y="431.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (12 samples, 0.19%)</title><rect x="87.7196%" y="405" width="0.1916%" height="15" fill="rgb(215,142,24)" fg:x="5493" fg:w="12"/><text x="87.9696%" y="415.50"></text></g><g><title>rand::rng::Rng::gen (10 samples, 0.16%)</title><rect x="87.7515%" y="389" width="0.1597%" height="15" fill="rgb(250,187,7)" fg:x="5495" fg:w="10"/><text x="88.0015%" y="399.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (10 samples, 0.16%)</title><rect x="87.7515%" y="373" width="0.1597%" height="15" fill="rgb(228,66,33)" fg:x="5495" fg:w="10"/><text x="88.0015%" y="383.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (9 samples, 0.14%)</title><rect x="87.7675%" y="357" width="0.1437%" height="15" fill="rgb(234,215,21)" fg:x="5496" fg:w="9"/><text x="88.0175%" y="367.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (9 samples, 0.14%)</title><rect x="87.7675%" y="341" width="0.1437%" height="15" fill="rgb(222,191,20)" fg:x="5496" fg:w="9"/><text x="88.0175%" y="351.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (9 samples, 0.14%)</title><rect x="87.7675%" y="325" width="0.1437%" height="15" fill="rgb(245,79,54)" fg:x="5496" fg:w="9"/><text x="88.0175%" y="335.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (2 samples, 0.03%)</title><rect x="87.8793%" y="309" width="0.0319%" height="15" fill="rgb(240,10,37)" fg:x="5503" fg:w="2"/><text x="88.1293%" y="319.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.03%)</title><rect x="87.8793%" y="293" width="0.0319%" height="15" fill="rgb(214,192,32)" fg:x="5503" fg:w="2"/><text x="88.1293%" y="303.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.03%)</title><rect x="87.8793%" y="277" width="0.0319%" height="15" fill="rgb(209,36,54)" fg:x="5503" fg:w="2"/><text x="88.1293%" y="287.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.02%)</title><rect x="87.8952%" y="261" width="0.0160%" height="15" fill="rgb(220,10,11)" fg:x="5504" fg:w="1"/><text x="88.1452%" y="271.50"></text></g><g><title>rand_chacha::guts::refill_wide (1 samples, 0.02%)</title><rect x="87.8952%" y="245" width="0.0160%" height="15" fill="rgb(221,106,17)" fg:x="5504" fg:w="1"/><text x="88.1452%" y="255.50"></text></g><g><title>std_detect::detect::arch::x86::__is_feature_detected::avx2 (1 samples, 0.02%)</title><rect x="87.8952%" y="229" width="0.0160%" height="15" fill="rgb(251,142,44)" fg:x="5504" fg:w="1"/><text x="88.1452%" y="239.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (3 samples, 0.05%)</title><rect x="87.9112%" y="373" width="0.0479%" height="15" fill="rgb(238,13,15)" fg:x="5505" fg:w="3"/><text x="88.1612%" y="383.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (3 samples, 0.05%)</title><rect x="87.9112%" y="357" width="0.0479%" height="15" fill="rgb(208,107,27)" fg:x="5505" fg:w="3"/><text x="88.1612%" y="367.50"></text></g><g><title>alloc::rc::RcInnerPtr::strong (2 samples, 0.03%)</title><rect x="88.0070%" y="325" width="0.0319%" height="15" fill="rgb(205,136,37)" fg:x="5511" fg:w="2"/><text x="88.2570%" y="335.50"></text></g><g><title>rand::random (26 samples, 0.42%)</title><rect x="87.6397%" y="437" width="0.4152%" height="15" fill="rgb(250,205,27)" fg:x="5488" fg:w="26"/><text x="87.8897%" y="447.50"></text></g><g><title>rand::rngs::thread::thread_rng (9 samples, 0.14%)</title><rect x="87.9112%" y="421" width="0.1437%" height="15" fill="rgb(210,80,43)" fg:x="5505" fg:w="9"/><text x="88.1612%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.14%)</title><rect x="87.9112%" y="405" width="0.1437%" height="15" fill="rgb(247,160,36)" fg:x="5505" fg:w="9"/><text x="88.1612%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.14%)</title><rect x="87.9112%" y="389" width="0.1437%" height="15" fill="rgb(234,13,49)" fg:x="5505" fg:w="9"/><text x="88.1612%" y="399.50"></text></g><g><title>rand::rngs::thread::thread_rng::_{{closure}} (6 samples, 0.10%)</title><rect x="87.9591%" y="373" width="0.0958%" height="15" fill="rgb(234,122,0)" fg:x="5508" fg:w="6"/><text x="88.2091%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.10%)</title><rect x="87.9591%" y="357" width="0.0958%" height="15" fill="rgb(207,146,38)" fg:x="5508" fg:w="6"/><text x="88.2091%" y="367.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (6 samples, 0.10%)</title><rect x="87.9591%" y="341" width="0.0958%" height="15" fill="rgb(207,177,25)" fg:x="5508" fg:w="6"/><text x="88.2091%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="88.0390%" y="325" width="0.0160%" height="15" fill="rgb(211,178,42)" fg:x="5513" fg:w="1"/><text x="88.2890%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="88.0390%" y="309" width="0.0160%" height="15" fill="rgb(230,69,54)" fg:x="5513" fg:w="1"/><text x="88.2890%" y="319.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="88.0390%" y="293" width="0.0160%" height="15" fill="rgb(214,135,41)" fg:x="5513" fg:w="1"/><text x="88.2890%" y="303.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="88.0390%" y="277" width="0.0160%" height="15" fill="rgb(237,67,25)" fg:x="5513" fg:w="1"/><text x="88.2890%" y="287.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (44 samples, 0.70%)</title><rect x="87.5279%" y="469" width="0.7027%" height="15" fill="rgb(222,189,50)" fg:x="5481" fg:w="44"/><text x="87.7779%" y="479.50"></text></g><g><title>simd::math::Vec3::random_unit_vector (37 samples, 0.59%)</title><rect x="87.6397%" y="453" width="0.5909%" height="15" fill="rgb(245,148,34)" fg:x="5488" fg:w="37"/><text x="87.8897%" y="463.50"></text></g><g><title>simd::math::Vec3::normalized (11 samples, 0.18%)</title><rect x="88.0549%" y="437" width="0.1757%" height="15" fill="rgb(222,29,6)" fg:x="5514" fg:w="11"/><text x="88.3049%" y="447.50"></text></g><g><title>&lt;simd::math::Vec3 as core::clone::Clone&gt;::clone (7 samples, 0.11%)</title><rect x="88.1188%" y="421" width="0.1118%" height="15" fill="rgb(221,189,43)" fg:x="5518" fg:w="7"/><text x="88.3688%" y="431.50"></text></g><g><title>&lt;simd::material::PointLightMaterial as simd::material::Material&gt;::scatter (2 samples, 0.03%)</title><rect x="88.2306%" y="469" width="0.0319%" height="15" fill="rgb(207,36,27)" fg:x="5525" fg:w="2"/><text x="88.4806%" y="479.50"></text></g><g><title>[libc.so.6] (3 samples, 0.05%)</title><rect x="88.2625%" y="469" width="0.0479%" height="15" fill="rgb(217,90,24)" fg:x="5527" fg:w="3"/><text x="88.5125%" y="479.50"></text></g><g><title>core::core_simd::ops::&lt;impl core::ops::arith::Sub for core::core_simd::vector::Simd&lt;f32,_&gt;&gt;::sub (8 samples, 0.13%)</title><rect x="91.8716%" y="421" width="0.1278%" height="15" fill="rgb(224,66,35)" fg:x="5753" fg:w="8"/><text x="92.1216%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (87 samples, 1.39%)</title><rect x="93.0853%" y="389" width="1.3893%" height="15" fill="rgb(221,13,50)" fg:x="5829" fg:w="87"/><text x="93.3353%" y="399.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Sub&gt;::sub (261 samples, 4.17%)</title><rect x="90.4184%" y="437" width="4.1680%" height="15" fill="rgb(236,68,49)" fg:x="5662" fg:w="261"/><text x="90.6684%" y="447.50">&lt;simd..</text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::from_array (162 samples, 2.59%)</title><rect x="91.9994%" y="421" width="2.5870%" height="15" fill="rgb(229,146,28)" fg:x="5761" fg:w="162"/><text x="92.2494%" y="431.50">co..</text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::load (127 samples, 2.03%)</title><rect x="92.5583%" y="405" width="2.0281%" height="15" fill="rgb(225,31,38)" fg:x="5796" fg:w="127"/><text x="92.8083%" y="415.50">c..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (7 samples, 0.11%)</title><rect x="94.4746%" y="389" width="0.1118%" height="15" fill="rgb(250,208,3)" fg:x="5916" fg:w="7"/><text x="94.7246%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="94.5864%" y="437" width="0.0319%" height="15" fill="rgb(246,54,23)" fg:x="5923" fg:w="2"/><text x="94.8364%" y="447.50"></text></g><g><title>simd::math::Vec3::dot (8 samples, 0.13%)</title><rect x="94.6183%" y="437" width="0.1278%" height="15" fill="rgb(243,76,11)" fg:x="5925" fg:w="8"/><text x="94.8683%" y="447.50"></text></g><g><title>simd::ray::Ray::at (1 samples, 0.02%)</title><rect x="94.7461%" y="437" width="0.0160%" height="15" fill="rgb(245,21,50)" fg:x="5933" fg:w="1"/><text x="94.9961%" y="447.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (2 samples, 0.03%)</title><rect x="94.7621%" y="437" width="0.0319%" height="15" fill="rgb(228,9,43)" fg:x="5934" fg:w="2"/><text x="95.0121%" y="447.50"></text></g><g><title>__powisf2 (2 samples, 0.03%)</title><rect x="94.7621%" y="421" width="0.0319%" height="15" fill="rgb(208,100,47)" fg:x="5934" fg:w="2"/><text x="95.0121%" y="431.50"></text></g><g><title>compiler_builtins::float::pow::__powisf2 (2 samples, 0.03%)</title><rect x="94.7621%" y="405" width="0.0319%" height="15" fill="rgb(232,26,8)" fg:x="5934" fg:w="2"/><text x="95.0121%" y="415.50"></text></g><g><title>compiler_builtins::float::pow::pow (2 samples, 0.03%)</title><rect x="94.7621%" y="389" width="0.0319%" height="15" fill="rgb(216,166,38)" fg:x="5934" fg:w="2"/><text x="95.0121%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::MulAssign&gt;::mul_assign (1 samples, 0.02%)</title><rect x="94.7780%" y="373" width="0.0160%" height="15" fill="rgb(251,202,51)" fg:x="5935" fg:w="1"/><text x="95.0280%" y="383.50"></text></g><g><title>simd::object::Object::hit (408 samples, 6.52%)</title><rect x="88.3104%" y="469" width="6.5155%" height="15" fill="rgb(254,216,34)" fg:x="5530" fg:w="408"/><text x="88.5604%" y="479.50">simd::obj..</text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (380 samples, 6.07%)</title><rect x="88.7576%" y="453" width="6.0683%" height="15" fill="rgb(251,32,27)" fg:x="5558" fg:w="380"/><text x="89.0076%" y="463.50">&lt;simd::m..</text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (2 samples, 0.03%)</title><rect x="94.7940%" y="437" width="0.0319%" height="15" fill="rgb(208,127,28)" fg:x="5936" fg:w="2"/><text x="95.0440%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.03%)</title><rect x="95.0335%" y="437" width="0.0319%" height="15" fill="rgb(224,137,22)" fg:x="5951" fg:w="2"/><text x="95.2835%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.21%)</title><rect x="94.9377%" y="453" width="0.2076%" height="15" fill="rgb(254,70,32)" fg:x="5945" fg:w="13"/><text x="95.1877%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (5 samples, 0.08%)</title><rect x="95.0655%" y="437" width="0.0798%" height="15" fill="rgb(229,75,37)" fg:x="5953" fg:w="5"/><text x="95.3155%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rand::rngs::thread::ThreadRng&gt; (1 samples, 0.02%)</title><rect x="95.1773%" y="405" width="0.0160%" height="15" fill="rgb(252,64,23)" fg:x="5960" fg:w="1"/><text x="95.4273%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::UnsafeCell&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;rand_chacha::chacha::ChaCha12Core,rand_core::os::OsRng&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="95.1773%" y="389" width="0.0160%" height="15" fill="rgb(232,162,48)" fg:x="5960" fg:w="1"/><text x="95.4273%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="95.1773%" y="373" width="0.0160%" height="15" fill="rgb(246,160,12)" fg:x="5960" fg:w="1"/><text x="95.4273%" y="383.50"></text></g><g><title>rand::rng::Rng::gen (5 samples, 0.08%)</title><rect x="95.1932%" y="405" width="0.0798%" height="15" fill="rgb(247,166,0)" fg:x="5961" fg:w="5"/><text x="95.4432%" y="415.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (5 samples, 0.08%)</title><rect x="95.1932%" y="389" width="0.0798%" height="15" fill="rgb(249,219,21)" fg:x="5961" fg:w="5"/><text x="95.4432%" y="399.50"></text></g><g><title>rand::rng::Rng::gen (3 samples, 0.05%)</title><rect x="95.2252%" y="373" width="0.0479%" height="15" fill="rgb(205,209,3)" fg:x="5963" fg:w="3"/><text x="95.4752%" y="383.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (3 samples, 0.05%)</title><rect x="95.2252%" y="357" width="0.0479%" height="15" fill="rgb(243,44,1)" fg:x="5963" fg:w="3"/><text x="95.4752%" y="367.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="95.2571%" y="341" width="0.0160%" height="15" fill="rgb(206,159,16)" fg:x="5965" fg:w="1"/><text x="95.5071%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="95.2571%" y="325" width="0.0160%" height="15" fill="rgb(244,77,30)" fg:x="5965" fg:w="1"/><text x="95.5071%" y="335.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (1 samples, 0.02%)</title><rect x="95.2731%" y="357" width="0.0160%" height="15" fill="rgb(218,69,12)" fg:x="5966" fg:w="1"/><text x="95.5231%" y="367.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="95.2731%" y="341" width="0.0160%" height="15" fill="rgb(212,87,7)" fg:x="5966" fg:w="1"/><text x="95.5231%" y="351.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (10 samples, 0.16%)</title><rect x="95.1453%" y="453" width="0.1597%" height="15" fill="rgb(245,114,25)" fg:x="5958" fg:w="10"/><text x="95.3953%" y="463.50"></text></g><g><title>simd::math::Vec3::random_unit_vector (8 samples, 0.13%)</title><rect x="95.1773%" y="437" width="0.1278%" height="15" fill="rgb(210,61,42)" fg:x="5960" fg:w="8"/><text x="95.4273%" y="447.50"></text></g><g><title>rand::random (8 samples, 0.13%)</title><rect x="95.1773%" y="421" width="0.1278%" height="15" fill="rgb(211,52,33)" fg:x="5960" fg:w="8"/><text x="95.4273%" y="431.50"></text></g><g><title>rand::rngs::thread::thread_rng (2 samples, 0.03%)</title><rect x="95.2731%" y="405" width="0.0319%" height="15" fill="rgb(234,58,33)" fg:x="5966" fg:w="2"/><text x="95.5231%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.03%)</title><rect x="95.2731%" y="389" width="0.0319%" height="15" fill="rgb(220,115,36)" fg:x="5966" fg:w="2"/><text x="95.5231%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.03%)</title><rect x="95.2731%" y="373" width="0.0319%" height="15" fill="rgb(243,153,54)" fg:x="5966" fg:w="2"/><text x="95.5231%" y="383.50"></text></g><g><title>rand::rngs::thread::thread_rng::_{{closure}} (1 samples, 0.02%)</title><rect x="95.2890%" y="357" width="0.0160%" height="15" fill="rgb(251,47,18)" fg:x="5967" fg:w="1"/><text x="95.5390%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="95.2890%" y="341" width="0.0160%" height="15" fill="rgb(242,102,42)" fg:x="5967" fg:w="1"/><text x="95.5390%" y="351.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Mul&gt;::mul (1 samples, 0.02%)</title><rect x="95.3050%" y="453" width="0.0160%" height="15" fill="rgb(234,31,38)" fg:x="5968" fg:w="1"/><text x="95.5550%" y="463.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="95.3210%" y="453" width="0.0319%" height="15" fill="rgb(221,117,51)" fg:x="5969" fg:w="2"/><text x="95.5710%" y="463.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Div&lt;f32&gt;&gt;::div (1 samples, 0.02%)</title><rect x="95.7522%" y="421" width="0.0160%" height="15" fill="rgb(212,20,18)" fg:x="5996" fg:w="1"/><text x="96.0022%" y="431.50"></text></g><g><title>core::core_simd::ops::&lt;impl core::ops::arith::Sub for core::core_simd::vector::Simd&lt;f32,_&gt;&gt;::sub (2 samples, 0.03%)</title><rect x="96.0236%" y="405" width="0.0319%" height="15" fill="rgb(245,133,36)" fg:x="6013" fg:w="2"/><text x="96.2736%" y="415.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Sub&gt;::sub (40 samples, 0.64%)</title><rect x="95.7681%" y="421" width="0.6388%" height="15" fill="rgb(212,6,19)" fg:x="5997" fg:w="40"/><text x="96.0181%" y="431.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::from_array (22 samples, 0.35%)</title><rect x="96.0556%" y="405" width="0.3513%" height="15" fill="rgb(218,1,36)" fg:x="6015" fg:w="22"/><text x="96.3056%" y="415.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::load (22 samples, 0.35%)</title><rect x="96.0556%" y="389" width="0.3513%" height="15" fill="rgb(246,84,54)" fg:x="6015" fg:w="22"/><text x="96.3056%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.30%)</title><rect x="96.1035%" y="373" width="0.3034%" height="15" fill="rgb(242,110,6)" fg:x="6018" fg:w="19"/><text x="96.3535%" y="383.50"></text></g><g><title>simd::math::Vec3::dot (7 samples, 0.11%)</title><rect x="96.4069%" y="421" width="0.1118%" height="15" fill="rgb(214,47,5)" fg:x="6037" fg:w="7"/><text x="96.6569%" y="431.50"></text></g><g><title>simd::ray::Ray::at (2 samples, 0.03%)</title><rect x="96.5187%" y="421" width="0.0319%" height="15" fill="rgb(218,159,25)" fg:x="6044" fg:w="2"/><text x="96.7687%" y="431.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (2 samples, 0.03%)</title><rect x="96.5187%" y="405" width="0.0319%" height="15" fill="rgb(215,211,28)" fg:x="6044" fg:w="2"/><text x="96.7687%" y="415.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (1 samples, 0.02%)</title><rect x="96.5506%" y="421" width="0.0160%" height="15" fill="rgb(238,59,32)" fg:x="6046" fg:w="1"/><text x="96.8006%" y="431.50"></text></g><g><title>__powisf2 (1 samples, 0.02%)</title><rect x="96.5506%" y="405" width="0.0160%" height="15" fill="rgb(226,82,3)" fg:x="6046" fg:w="1"/><text x="96.8006%" y="415.50"></text></g><g><title>compiler_builtins::float::pow::__powisf2 (1 samples, 0.02%)</title><rect x="96.5506%" y="389" width="0.0160%" height="15" fill="rgb(240,164,32)" fg:x="6046" fg:w="1"/><text x="96.8006%" y="399.50"></text></g><g><title>compiler_builtins::float::pow::pow (1 samples, 0.02%)</title><rect x="96.5506%" y="373" width="0.0160%" height="15" fill="rgb(232,46,7)" fg:x="6046" fg:w="1"/><text x="96.8006%" y="383.50"></text></g><g><title>simd::object::Object::hit (79 samples, 1.26%)</title><rect x="95.3529%" y="453" width="1.2616%" height="15" fill="rgb(229,129,53)" fg:x="5971" fg:w="79"/><text x="95.6029%" y="463.50"></text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (76 samples, 1.21%)</title><rect x="95.4008%" y="437" width="1.2137%" height="15" fill="rgb(234,188,29)" fg:x="5974" fg:w="76"/><text x="95.6508%" y="447.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (3 samples, 0.05%)</title><rect x="96.5666%" y="421" width="0.0479%" height="15" fill="rgb(246,141,4)" fg:x="6047" fg:w="3"/><text x="96.8166%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="96.6624%" y="437" width="0.0160%" height="15" fill="rgb(229,23,39)" fg:x="6053" fg:w="1"/><text x="96.9124%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="96.6624%" y="421" width="0.0160%" height="15" fill="rgb(206,12,3)" fg:x="6053" fg:w="1"/><text x="96.9124%" y="431.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="96.6624%" y="405" width="0.0160%" height="15" fill="rgb(252,226,20)" fg:x="6053" fg:w="1"/><text x="96.9124%" y="415.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="96.6624%" y="389" width="0.0160%" height="15" fill="rgb(216,123,35)" fg:x="6053" fg:w="1"/><text x="96.9124%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="96.6624%" y="373" width="0.0160%" height="15" fill="rgb(212,68,40)" fg:x="6053" fg:w="1"/><text x="96.9124%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.06%)</title><rect x="96.6784%" y="437" width="0.0639%" height="15" fill="rgb(254,125,32)" fg:x="6054" fg:w="4"/><text x="96.9284%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="96.7263%" y="421" width="0.0160%" height="15" fill="rgb(253,97,22)" fg:x="6057" fg:w="1"/><text x="96.9763%" y="431.50"></text></g><g><title>rand::rng::Rng::gen (3 samples, 0.05%)</title><rect x="96.7423%" y="389" width="0.0479%" height="15" fill="rgb(241,101,14)" fg:x="6058" fg:w="3"/><text x="96.9923%" y="399.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (3 samples, 0.05%)</title><rect x="96.7423%" y="373" width="0.0479%" height="15" fill="rgb(238,103,29)" fg:x="6058" fg:w="3"/><text x="96.9923%" y="383.50"></text></g><g><title>rand::rng::Rng::gen (3 samples, 0.05%)</title><rect x="96.7423%" y="357" width="0.0479%" height="15" fill="rgb(233,195,47)" fg:x="6058" fg:w="3"/><text x="96.9923%" y="367.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (3 samples, 0.05%)</title><rect x="96.7423%" y="341" width="0.0479%" height="15" fill="rgb(246,218,30)" fg:x="6058" fg:w="3"/><text x="96.9923%" y="351.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (3 samples, 0.05%)</title><rect x="96.7423%" y="325" width="0.0479%" height="15" fill="rgb(219,145,47)" fg:x="6058" fg:w="3"/><text x="96.9923%" y="335.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (3 samples, 0.05%)</title><rect x="96.7423%" y="309" width="0.0479%" height="15" fill="rgb(243,12,26)" fg:x="6058" fg:w="3"/><text x="96.9923%" y="319.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (3 samples, 0.05%)</title><rect x="96.7423%" y="293" width="0.0479%" height="15" fill="rgb(214,87,16)" fg:x="6058" fg:w="3"/><text x="96.9923%" y="303.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (2 samples, 0.03%)</title><rect x="96.7582%" y="277" width="0.0319%" height="15" fill="rgb(208,99,42)" fg:x="6059" fg:w="2"/><text x="97.0082%" y="287.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.03%)</title><rect x="96.7582%" y="261" width="0.0319%" height="15" fill="rgb(253,99,2)" fg:x="6059" fg:w="2"/><text x="97.0082%" y="271.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.03%)</title><rect x="96.7582%" y="245" width="0.0319%" height="15" fill="rgb(220,168,23)" fg:x="6059" fg:w="2"/><text x="97.0082%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="96.7582%" y="229" width="0.0319%" height="15" fill="rgb(242,38,24)" fg:x="6059" fg:w="2"/><text x="97.0082%" y="239.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="96.7742%" y="213" width="0.0160%" height="15" fill="rgb(225,182,9)" fg:x="6060" fg:w="1"/><text x="97.0242%" y="223.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (4 samples, 0.06%)</title><rect x="96.7423%" y="437" width="0.0639%" height="15" fill="rgb(243,178,37)" fg:x="6058" fg:w="4"/><text x="96.9923%" y="447.50"></text></g><g><title>simd::math::Vec3::random_unit_vector (4 samples, 0.06%)</title><rect x="96.7423%" y="421" width="0.0639%" height="15" fill="rgb(232,139,19)" fg:x="6058" fg:w="4"/><text x="96.9923%" y="431.50"></text></g><g><title>rand::random (4 samples, 0.06%)</title><rect x="96.7423%" y="405" width="0.0639%" height="15" fill="rgb(225,201,24)" fg:x="6058" fg:w="4"/><text x="96.9923%" y="415.50"></text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.02%)</title><rect x="96.7902%" y="389" width="0.0160%" height="15" fill="rgb(221,47,46)" fg:x="6061" fg:w="1"/><text x="97.0402%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="96.7902%" y="373" width="0.0160%" height="15" fill="rgb(249,23,13)" fg:x="6061" fg:w="1"/><text x="97.0402%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="96.7902%" y="357" width="0.0160%" height="15" fill="rgb(219,9,5)" fg:x="6061" fg:w="1"/><text x="97.0402%" y="367.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (1 samples, 0.02%)</title><rect x="96.7902%" y="341" width="0.0160%" height="15" fill="rgb(254,171,16)" fg:x="6061" fg:w="1"/><text x="97.0402%" y="351.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="96.7902%" y="325" width="0.0160%" height="15" fill="rgb(230,171,20)" fg:x="6061" fg:w="1"/><text x="97.0402%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="96.8061%" y="437" width="0.0160%" height="15" fill="rgb(210,71,41)" fg:x="6062" fg:w="1"/><text x="97.0561%" y="447.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Sub&gt;::sub (10 samples, 0.16%)</title><rect x="97.0457%" y="405" width="0.1597%" height="15" fill="rgb(206,173,20)" fg:x="6077" fg:w="10"/><text x="97.2957%" y="415.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::from_array (5 samples, 0.08%)</title><rect x="97.1255%" y="389" width="0.0798%" height="15" fill="rgb(233,88,34)" fg:x="6082" fg:w="5"/><text x="97.3755%" y="399.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::load (3 samples, 0.05%)</title><rect x="97.1575%" y="373" width="0.0479%" height="15" fill="rgb(223,209,46)" fg:x="6084" fg:w="3"/><text x="97.4075%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.05%)</title><rect x="97.1575%" y="357" width="0.0479%" height="15" fill="rgb(250,43,18)" fg:x="6084" fg:w="3"/><text x="97.4075%" y="367.50"></text></g><g><title>simd::object::Object::hit (25 samples, 0.40%)</title><rect x="96.8221%" y="437" width="0.3992%" height="15" fill="rgb(208,13,10)" fg:x="6063" fg:w="25"/><text x="97.0721%" y="447.50"></text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (25 samples, 0.40%)</title><rect x="96.8221%" y="421" width="0.3992%" height="15" fill="rgb(212,200,36)" fg:x="6063" fg:w="25"/><text x="97.0721%" y="431.50"></text></g><g><title>simd::ray::Ray::at (1 samples, 0.02%)</title><rect x="97.2054%" y="405" width="0.0160%" height="15" fill="rgb(225,90,30)" fg:x="6087" fg:w="1"/><text x="97.4554%" y="415.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="97.2054%" y="389" width="0.0160%" height="15" fill="rgb(236,182,39)" fg:x="6087" fg:w="1"/><text x="97.4554%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="97.2213%" y="421" width="0.0319%" height="15" fill="rgb(212,144,35)" fg:x="6088" fg:w="2"/><text x="97.4713%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;rand::rngs::thread::ThreadRng&gt; (2 samples, 0.03%)</title><rect x="97.2533%" y="373" width="0.0319%" height="15" fill="rgb(228,63,44)" fg:x="6090" fg:w="2"/><text x="97.5033%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::UnsafeCell&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;rand_chacha::chacha::ChaCha12Core,rand_core::os::OsRng&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="97.2533%" y="357" width="0.0319%" height="15" fill="rgb(228,109,6)" fg:x="6090" fg:w="2"/><text x="97.5033%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="97.2533%" y="341" width="0.0319%" height="15" fill="rgb(238,117,24)" fg:x="6090" fg:w="2"/><text x="97.5033%" y="351.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="97.2692%" y="325" width="0.0160%" height="15" fill="rgb(242,26,26)" fg:x="6091" fg:w="1"/><text x="97.5192%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="97.2692%" y="309" width="0.0160%" height="15" fill="rgb(221,92,48)" fg:x="6091" fg:w="1"/><text x="97.5192%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast_const (1 samples, 0.02%)</title><rect x="97.2692%" y="293" width="0.0160%" height="15" fill="rgb(209,209,32)" fg:x="6091" fg:w="1"/><text x="97.5192%" y="303.50"></text></g><g><title>rand::rng::Rng::gen (2 samples, 0.03%)</title><rect x="97.2852%" y="373" width="0.0319%" height="15" fill="rgb(221,70,22)" fg:x="6092" fg:w="2"/><text x="97.5352%" y="383.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (2 samples, 0.03%)</title><rect x="97.2852%" y="357" width="0.0319%" height="15" fill="rgb(248,145,5)" fg:x="6092" fg:w="2"/><text x="97.5352%" y="367.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.02%)</title><rect x="97.3012%" y="341" width="0.0160%" height="15" fill="rgb(226,116,26)" fg:x="6093" fg:w="1"/><text x="97.5512%" y="351.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.02%)</title><rect x="97.3012%" y="325" width="0.0160%" height="15" fill="rgb(244,5,17)" fg:x="6093" fg:w="1"/><text x="97.5512%" y="335.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="97.3012%" y="309" width="0.0160%" height="15" fill="rgb(252,159,33)" fg:x="6093" fg:w="1"/><text x="97.5512%" y="319.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="97.3012%" y="293" width="0.0160%" height="15" fill="rgb(206,71,0)" fg:x="6093" fg:w="1"/><text x="97.5512%" y="303.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="97.3012%" y="277" width="0.0160%" height="15" fill="rgb(233,118,54)" fg:x="6093" fg:w="1"/><text x="97.5512%" y="287.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (5 samples, 0.08%)</title><rect x="97.2533%" y="421" width="0.0798%" height="15" fill="rgb(234,83,48)" fg:x="6090" fg:w="5"/><text x="97.5033%" y="431.50"></text></g><g><title>simd::math::Vec3::random_unit_vector (5 samples, 0.08%)</title><rect x="97.2533%" y="405" width="0.0798%" height="15" fill="rgb(228,3,54)" fg:x="6090" fg:w="5"/><text x="97.5033%" y="415.50"></text></g><g><title>rand::random (5 samples, 0.08%)</title><rect x="97.2533%" y="389" width="0.0798%" height="15" fill="rgb(226,155,13)" fg:x="6090" fg:w="5"/><text x="97.5033%" y="399.50"></text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.02%)</title><rect x="97.3172%" y="373" width="0.0160%" height="15" fill="rgb(241,28,37)" fg:x="6094" fg:w="1"/><text x="97.5672%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="97.3172%" y="357" width="0.0160%" height="15" fill="rgb(233,93,10)" fg:x="6094" fg:w="1"/><text x="97.5672%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="97.3172%" y="341" width="0.0160%" height="15" fill="rgb(225,113,19)" fg:x="6094" fg:w="1"/><text x="97.5672%" y="351.50"></text></g><g><title>rand::rngs::thread::thread_rng::_{{closure}} (1 samples, 0.02%)</title><rect x="97.3172%" y="325" width="0.0160%" height="15" fill="rgb(241,2,18)" fg:x="6094" fg:w="1"/><text x="97.5672%" y="335.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Sub&gt;::sub (4 samples, 0.06%)</title><rect x="97.3970%" y="389" width="0.0639%" height="15" fill="rgb(228,207,21)" fg:x="6099" fg:w="4"/><text x="97.6470%" y="399.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::from_array (2 samples, 0.03%)</title><rect x="97.4289%" y="373" width="0.0319%" height="15" fill="rgb(213,211,35)" fg:x="6101" fg:w="2"/><text x="97.6789%" y="383.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::load (2 samples, 0.03%)</title><rect x="97.4289%" y="357" width="0.0319%" height="15" fill="rgb(209,83,10)" fg:x="6101" fg:w="2"/><text x="97.6789%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="97.4449%" y="341" width="0.0160%" height="15" fill="rgb(209,164,1)" fg:x="6102" fg:w="1"/><text x="97.6949%" y="351.50"></text></g><g><title>simd::math::Vec3::dot (3 samples, 0.05%)</title><rect x="97.4609%" y="389" width="0.0479%" height="15" fill="rgb(213,184,43)" fg:x="6103" fg:w="3"/><text x="97.7109%" y="399.50"></text></g><g><title>simd::object::Object::hit (12 samples, 0.19%)</title><rect x="97.3331%" y="421" width="0.1916%" height="15" fill="rgb(231,61,34)" fg:x="6095" fg:w="12"/><text x="97.5831%" y="431.50"></text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (12 samples, 0.19%)</title><rect x="97.3331%" y="405" width="0.1916%" height="15" fill="rgb(235,75,3)" fg:x="6095" fg:w="12"/><text x="97.5831%" y="415.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (1 samples, 0.02%)</title><rect x="97.5088%" y="389" width="0.0160%" height="15" fill="rgb(220,106,47)" fg:x="6106" fg:w="1"/><text x="97.7588%" y="399.50"></text></g><g><title>__powisf2 (1 samples, 0.02%)</title><rect x="97.5088%" y="373" width="0.0160%" height="15" fill="rgb(210,196,33)" fg:x="6106" fg:w="1"/><text x="97.7588%" y="383.50"></text></g><g><title>compiler_builtins::float::pow::__powisf2 (1 samples, 0.02%)</title><rect x="97.5088%" y="357" width="0.0160%" height="15" fill="rgb(229,154,42)" fg:x="6106" fg:w="1"/><text x="97.7588%" y="367.50"></text></g><g><title>compiler_builtins::float::pow::pow (1 samples, 0.02%)</title><rect x="97.5088%" y="341" width="0.0160%" height="15" fill="rgb(228,114,26)" fg:x="6106" fg:w="1"/><text x="97.7588%" y="351.50"></text></g><g><title>rand::random (1 samples, 0.02%)</title><rect x="97.5248%" y="373" width="0.0160%" height="15" fill="rgb(208,144,1)" fg:x="6107" fg:w="1"/><text x="97.7748%" y="383.50"></text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.02%)</title><rect x="97.5248%" y="357" width="0.0160%" height="15" fill="rgb(239,112,37)" fg:x="6107" fg:w="1"/><text x="97.7748%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="97.5248%" y="341" width="0.0160%" height="15" fill="rgb(210,96,50)" fg:x="6107" fg:w="1"/><text x="97.7748%" y="351.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (2 samples, 0.03%)</title><rect x="97.5248%" y="405" width="0.0319%" height="15" fill="rgb(222,178,2)" fg:x="6107" fg:w="2"/><text x="97.7748%" y="415.50"></text></g><g><title>simd::math::Vec3::random_unit_vector (2 samples, 0.03%)</title><rect x="97.5248%" y="389" width="0.0319%" height="15" fill="rgb(226,74,18)" fg:x="6107" fg:w="2"/><text x="97.7748%" y="399.50"></text></g><g><title>simd::math::Vec3::normalized (1 samples, 0.02%)</title><rect x="97.5407%" y="373" width="0.0160%" height="15" fill="rgb(225,67,54)" fg:x="6108" fg:w="1"/><text x="97.7907%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="97.5567%" y="405" width="0.0160%" height="15" fill="rgb(251,92,32)" fg:x="6109" fg:w="1"/><text x="97.8067%" y="415.50"></text></g><g><title>simd::object::Object::hit (4 samples, 0.06%)</title><rect x="97.5727%" y="405" width="0.0639%" height="15" fill="rgb(228,149,22)" fg:x="6110" fg:w="4"/><text x="97.8227%" y="415.50"></text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (4 samples, 0.06%)</title><rect x="97.5727%" y="389" width="0.0639%" height="15" fill="rgb(243,54,13)" fg:x="6110" fg:w="4"/><text x="97.8227%" y="399.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Sub&gt;::sub (4 samples, 0.06%)</title><rect x="97.5727%" y="373" width="0.0639%" height="15" fill="rgb(243,180,28)" fg:x="6110" fg:w="4"/><text x="97.8227%" y="383.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::from_array (3 samples, 0.05%)</title><rect x="97.5886%" y="357" width="0.0479%" height="15" fill="rgb(208,167,24)" fg:x="6111" fg:w="3"/><text x="97.8386%" y="367.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::load (3 samples, 0.05%)</title><rect x="97.5886%" y="341" width="0.0479%" height="15" fill="rgb(245,73,45)" fg:x="6111" fg:w="3"/><text x="97.8386%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="97.6046%" y="325" width="0.0319%" height="15" fill="rgb(237,203,48)" fg:x="6112" fg:w="2"/><text x="97.8546%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;rand::rngs::thread::ThreadRng&gt; (1 samples, 0.02%)</title><rect x="97.6365%" y="341" width="0.0160%" height="15" fill="rgb(211,197,16)" fg:x="6114" fg:w="1"/><text x="97.8865%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::UnsafeCell&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;rand_chacha::chacha::ChaCha12Core,rand_core::os::OsRng&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="97.6365%" y="325" width="0.0160%" height="15" fill="rgb(243,99,51)" fg:x="6114" fg:w="1"/><text x="97.8865%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.6365%" y="309" width="0.0160%" height="15" fill="rgb(215,123,29)" fg:x="6114" fg:w="1"/><text x="97.8865%" y="319.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="97.6365%" y="293" width="0.0160%" height="15" fill="rgb(239,186,37)" fg:x="6114" fg:w="1"/><text x="97.8865%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="97.6365%" y="277" width="0.0160%" height="15" fill="rgb(252,136,39)" fg:x="6114" fg:w="1"/><text x="97.8865%" y="287.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (4 samples, 0.06%)</title><rect x="97.6365%" y="389" width="0.0639%" height="15" fill="rgb(223,213,32)" fg:x="6114" fg:w="4"/><text x="97.8865%" y="399.50"></text></g><g><title>simd::math::Vec3::random_unit_vector (4 samples, 0.06%)</title><rect x="97.6365%" y="373" width="0.0639%" height="15" fill="rgb(233,115,5)" fg:x="6114" fg:w="4"/><text x="97.8865%" y="383.50"></text></g><g><title>rand::random (4 samples, 0.06%)</title><rect x="97.6365%" y="357" width="0.0639%" height="15" fill="rgb(207,226,44)" fg:x="6114" fg:w="4"/><text x="97.8865%" y="367.50"></text></g><g><title>rand::rngs::thread::thread_rng (3 samples, 0.05%)</title><rect x="97.6525%" y="341" width="0.0479%" height="15" fill="rgb(208,126,0)" fg:x="6115" fg:w="3"/><text x="97.9025%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.03%)</title><rect x="97.6685%" y="325" width="0.0319%" height="15" fill="rgb(244,66,21)" fg:x="6116" fg:w="2"/><text x="97.9185%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.03%)</title><rect x="97.6685%" y="309" width="0.0319%" height="15" fill="rgb(222,97,12)" fg:x="6116" fg:w="2"/><text x="97.9185%" y="319.50"></text></g><g><title>rand::rngs::thread::thread_rng::_{{closure}} (1 samples, 0.02%)</title><rect x="97.6844%" y="293" width="0.0160%" height="15" fill="rgb(219,213,19)" fg:x="6117" fg:w="1"/><text x="97.9344%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="97.6844%" y="277" width="0.0160%" height="15" fill="rgb(252,169,30)" fg:x="6117" fg:w="1"/><text x="97.9344%" y="287.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.02%)</title><rect x="97.6844%" y="261" width="0.0160%" height="15" fill="rgb(206,32,51)" fg:x="6117" fg:w="1"/><text x="97.9344%" y="271.50"></text></g><g><title>alloc::rc::RcInnerPtr::strong (1 samples, 0.02%)</title><rect x="97.6844%" y="245" width="0.0160%" height="15" fill="rgb(250,172,42)" fg:x="6117" fg:w="1"/><text x="97.9344%" y="255.50"></text></g><g><title>simd::object::Object::hit (6 samples, 0.10%)</title><rect x="97.7004%" y="389" width="0.0958%" height="15" fill="rgb(209,34,43)" fg:x="6118" fg:w="6"/><text x="97.9504%" y="399.50"></text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (5 samples, 0.08%)</title><rect x="97.7164%" y="373" width="0.0798%" height="15" fill="rgb(223,11,35)" fg:x="6119" fg:w="5"/><text x="97.9664%" y="383.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Sub&gt;::sub (3 samples, 0.05%)</title><rect x="97.7483%" y="357" width="0.0479%" height="15" fill="rgb(251,219,26)" fg:x="6121" fg:w="3"/><text x="97.9983%" y="367.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::from_array (2 samples, 0.03%)</title><rect x="97.7643%" y="341" width="0.0319%" height="15" fill="rgb(231,119,3)" fg:x="6122" fg:w="2"/><text x="98.0143%" y="351.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::load (1 samples, 0.02%)</title><rect x="97.7803%" y="325" width="0.0160%" height="15" fill="rgb(216,97,11)" fg:x="6123" fg:w="1"/><text x="98.0303%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="97.7962%" y="373" width="0.0160%" height="15" fill="rgb(223,59,9)" fg:x="6124" fg:w="1"/><text x="98.0462%" y="383.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (1 samples, 0.02%)</title><rect x="97.8122%" y="373" width="0.0160%" height="15" fill="rgb(233,93,31)" fg:x="6125" fg:w="1"/><text x="98.0622%" y="383.50"></text></g><g><title>simd::math::Vec3::random_unit_vector (1 samples, 0.02%)</title><rect x="97.8122%" y="357" width="0.0160%" height="15" fill="rgb(239,81,33)" fg:x="6125" fg:w="1"/><text x="98.0622%" y="367.50"></text></g><g><title>rand::random (1 samples, 0.02%)</title><rect x="97.8122%" y="341" width="0.0160%" height="15" fill="rgb(213,120,34)" fg:x="6125" fg:w="1"/><text x="98.0622%" y="351.50"></text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.02%)</title><rect x="97.8122%" y="325" width="0.0160%" height="15" fill="rgb(243,49,53)" fg:x="6125" fg:w="1"/><text x="98.0622%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="97.8122%" y="309" width="0.0160%" height="15" fill="rgb(247,216,33)" fg:x="6125" fg:w="1"/><text x="98.0622%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="97.8122%" y="293" width="0.0160%" height="15" fill="rgb(226,26,14)" fg:x="6125" fg:w="1"/><text x="98.0622%" y="303.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (1 samples, 0.02%)</title><rect x="97.8122%" y="277" width="0.0160%" height="15" fill="rgb(215,49,53)" fg:x="6125" fg:w="1"/><text x="98.0622%" y="287.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="97.8122%" y="261" width="0.0160%" height="15" fill="rgb(245,162,40)" fg:x="6125" fg:w="1"/><text x="98.0622%" y="271.50"></text></g><g><title>simd::object::Object::hit (2 samples, 0.03%)</title><rect x="97.8282%" y="373" width="0.0319%" height="15" fill="rgb(229,68,17)" fg:x="6126" fg:w="2"/><text x="98.0782%" y="383.50"></text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (2 samples, 0.03%)</title><rect x="97.8282%" y="357" width="0.0319%" height="15" fill="rgb(213,182,10)" fg:x="6126" fg:w="2"/><text x="98.0782%" y="367.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="97.8441%" y="341" width="0.0160%" height="15" fill="rgb(245,125,30)" fg:x="6127" fg:w="1"/><text x="98.0941%" y="351.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::from_array (1 samples, 0.02%)</title><rect x="97.8441%" y="325" width="0.0160%" height="15" fill="rgb(232,202,2)" fg:x="6127" fg:w="1"/><text x="98.0941%" y="335.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::load (1 samples, 0.02%)</title><rect x="97.8441%" y="309" width="0.0160%" height="15" fill="rgb(237,140,51)" fg:x="6127" fg:w="1"/><text x="98.0941%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="97.8441%" y="293" width="0.0160%" height="15" fill="rgb(236,157,25)" fg:x="6127" fg:w="1"/><text x="98.0941%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="97.8601%" y="357" width="0.0160%" height="15" fill="rgb(219,209,0)" fg:x="6128" fg:w="1"/><text x="98.1101%" y="367.50"></text></g><g><title>simd::object::Object::hit (1 samples, 0.02%)</title><rect x="97.8761%" y="357" width="0.0160%" height="15" fill="rgb(240,116,54)" fg:x="6129" fg:w="1"/><text x="98.1261%" y="367.50"></text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (1 samples, 0.02%)</title><rect x="97.8761%" y="341" width="0.0160%" height="15" fill="rgb(216,10,36)" fg:x="6129" fg:w="1"/><text x="98.1261%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="97.9080%" y="341" width="0.0160%" height="15" fill="rgb(222,72,44)" fg:x="6131" fg:w="1"/><text x="98.1580%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,721 samples, 43.45%)</title><rect x="54.4874%" y="533" width="43.4526%" height="15" fill="rgb(232,159,9)" fg:x="3412" fg:w="2721"/><text x="54.7374%" y="543.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>simd::cpu_compute::_{{closure}} (2,642 samples, 42.19%)</title><rect x="55.7490%" y="517" width="42.1910%" height="15" fill="rgb(210,39,32)" fg:x="3491" fg:w="2642"/><text x="55.9990%" y="527.50">simd::cpu_compute::_{{closure}}</text></g><g><title>simd::ray_caste (2,275 samples, 36.33%)</title><rect x="61.6097%" y="501" width="36.3302%" height="15" fill="rgb(216,194,45)" fg:x="3858" fg:w="2275"/><text x="61.8597%" y="511.50">simd::ray_caste</text></g><g><title>simd::ray_caste (744 samples, 11.88%)</title><rect x="86.0588%" y="485" width="11.8812%" height="15" fill="rgb(218,18,35)" fg:x="5389" fg:w="744"/><text x="86.3088%" y="495.50">simd::ray_caste</text></g><g><title>simd::ray_caste (195 samples, 3.11%)</title><rect x="94.8259%" y="469" width="3.1140%" height="15" fill="rgb(207,83,51)" fg:x="5938" fg:w="195"/><text x="95.0759%" y="479.50">sim..</text></g><g><title>simd::ray_caste (83 samples, 1.33%)</title><rect x="96.6145%" y="453" width="1.3255%" height="15" fill="rgb(225,63,43)" fg:x="6050" fg:w="83"/><text x="96.8645%" y="463.50"></text></g><g><title>simd::ray_caste (45 samples, 0.72%)</title><rect x="97.2213%" y="437" width="0.7186%" height="15" fill="rgb(207,57,36)" fg:x="6088" fg:w="45"/><text x="97.4713%" y="447.50"></text></g><g><title>simd::ray_caste (26 samples, 0.42%)</title><rect x="97.5248%" y="421" width="0.4152%" height="15" fill="rgb(216,99,33)" fg:x="6107" fg:w="26"/><text x="97.7748%" y="431.50"></text></g><g><title>simd::ray_caste (19 samples, 0.30%)</title><rect x="97.6365%" y="405" width="0.3034%" height="15" fill="rgb(225,42,16)" fg:x="6114" fg:w="19"/><text x="97.8865%" y="415.50"></text></g><g><title>simd::ray_caste (9 samples, 0.14%)</title><rect x="97.7962%" y="389" width="0.1437%" height="15" fill="rgb(220,201,45)" fg:x="6124" fg:w="9"/><text x="98.0462%" y="399.50"></text></g><g><title>simd::ray_caste (5 samples, 0.08%)</title><rect x="97.8601%" y="373" width="0.0798%" height="15" fill="rgb(225,33,4)" fg:x="6128" fg:w="5"/><text x="98.1101%" y="383.50"></text></g><g><title>simd::ray_caste (3 samples, 0.05%)</title><rect x="97.8920%" y="357" width="0.0479%" height="15" fill="rgb(224,33,50)" fg:x="6130" fg:w="3"/><text x="98.1420%" y="367.50"></text></g><g><title>simd::object::Object::hit (1 samples, 0.02%)</title><rect x="97.9240%" y="341" width="0.0160%" height="15" fill="rgb(246,198,51)" fg:x="6132" fg:w="1"/><text x="98.1740%" y="351.50"></text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (1 samples, 0.02%)</title><rect x="97.9240%" y="325" width="0.0160%" height="15" fill="rgb(205,22,4)" fg:x="6132" fg:w="1"/><text x="98.1740%" y="335.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="97.9240%" y="309" width="0.0160%" height="15" fill="rgb(206,3,8)" fg:x="6132" fg:w="1"/><text x="98.1740%" y="319.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::from_array (1 samples, 0.02%)</title><rect x="97.9240%" y="293" width="0.0160%" height="15" fill="rgb(251,23,15)" fg:x="6132" fg:w="1"/><text x="98.1740%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.9400%" y="453" width="0.0160%" height="15" fill="rgb(252,88,28)" fg:x="6133" fg:w="1"/><text x="98.1900%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="97.9400%" y="437" width="0.0160%" height="15" fill="rgb(212,127,14)" fg:x="6133" fg:w="1"/><text x="98.1900%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="97.9400%" y="421" width="0.0160%" height="15" fill="rgb(247,145,37)" fg:x="6133" fg:w="1"/><text x="98.1900%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.06%)</title><rect x="97.9559%" y="421" width="0.0639%" height="15" fill="rgb(209,117,53)" fg:x="6134" fg:w="4"/><text x="98.2059%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="97.9719%" y="405" width="0.0479%" height="15" fill="rgb(212,90,42)" fg:x="6135" fg:w="3"/><text x="98.2219%" y="415.50"></text></g><g><title>cfree (3 samples, 0.05%)</title><rect x="97.9719%" y="389" width="0.0479%" height="15" fill="rgb(218,164,37)" fg:x="6135" fg:w="3"/><text x="98.2219%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="97.9879%" y="373" width="0.0319%" height="15" fill="rgb(246,65,34)" fg:x="6136" fg:w="2"/><text x="98.2379%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.18%)</title><rect x="97.9400%" y="517" width="0.1757%" height="15" fill="rgb(231,100,33)" fg:x="6133" fg:w="11"/><text x="98.1900%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (11 samples, 0.18%)</title><rect x="97.9400%" y="501" width="0.1757%" height="15" fill="rgb(228,126,14)" fg:x="6133" fg:w="11"/><text x="98.1900%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (11 samples, 0.18%)</title><rect x="97.9400%" y="485" width="0.1757%" height="15" fill="rgb(215,173,21)" fg:x="6133" fg:w="11"/><text x="98.1900%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 0.18%)</title><rect x="97.9400%" y="469" width="0.1757%" height="15" fill="rgb(210,6,40)" fg:x="6133" fg:w="11"/><text x="98.1900%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.16%)</title><rect x="97.9559%" y="453" width="0.1597%" height="15" fill="rgb(212,48,18)" fg:x="6134" fg:w="10"/><text x="98.2059%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.16%)</title><rect x="97.9559%" y="437" width="0.1597%" height="15" fill="rgb(230,214,11)" fg:x="6134" fg:w="10"/><text x="98.2059%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.10%)</title><rect x="98.0198%" y="421" width="0.0958%" height="15" fill="rgb(254,105,39)" fg:x="6138" fg:w="6"/><text x="98.2698%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (2 samples, 0.03%)</title><rect x="98.0837%" y="405" width="0.0319%" height="15" fill="rgb(245,158,5)" fg:x="6142" fg:w="2"/><text x="98.3337%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,828 samples, 45.16%)</title><rect x="53.0182%" y="741" width="45.1613%" height="15" fill="rgb(249,208,11)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="751.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_e..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,828 samples, 45.16%)</title><rect x="53.0182%" y="725" width="45.1613%" height="15" fill="rgb(210,39,28)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="735.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,828 samples, 45.16%)</title><rect x="53.0182%" y="709" width="45.1613%" height="15" fill="rgb(211,56,53)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="719.50">&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::i..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2,828 samples, 45.16%)</title><rect x="53.0182%" y="693" width="45.1613%" height="15" fill="rgb(226,201,30)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="703.50">core::iter::traits::iterator::Iterator::find_map</text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,828 samples, 45.16%)</title><rect x="53.0182%" y="677" width="45.1613%" height="15" fill="rgb(239,101,34)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="687.50">&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::i..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,828 samples, 45.16%)</title><rect x="53.0182%" y="661" width="45.1613%" height="15" fill="rgb(226,209,5)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="671.50">core::iter::traits::iterator::Iterator::try_fold</text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (2,828 samples, 45.16%)</title><rect x="53.0182%" y="645" width="45.1613%" height="15" fill="rgb(250,105,47)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="655.50">&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::i..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (2,828 samples, 45.16%)</title><rect x="53.0182%" y="629" width="45.1613%" height="15" fill="rgb(230,72,3)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="639.50">core::iter::traits::iterator::Iterator::find_map::check::_{{closure}}</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,828 samples, 45.16%)</title><rect x="53.0182%" y="613" width="45.1613%" height="15" fill="rgb(232,218,39)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="623.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F..</text></g><g><title>microbench::measure_impl::_{{closure}} (2,828 samples, 45.16%)</title><rect x="53.0182%" y="597" width="45.1613%" height="15" fill="rgb(248,166,6)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="607.50">microbench::measure_impl::_{{closure}}</text></g><g><title>microbench::measure::_{{closure}} (2,828 samples, 45.16%)</title><rect x="53.0182%" y="581" width="45.1613%" height="15" fill="rgb(247,89,20)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="591.50">microbench::measure::_{{closure}}</text></g><g><title>simd::main::_{{closure}} (2,828 samples, 45.16%)</title><rect x="53.0182%" y="565" width="45.1613%" height="15" fill="rgb(248,130,54)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="575.50">simd::main::_{{closure}}</text></g><g><title>simd::cpu_compute (2,828 samples, 45.16%)</title><rect x="53.0182%" y="549" width="45.1613%" height="15" fill="rgb(234,196,4)" fg:x="3320" fg:w="2828"/><text x="53.2682%" y="559.50">simd::cpu_compute</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (15 samples, 0.24%)</title><rect x="97.9400%" y="533" width="0.2395%" height="15" fill="rgb(250,143,31)" fg:x="6133" fg:w="15"/><text x="98.1900%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (4 samples, 0.06%)</title><rect x="98.1156%" y="517" width="0.0639%" height="15" fill="rgb(211,110,34)" fg:x="6144" fg:w="4"/><text x="98.3656%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.06%)</title><rect x="98.1156%" y="501" width="0.0639%" height="15" fill="rgb(215,124,48)" fg:x="6144" fg:w="4"/><text x="98.3656%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.06%)</title><rect x="98.1156%" y="485" width="0.0639%" height="15" fill="rgb(216,46,13)" fg:x="6144" fg:w="4"/><text x="98.3656%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.06%)</title><rect x="98.1156%" y="469" width="0.0639%" height="15" fill="rgb(205,184,25)" fg:x="6144" fg:w="4"/><text x="98.3656%" y="479.50"></text></g><g><title>cfree (4 samples, 0.06%)</title><rect x="98.1156%" y="453" width="0.0639%" height="15" fill="rgb(228,1,10)" fg:x="6144" fg:w="4"/><text x="98.3656%" y="463.50"></text></g><g><title>[libc.so.6] (4 samples, 0.06%)</title><rect x="98.1156%" y="437" width="0.0639%" height="15" fill="rgb(213,116,27)" fg:x="6144" fg:w="4"/><text x="98.3656%" y="447.50"></text></g><g><title>[libc.so.6] (4 samples, 0.06%)</title><rect x="98.1156%" y="421" width="0.0639%" height="15" fill="rgb(241,95,50)" fg:x="6144" fg:w="4"/><text x="98.3656%" y="431.50"></text></g><g><title>[libc.so.6] (3 samples, 0.05%)</title><rect x="98.1316%" y="405" width="0.0479%" height="15" fill="rgb(238,48,32)" fg:x="6145" fg:w="3"/><text x="98.3816%" y="415.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2 samples, 0.03%)</title><rect x="98.1795%" y="389" width="0.0319%" height="15" fill="rgb(235,113,49)" fg:x="6148" fg:w="2"/><text x="98.4295%" y="399.50"></text></g><g><title>&lt;simd::material::Color as core::fmt::Display&gt;::fmt (2 samples, 0.03%)</title><rect x="98.1795%" y="373" width="0.0319%" height="15" fill="rgb(205,127,43)" fg:x="6148" fg:w="2"/><text x="98.4295%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.03%)</title><rect x="98.1795%" y="357" width="0.0319%" height="15" fill="rgb(250,162,2)" fg:x="6148" fg:w="2"/><text x="98.4295%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.03%)</title><rect x="98.1795%" y="341" width="0.0319%" height="15" fill="rgb(220,13,41)" fg:x="6148" fg:w="2"/><text x="98.4295%" y="351.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (2 samples, 0.03%)</title><rect x="98.1795%" y="325" width="0.0319%" height="15" fill="rgb(249,221,25)" fg:x="6148" fg:w="2"/><text x="98.4295%" y="335.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.03%)</title><rect x="98.1795%" y="309" width="0.0319%" height="15" fill="rgb(215,208,19)" fg:x="6148" fg:w="2"/><text x="98.4295%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.03%)</title><rect x="98.1795%" y="293" width="0.0319%" height="15" fill="rgb(236,175,2)" fg:x="6148" fg:w="2"/><text x="98.4295%" y="303.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.03%)</title><rect x="98.1795%" y="277" width="0.0319%" height="15" fill="rgb(241,52,2)" fg:x="6148" fg:w="2"/><text x="98.4295%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.03%)</title><rect x="98.1795%" y="261" width="0.0319%" height="15" fill="rgb(248,140,14)" fg:x="6148" fg:w="2"/><text x="98.4295%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.03%)</title><rect x="98.1795%" y="245" width="0.0319%" height="15" fill="rgb(253,22,42)" fg:x="6148" fg:w="2"/><text x="98.4295%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="98.1955%" y="229" width="0.0160%" height="15" fill="rgb(234,61,47)" fg:x="6149" fg:w="1"/><text x="98.4455%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="98.1955%" y="213" width="0.0160%" height="15" fill="rgb(208,226,15)" fg:x="6149" fg:w="1"/><text x="98.4455%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="98.1955%" y="197" width="0.0160%" height="15" fill="rgb(217,221,4)" fg:x="6149" fg:w="1"/><text x="98.4455%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="98.1955%" y="181" width="0.0160%" height="15" fill="rgb(212,174,34)" fg:x="6149" fg:w="1"/><text x="98.4455%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="98.1955%" y="165" width="0.0160%" height="15" fill="rgb(253,83,4)" fg:x="6149" fg:w="1"/><text x="98.4455%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="98.1955%" y="149" width="0.0160%" height="15" fill="rgb(250,195,49)" fg:x="6149" fg:w="1"/><text x="98.4455%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="98.1955%" y="133" width="0.0160%" height="15" fill="rgb(241,192,25)" fg:x="6149" fg:w="1"/><text x="98.4455%" y="143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.05%)</title><rect x="98.1795%" y="437" width="0.0479%" height="15" fill="rgb(208,124,10)" fg:x="6148" fg:w="3"/><text x="98.4295%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3 samples, 0.05%)</title><rect x="98.1795%" y="421" width="0.0479%" height="15" fill="rgb(222,33,0)" fg:x="6148" fg:w="3"/><text x="98.4295%" y="431.50"></text></g><g><title>simd::cpu_compute::_{{closure}} (3 samples, 0.05%)</title><rect x="98.1795%" y="405" width="0.0479%" height="15" fill="rgb(234,209,28)" fg:x="6148" fg:w="3"/><text x="98.4295%" y="415.50"></text></g><g><title>&lt;simd::material::Color as core::convert::From&lt;simd::math::Vec3&gt;&gt;::from (1 samples, 0.02%)</title><rect x="98.2114%" y="389" width="0.0160%" height="15" fill="rgb(224,11,23)" fg:x="6150" fg:w="1"/><text x="98.4614%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.06%)</title><rect x="98.1795%" y="565" width="0.0639%" height="15" fill="rgb(232,99,1)" fg:x="6148" fg:w="4"/><text x="98.4295%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.06%)</title><rect x="98.1795%" y="549" width="0.0639%" height="15" fill="rgb(237,95,45)" fg:x="6148" fg:w="4"/><text x="98.4295%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.06%)</title><rect x="98.1795%" y="533" width="0.0639%" height="15" fill="rgb(208,109,11)" fg:x="6148" fg:w="4"/><text x="98.4295%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.06%)</title><rect x="98.1795%" y="517" width="0.0639%" height="15" fill="rgb(216,190,48)" fg:x="6148" fg:w="4"/><text x="98.4295%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.06%)</title><rect x="98.1795%" y="501" width="0.0639%" height="15" fill="rgb(251,171,36)" fg:x="6148" fg:w="4"/><text x="98.4295%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.06%)</title><rect x="98.1795%" y="485" width="0.0639%" height="15" fill="rgb(230,62,22)" fg:x="6148" fg:w="4"/><text x="98.4295%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.06%)</title><rect x="98.1795%" y="469" width="0.0639%" height="15" fill="rgb(225,114,35)" fg:x="6148" fg:w="4"/><text x="98.4295%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.06%)</title><rect x="98.1795%" y="453" width="0.0639%" height="15" fill="rgb(215,118,42)" fg:x="6148" fg:w="4"/><text x="98.4295%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="98.2274%" y="437" width="0.0160%" height="15" fill="rgb(243,119,21)" fg:x="6151" fg:w="1"/><text x="98.4774%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.02%)</title><rect x="98.2274%" y="421" width="0.0160%" height="15" fill="rgb(252,177,53)" fg:x="6151" fg:w="1"/><text x="98.4774%" y="431.50"></text></g><g><title>simd::cpu_compute::_{{closure}} (1 samples, 0.02%)</title><rect x="98.2274%" y="405" width="0.0160%" height="15" fill="rgb(237,209,29)" fg:x="6151" fg:w="1"/><text x="98.4774%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.02%)</title><rect x="98.2274%" y="389" width="0.0160%" height="15" fill="rgb(212,65,23)" fg:x="6151" fg:w="1"/><text x="98.4774%" y="399.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (1 samples, 0.02%)</title><rect x="98.2274%" y="373" width="0.0160%" height="15" fill="rgb(230,222,46)" fg:x="6151" fg:w="1"/><text x="98.4774%" y="383.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.02%)</title><rect x="98.2274%" y="357" width="0.0160%" height="15" fill="rgb(215,135,32)" fg:x="6151" fg:w="1"/><text x="98.4774%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.02%)</title><rect x="98.2274%" y="341" width="0.0160%" height="15" fill="rgb(246,101,22)" fg:x="6151" fg:w="1"/><text x="98.4774%" y="351.50"></text></g><g><title>alloc::str::join_generic_copy::_{{closure}} (1 samples, 0.02%)</title><rect x="98.2274%" y="325" width="0.0160%" height="15" fill="rgb(206,107,13)" fg:x="6151" fg:w="1"/><text x="98.4774%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="98.2274%" y="309" width="0.0160%" height="15" fill="rgb(250,100,44)" fg:x="6151" fg:w="1"/><text x="98.4774%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="98.2274%" y="293" width="0.0160%" height="15" fill="rgb(231,147,38)" fg:x="6151" fg:w="1"/><text x="98.4774%" y="303.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="98.3871%" y="533" width="0.0160%" height="15" fill="rgb(229,8,40)" fg:x="6161" fg:w="1"/><text x="98.6371%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;rand::rngs::thread::ThreadRng&gt; (3 samples, 0.05%)</title><rect x="98.4031%" y="517" width="0.0479%" height="15" fill="rgb(221,135,30)" fg:x="6162" fg:w="3"/><text x="98.6531%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::UnsafeCell&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;rand_chacha::chacha::ChaCha12Core,rand_core::os::OsRng&gt;&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="98.4031%" y="501" width="0.0479%" height="15" fill="rgb(249,193,18)" fg:x="6162" fg:w="3"/><text x="98.6531%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="98.4031%" y="485" width="0.0479%" height="15" fill="rgb(209,133,39)" fg:x="6162" fg:w="3"/><text x="98.6531%" y="495.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (2 samples, 0.03%)</title><rect x="98.4190%" y="469" width="0.0319%" height="15" fill="rgb(232,100,14)" fg:x="6163" fg:w="2"/><text x="98.6690%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.03%)</title><rect x="98.4190%" y="453" width="0.0319%" height="15" fill="rgb(224,185,1)" fg:x="6163" fg:w="2"/><text x="98.6690%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast_const (2 samples, 0.03%)</title><rect x="98.4190%" y="437" width="0.0319%" height="15" fill="rgb(223,139,8)" fg:x="6163" fg:w="2"/><text x="98.6690%" y="447.50"></text></g><g><title>&lt;rand_chacha::chacha::Array64&lt;T&gt; as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (2 samples, 0.03%)</title><rect x="98.4829%" y="405" width="0.0319%" height="15" fill="rgb(232,213,38)" fg:x="6167" fg:w="2"/><text x="98.7329%" y="415.50"></text></g><g><title>rand::rng::Rng::gen (5 samples, 0.08%)</title><rect x="98.4510%" y="517" width="0.0798%" height="15" fill="rgb(207,94,22)" fg:x="6165" fg:w="5"/><text x="98.7010%" y="527.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (5 samples, 0.08%)</title><rect x="98.4510%" y="501" width="0.0798%" height="15" fill="rgb(219,183,54)" fg:x="6165" fg:w="5"/><text x="98.7010%" y="511.50"></text></g><g><title>rand::rng::Rng::gen (4 samples, 0.06%)</title><rect x="98.4669%" y="485" width="0.0639%" height="15" fill="rgb(216,185,54)" fg:x="6166" fg:w="4"/><text x="98.7169%" y="495.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (4 samples, 0.06%)</title><rect x="98.4669%" y="469" width="0.0639%" height="15" fill="rgb(254,217,39)" fg:x="6166" fg:w="4"/><text x="98.7169%" y="479.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (4 samples, 0.06%)</title><rect x="98.4669%" y="453" width="0.0639%" height="15" fill="rgb(240,178,23)" fg:x="6166" fg:w="4"/><text x="98.7169%" y="463.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (4 samples, 0.06%)</title><rect x="98.4669%" y="437" width="0.0639%" height="15" fill="rgb(218,11,47)" fg:x="6166" fg:w="4"/><text x="98.7169%" y="447.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (4 samples, 0.06%)</title><rect x="98.4669%" y="421" width="0.0639%" height="15" fill="rgb(218,51,51)" fg:x="6166" fg:w="4"/><text x="98.7169%" y="431.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.02%)</title><rect x="98.5149%" y="405" width="0.0160%" height="15" fill="rgb(238,126,27)" fg:x="6169" fg:w="1"/><text x="98.7649%" y="415.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="98.5149%" y="389" width="0.0160%" height="15" fill="rgb(249,202,22)" fg:x="6169" fg:w="1"/><text x="98.7649%" y="399.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="98.5149%" y="373" width="0.0160%" height="15" fill="rgb(254,195,49)" fg:x="6169" fg:w="1"/><text x="98.7649%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.5149%" y="357" width="0.0160%" height="15" fill="rgb(208,123,14)" fg:x="6169" fg:w="1"/><text x="98.7649%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="98.5149%" y="341" width="0.0160%" height="15" fill="rgb(224,200,8)" fg:x="6169" fg:w="1"/><text x="98.7649%" y="351.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (1 samples, 0.02%)</title><rect x="98.5628%" y="469" width="0.0160%" height="15" fill="rgb(217,61,36)" fg:x="6172" fg:w="1"/><text x="98.8128%" y="479.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="98.5628%" y="453" width="0.0160%" height="15" fill="rgb(206,35,45)" fg:x="6172" fg:w="1"/><text x="98.8128%" y="463.50"></text></g><g><title>rand::random (12 samples, 0.19%)</title><rect x="98.4031%" y="533" width="0.1916%" height="15" fill="rgb(217,65,33)" fg:x="6162" fg:w="12"/><text x="98.6531%" y="543.50"></text></g><g><title>rand::rngs::thread::thread_rng (4 samples, 0.06%)</title><rect x="98.5308%" y="517" width="0.0639%" height="15" fill="rgb(222,158,48)" fg:x="6170" fg:w="4"/><text x="98.7808%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.06%)</title><rect x="98.5308%" y="501" width="0.0639%" height="15" fill="rgb(254,2,54)" fg:x="6170" fg:w="4"/><text x="98.7808%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.03%)</title><rect x="98.5628%" y="485" width="0.0319%" height="15" fill="rgb(250,143,38)" fg:x="6172" fg:w="2"/><text x="98.8128%" y="495.50"></text></g><g><title>rand::rngs::thread::thread_rng::_{{closure}} (1 samples, 0.02%)</title><rect x="98.5787%" y="469" width="0.0160%" height="15" fill="rgb(248,25,0)" fg:x="6173" fg:w="1"/><text x="98.8287%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="98.5787%" y="453" width="0.0160%" height="15" fill="rgb(206,152,27)" fg:x="6173" fg:w="1"/><text x="98.8287%" y="463.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.02%)</title><rect x="98.5787%" y="437" width="0.0160%" height="15" fill="rgb(240,77,30)" fg:x="6173" fg:w="1"/><text x="98.8287%" y="447.50"></text></g><g><title>&lt;simd::math::Vec3 as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="98.6266%" y="517" width="0.0160%" height="15" fill="rgb(231,5,3)" fg:x="6176" fg:w="1"/><text x="98.8766%" y="527.50"></text></g><g><title>simd::math::Vec3::normalized (4 samples, 0.06%)</title><rect x="98.5947%" y="533" width="0.0639%" height="15" fill="rgb(207,226,32)" fg:x="6174" fg:w="4"/><text x="98.8447%" y="543.50"></text></g><g><title>simd::math::Vec3::normalize (1 samples, 0.02%)</title><rect x="98.6426%" y="517" width="0.0160%" height="15" fill="rgb(222,207,47)" fg:x="6177" fg:w="1"/><text x="98.8926%" y="527.50"></text></g><g><title>simd::math::Vec3::length (1 samples, 0.02%)</title><rect x="98.6426%" y="501" width="0.0160%" height="15" fill="rgb(229,115,45)" fg:x="6177" fg:w="1"/><text x="98.8926%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.11%)</title><rect x="98.6905%" y="517" width="0.1118%" height="15" fill="rgb(224,191,6)" fg:x="6180" fg:w="7"/><text x="98.9405%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.03%)</title><rect x="98.7704%" y="501" width="0.0319%" height="15" fill="rgb(230,227,24)" fg:x="6185" fg:w="2"/><text x="99.0204%" y="511.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="98.8023%" y="501" width="0.0160%" height="15" fill="rgb(228,80,19)" fg:x="6187" fg:w="1"/><text x="99.0523%" y="511.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="98.8342%" y="421" width="0.0160%" height="15" fill="rgb(247,229,0)" fg:x="6189" fg:w="1"/><text x="99.0842%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="98.8342%" y="405" width="0.0160%" height="15" fill="rgb(237,194,15)" fg:x="6189" fg:w="1"/><text x="99.0842%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast_const (1 samples, 0.02%)</title><rect x="98.8342%" y="389" width="0.0160%" height="15" fill="rgb(219,203,20)" fg:x="6189" fg:w="1"/><text x="99.0842%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;rand::rngs::thread::ThreadRng&gt; (5 samples, 0.08%)</title><rect x="98.8342%" y="469" width="0.0798%" height="15" fill="rgb(234,128,8)" fg:x="6189" fg:w="5"/><text x="99.0842%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::UnsafeCell&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;rand_chacha::chacha::ChaCha12Core,rand_core::os::OsRng&gt;&gt;&gt;&gt; (5 samples, 0.08%)</title><rect x="98.8342%" y="453" width="0.0798%" height="15" fill="rgb(248,202,8)" fg:x="6189" fg:w="5"/><text x="99.0842%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.08%)</title><rect x="98.8342%" y="437" width="0.0798%" height="15" fill="rgb(206,104,37)" fg:x="6189" fg:w="5"/><text x="99.0842%" y="447.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (4 samples, 0.06%)</title><rect x="98.8502%" y="421" width="0.0639%" height="15" fill="rgb(223,8,27)" fg:x="6190" fg:w="4"/><text x="99.1002%" y="431.50"></text></g><g><title>alloc::rc::RcInnerPtr::strong (4 samples, 0.06%)</title><rect x="98.8502%" y="405" width="0.0639%" height="15" fill="rgb(216,217,28)" fg:x="6190" fg:w="4"/><text x="99.1002%" y="415.50"></text></g><g><title>rand::rng::Rng::gen (2 samples, 0.03%)</title><rect x="98.9141%" y="469" width="0.0319%" height="15" fill="rgb(249,199,1)" fg:x="6194" fg:w="2"/><text x="99.1641%" y="479.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (2 samples, 0.03%)</title><rect x="98.9141%" y="453" width="0.0319%" height="15" fill="rgb(240,85,17)" fg:x="6194" fg:w="2"/><text x="99.1641%" y="463.50"></text></g><g><title>rand::rng::Rng::gen (2 samples, 0.03%)</title><rect x="98.9141%" y="437" width="0.0319%" height="15" fill="rgb(206,108,45)" fg:x="6194" fg:w="2"/><text x="99.1641%" y="447.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (2 samples, 0.03%)</title><rect x="98.9141%" y="421" width="0.0319%" height="15" fill="rgb(245,210,41)" fg:x="6194" fg:w="2"/><text x="99.1641%" y="431.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (2 samples, 0.03%)</title><rect x="98.9141%" y="405" width="0.0319%" height="15" fill="rgb(206,13,37)" fg:x="6194" fg:w="2"/><text x="99.1641%" y="415.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (2 samples, 0.03%)</title><rect x="98.9141%" y="389" width="0.0319%" height="15" fill="rgb(250,61,18)" fg:x="6194" fg:w="2"/><text x="99.1641%" y="399.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="98.9301%" y="373" width="0.0160%" height="15" fill="rgb(235,172,48)" fg:x="6195" fg:w="1"/><text x="99.1801%" y="383.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.02%)</title><rect x="98.9301%" y="357" width="0.0160%" height="15" fill="rgb(249,201,17)" fg:x="6195" fg:w="1"/><text x="99.1801%" y="367.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="98.9301%" y="341" width="0.0160%" height="15" fill="rgb(219,208,6)" fg:x="6195" fg:w="1"/><text x="99.1801%" y="351.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="98.9301%" y="325" width="0.0160%" height="15" fill="rgb(248,31,23)" fg:x="6195" fg:w="1"/><text x="99.1801%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.9301%" y="309" width="0.0160%" height="15" fill="rgb(245,15,42)" fg:x="6195" fg:w="1"/><text x="99.1801%" y="319.50"></text></g><g><title>rand::random (10 samples, 0.16%)</title><rect x="98.8342%" y="485" width="0.1597%" height="15" fill="rgb(222,217,39)" fg:x="6189" fg:w="10"/><text x="99.0842%" y="495.50"></text></g><g><title>rand::rngs::thread::thread_rng (3 samples, 0.05%)</title><rect x="98.9460%" y="469" width="0.0479%" height="15" fill="rgb(210,219,27)" fg:x="6196" fg:w="3"/><text x="99.1960%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="98.9780%" y="453" width="0.0160%" height="15" fill="rgb(252,166,36)" fg:x="6198" fg:w="1"/><text x="99.2280%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="98.9780%" y="437" width="0.0160%" height="15" fill="rgb(245,132,34)" fg:x="6198" fg:w="1"/><text x="99.2280%" y="447.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (1 samples, 0.02%)</title><rect x="98.9780%" y="421" width="0.0160%" height="15" fill="rgb(236,54,3)" fg:x="6198" fg:w="1"/><text x="99.2280%" y="431.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="98.9780%" y="405" width="0.0160%" height="15" fill="rgb(241,173,43)" fg:x="6198" fg:w="1"/><text x="99.2280%" y="415.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (14 samples, 0.22%)</title><rect x="98.8023%" y="517" width="0.2236%" height="15" fill="rgb(215,190,9)" fg:x="6187" fg:w="14"/><text x="99.0523%" y="527.50"></text></g><g><title>simd::math::Vec3::random_unit_vector (13 samples, 0.21%)</title><rect x="98.8183%" y="501" width="0.2076%" height="15" fill="rgb(242,101,16)" fg:x="6188" fg:w="13"/><text x="99.0683%" y="511.50"></text></g><g><title>simd::math::Vec3::normalized (2 samples, 0.03%)</title><rect x="98.9939%" y="485" width="0.0319%" height="15" fill="rgb(223,190,21)" fg:x="6199" fg:w="2"/><text x="99.2439%" y="495.50"></text></g><g><title>&lt;simd::material::PointLightMaterial as simd::material::Material&gt;::scatter (1 samples, 0.02%)</title><rect x="99.0259%" y="517" width="0.0160%" height="15" fill="rgb(215,228,25)" fg:x="6201" fg:w="1"/><text x="99.2759%" y="527.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Mul&gt;::mul (1 samples, 0.02%)</title><rect x="99.0418%" y="517" width="0.0160%" height="15" fill="rgb(225,36,22)" fg:x="6202" fg:w="1"/><text x="99.2918%" y="527.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Div&lt;f32&gt;&gt;::div (2 samples, 0.03%)</title><rect x="99.2015%" y="485" width="0.0319%" height="15" fill="rgb(251,106,46)" fg:x="6212" fg:w="2"/><text x="99.4515%" y="495.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Sub&gt;::sub (15 samples, 0.24%)</title><rect x="99.2335%" y="485" width="0.2395%" height="15" fill="rgb(208,90,1)" fg:x="6214" fg:w="15"/><text x="99.4835%" y="495.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::from_array (11 samples, 0.18%)</title><rect x="99.2973%" y="469" width="0.1757%" height="15" fill="rgb(243,10,4)" fg:x="6218" fg:w="11"/><text x="99.5473%" y="479.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::load (10 samples, 0.16%)</title><rect x="99.3133%" y="453" width="0.1597%" height="15" fill="rgb(212,137,27)" fg:x="6219" fg:w="10"/><text x="99.5633%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.13%)</title><rect x="99.3453%" y="437" width="0.1278%" height="15" fill="rgb(231,220,49)" fg:x="6221" fg:w="8"/><text x="99.5953%" y="447.50"></text></g><g><title>simd::object::Object::hit (29 samples, 0.46%)</title><rect x="99.0578%" y="517" width="0.4631%" height="15" fill="rgb(237,96,20)" fg:x="6203" fg:w="29"/><text x="99.3078%" y="527.50"></text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (29 samples, 0.46%)</title><rect x="99.0578%" y="501" width="0.4631%" height="15" fill="rgb(239,229,30)" fg:x="6203" fg:w="29"/><text x="99.3078%" y="511.50"></text></g><g><title>simd::math::Vec3::dot (3 samples, 0.05%)</title><rect x="99.4730%" y="485" width="0.0479%" height="15" fill="rgb(219,65,33)" fg:x="6229" fg:w="3"/><text x="99.7230%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.5209%" y="501" width="0.0160%" height="15" fill="rgb(243,134,7)" fg:x="6232" fg:w="1"/><text x="99.7709%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="99.5209%" y="485" width="0.0160%" height="15" fill="rgb(216,177,54)" fg:x="6232" fg:w="1"/><text x="99.7709%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.02%)</title><rect x="99.5209%" y="469" width="0.0160%" height="15" fill="rgb(211,160,20)" fg:x="6232" fg:w="1"/><text x="99.7709%" y="479.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (1 samples, 0.02%)</title><rect x="99.5369%" y="501" width="0.0160%" height="15" fill="rgb(239,85,39)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="511.50"></text></g><g><title>simd::math::Vec3::random_unit_vector (1 samples, 0.02%)</title><rect x="99.5369%" y="485" width="0.0160%" height="15" fill="rgb(232,125,22)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="495.50"></text></g><g><title>rand::random (1 samples, 0.02%)</title><rect x="99.5369%" y="469" width="0.0160%" height="15" fill="rgb(244,57,34)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="479.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.02%)</title><rect x="99.5369%" y="453" width="0.0160%" height="15" fill="rgb(214,203,32)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="463.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.02%)</title><rect x="99.5369%" y="437" width="0.0160%" height="15" fill="rgb(207,58,43)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="447.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.02%)</title><rect x="99.5369%" y="421" width="0.0160%" height="15" fill="rgb(215,193,15)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="431.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.02%)</title><rect x="99.5369%" y="405" width="0.0160%" height="15" fill="rgb(232,15,44)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="415.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="99.5369%" y="389" width="0.0160%" height="15" fill="rgb(212,3,48)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="399.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="99.5369%" y="373" width="0.0160%" height="15" fill="rgb(218,128,7)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="383.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="99.5369%" y="357" width="0.0160%" height="15" fill="rgb(226,216,39)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="367.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.02%)</title><rect x="99.5369%" y="341" width="0.0160%" height="15" fill="rgb(243,47,51)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="99.5369%" y="325" width="0.0160%" height="15" fill="rgb(241,183,40)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="335.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="99.5369%" y="309" width="0.0160%" height="15" fill="rgb(231,217,32)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.5369%" y="293" width="0.0160%" height="15" fill="rgb(229,61,38)" fg:x="6233" fg:w="1"/><text x="99.7869%" y="303.50"></text></g><g><title>simd::object::Object::hit (18 samples, 0.29%)</title><rect x="99.5529%" y="501" width="0.2874%" height="15" fill="rgb(225,210,5)" fg:x="6234" fg:w="18"/><text x="99.8029%" y="511.50"></text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (14 samples, 0.22%)</title><rect x="99.6167%" y="485" width="0.2236%" height="15" fill="rgb(231,79,45)" fg:x="6238" fg:w="14"/><text x="99.8667%" y="495.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Sub&gt;::sub (9 samples, 0.14%)</title><rect x="99.6966%" y="469" width="0.1437%" height="15" fill="rgb(224,100,7)" fg:x="6243" fg:w="9"/><text x="99.9466%" y="479.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::from_array (6 samples, 0.10%)</title><rect x="99.7445%" y="453" width="0.0958%" height="15" fill="rgb(241,198,18)" fg:x="6246" fg:w="6"/><text x="99.9945%" y="463.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::load (5 samples, 0.08%)</title><rect x="99.7605%" y="437" width="0.0798%" height="15" fill="rgb(252,97,53)" fg:x="6247" fg:w="5"/><text x="100.0105%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.05%)</title><rect x="99.7924%" y="421" width="0.0479%" height="15" fill="rgb(220,88,7)" fg:x="6249" fg:w="3"/><text x="100.0424%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.8403%" y="485" width="0.0160%" height="15" fill="rgb(213,176,14)" fg:x="6252" fg:w="1"/><text x="100.0903%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="99.8403%" y="469" width="0.0160%" height="15" fill="rgb(246,73,7)" fg:x="6252" fg:w="1"/><text x="100.0903%" y="479.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (1 samples, 0.02%)</title><rect x="99.8563%" y="485" width="0.0160%" height="15" fill="rgb(245,64,36)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="495.50"></text></g><g><title>simd::math::Vec3::random_unit_vector (1 samples, 0.02%)</title><rect x="99.8563%" y="469" width="0.0160%" height="15" fill="rgb(245,80,10)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="479.50"></text></g><g><title>rand::random (1 samples, 0.02%)</title><rect x="99.8563%" y="453" width="0.0160%" height="15" fill="rgb(232,107,50)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="463.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.02%)</title><rect x="99.8563%" y="437" width="0.0160%" height="15" fill="rgb(253,3,0)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="447.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.02%)</title><rect x="99.8563%" y="421" width="0.0160%" height="15" fill="rgb(212,99,53)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="431.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.02%)</title><rect x="99.8563%" y="405" width="0.0160%" height="15" fill="rgb(249,111,54)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="415.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.02%)</title><rect x="99.8563%" y="389" width="0.0160%" height="15" fill="rgb(249,55,30)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="399.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="99.8563%" y="373" width="0.0160%" height="15" fill="rgb(237,47,42)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="383.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="99.8563%" y="357" width="0.0160%" height="15" fill="rgb(211,20,18)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="367.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="99.8563%" y="341" width="0.0160%" height="15" fill="rgb(231,203,46)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="351.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.02%)</title><rect x="99.8563%" y="325" width="0.0160%" height="15" fill="rgb(237,142,3)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="335.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="99.8563%" y="309" width="0.0160%" height="15" fill="rgb(241,107,1)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="319.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="99.8563%" y="293" width="0.0160%" height="15" fill="rgb(229,83,13)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.8563%" y="277" width="0.0160%" height="15" fill="rgb(241,91,40)" fg:x="6253" fg:w="1"/><text x="100.1063%" y="287.50"></text></g><g><title>&lt;simd::math::Vec3 as core::ops::arith::Sub&gt;::sub (3 samples, 0.05%)</title><rect x="99.8722%" y="453" width="0.0479%" height="15" fill="rgb(225,3,45)" fg:x="6254" fg:w="3"/><text x="100.1222%" y="463.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::from_array (2 samples, 0.03%)</title><rect x="99.8882%" y="437" width="0.0319%" height="15" fill="rgb(244,223,14)" fg:x="6255" fg:w="2"/><text x="100.1382%" y="447.50"></text></g><g><title>core::core_simd::vector::Simd&lt;T,_&gt;::load (2 samples, 0.03%)</title><rect x="99.8882%" y="421" width="0.0319%" height="15" fill="rgb(224,124,37)" fg:x="6255" fg:w="2"/><text x="100.1382%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="99.8882%" y="405" width="0.0319%" height="15" fill="rgb(251,171,30)" fg:x="6255" fg:w="2"/><text x="100.1382%" y="415.50"></text></g><g><title>simd::object::Object::hit (4 samples, 0.06%)</title><rect x="99.8722%" y="485" width="0.0639%" height="15" fill="rgb(236,46,54)" fg:x="6254" fg:w="4"/><text x="100.1222%" y="495.50"></text></g><g><title>&lt;simd::mesh::Sphere as simd::mesh::MeshTrait&gt;::hit (4 samples, 0.06%)</title><rect x="99.8722%" y="469" width="0.0639%" height="15" fill="rgb(245,213,5)" fg:x="6254" fg:w="4"/><text x="100.1222%" y="479.50"></text></g><g><title>simd::math::Vec3::dot (1 samples, 0.02%)</title><rect x="99.9202%" y="453" width="0.0160%" height="15" fill="rgb(230,144,27)" fg:x="6257" fg:w="1"/><text x="100.1702%" y="463.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (1 samples, 0.02%)</title><rect x="99.9361%" y="453" width="0.0160%" height="15" fill="rgb(220,86,6)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="463.50"></text></g><g><title>simd::math::Vec3::random_unit_vector (1 samples, 0.02%)</title><rect x="99.9361%" y="437" width="0.0160%" height="15" fill="rgb(240,20,13)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="447.50"></text></g><g><title>rand::random (1 samples, 0.02%)</title><rect x="99.9361%" y="421" width="0.0160%" height="15" fill="rgb(217,89,34)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="431.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.02%)</title><rect x="99.9361%" y="405" width="0.0160%" height="15" fill="rgb(229,13,5)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="415.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.02%)</title><rect x="99.9361%" y="389" width="0.0160%" height="15" fill="rgb(244,67,35)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="399.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.02%)</title><rect x="99.9361%" y="373" width="0.0160%" height="15" fill="rgb(221,40,2)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="383.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.02%)</title><rect x="99.9361%" y="357" width="0.0160%" height="15" fill="rgb(237,157,21)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="367.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="99.9361%" y="341" width="0.0160%" height="15" fill="rgb(222,94,11)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="99.9361%" y="325" width="0.0160%" height="15" fill="rgb(249,113,6)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="335.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="99.9361%" y="309" width="0.0160%" height="15" fill="rgb(238,137,36)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="319.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.02%)</title><rect x="99.9361%" y="293" width="0.0160%" height="15" fill="rgb(210,102,26)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="303.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="99.9361%" y="277" width="0.0160%" height="15" fill="rgb(218,30,30)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="287.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="99.9361%" y="261" width="0.0160%" height="15" fill="rgb(214,67,26)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.9361%" y="245" width="0.0160%" height="15" fill="rgb(251,9,53)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="255.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.9361%" y="229" width="0.0160%" height="15" fill="rgb(228,204,25)" fg:x="6258" fg:w="1"/><text x="100.1861%" y="239.50"></text></g><g><title>_start (2,940 samples, 46.95%)</title><rect x="53.0182%" y="1173" width="46.9499%" height="15" fill="rgb(207,153,8)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="1183.50">_start</text></g><g><title>__libc_start_main (2,940 samples, 46.95%)</title><rect x="53.0182%" y="1157" width="46.9499%" height="15" fill="rgb(242,9,16)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="1167.50">__libc_start_main</text></g><g><title>[libc.so.6] (2,940 samples, 46.95%)</title><rect x="53.0182%" y="1141" width="46.9499%" height="15" fill="rgb(217,211,10)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="1151.50">[libc.so.6]</text></g><g><title>main (2,940 samples, 46.95%)</title><rect x="53.0182%" y="1125" width="46.9499%" height="15" fill="rgb(219,228,52)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="1135.50">main</text></g><g><title>std::rt::lang_start (2,940 samples, 46.95%)</title><rect x="53.0182%" y="1109" width="46.9499%" height="15" fill="rgb(231,92,29)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="1119.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (2,940 samples, 46.95%)</title><rect x="53.0182%" y="1093" width="46.9499%" height="15" fill="rgb(232,8,23)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="1103.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (2,940 samples, 46.95%)</title><rect x="53.0182%" y="1077" width="46.9499%" height="15" fill="rgb(216,211,34)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="1087.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,940 samples, 46.95%)</title><rect x="53.0182%" y="1061" width="46.9499%" height="15" fill="rgb(236,151,0)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="1071.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,940 samples, 46.95%)</title><rect x="53.0182%" y="1045" width="46.9499%" height="15" fill="rgb(209,168,3)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="1055.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (2,940 samples, 46.95%)</title><rect x="53.0182%" y="1029" width="46.9499%" height="15" fill="rgb(208,129,28)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="1039.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (2,940 samples, 46.95%)</title><rect x="53.0182%" y="1013" width="46.9499%" height="15" fill="rgb(229,78,22)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,940 samples, 46.95%)</title><rect x="53.0182%" y="997" width="46.9499%" height="15" fill="rgb(228,187,13)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,940 samples, 46.95%)</title><rect x="53.0182%" y="981" width="46.9499%" height="15" fill="rgb(240,119,24)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="991.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2,940 samples, 46.95%)</title><rect x="53.0182%" y="965" width="46.9499%" height="15" fill="rgb(209,194,42)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="975.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::cal..</text></g><g><title>std::rt::lang_start::_{{closure}} (2,940 samples, 46.95%)</title><rect x="53.0182%" y="949" width="46.9499%" height="15" fill="rgb(247,200,46)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="959.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,940 samples, 46.95%)</title><rect x="53.0182%" y="933" width="46.9499%" height="15" fill="rgb(218,76,16)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="943.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (2,940 samples, 46.95%)</title><rect x="53.0182%" y="917" width="46.9499%" height="15" fill="rgb(225,21,48)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="927.50">core::ops::function::FnOnce::call_once</text></g><g><title>simd::main (2,940 samples, 46.95%)</title><rect x="53.0182%" y="901" width="46.9499%" height="15" fill="rgb(239,223,50)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="911.50">simd::main</text></g><g><title>microbench::bench (2,940 samples, 46.95%)</title><rect x="53.0182%" y="885" width="46.9499%" height="15" fill="rgb(244,45,21)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="895.50">microbench::bench</text></g><g><title>microbench::bench_impl (2,940 samples, 46.95%)</title><rect x="53.0182%" y="869" width="46.9499%" height="15" fill="rgb(232,33,43)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="879.50">microbench::bench_impl</text></g><g><title>microbench::bench::_{{closure}} (2,940 samples, 46.95%)</title><rect x="53.0182%" y="853" width="46.9499%" height="15" fill="rgb(209,8,3)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="863.50">microbench::bench::_{{closure}}</text></g><g><title>microbench::measure (2,940 samples, 46.95%)</title><rect x="53.0182%" y="837" width="46.9499%" height="15" fill="rgb(214,25,53)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="847.50">microbench::measure</text></g><g><title>microbench::measure_impl (2,940 samples, 46.95%)</title><rect x="53.0182%" y="821" width="46.9499%" height="15" fill="rgb(254,186,54)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="831.50">microbench::measure_impl</text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,940 samples, 46.95%)</title><rect x="53.0182%" y="805" width="46.9499%" height="15" fill="rgb(208,174,49)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="815.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,940 samples, 46.95%)</title><rect x="53.0182%" y="789" width="46.9499%" height="15" fill="rgb(233,191,51)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,940 samples, 46.95%)</title><rect x="53.0182%" y="773" width="46.9499%" height="15" fill="rgb(222,134,10)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="783.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,940 samples, 46.95%)</title><rect x="53.0182%" y="757" width="46.9499%" height="15" fill="rgb(230,226,20)" fg:x="3320" fg:w="2940"/><text x="53.2682%" y="767.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (112 samples, 1.79%)</title><rect x="98.1795%" y="741" width="1.7886%" height="15" fill="rgb(251,111,25)" fg:x="6148" fg:w="112"/><text x="98.4295%" y="751.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (112 samples, 1.79%)</title><rect x="98.1795%" y="725" width="1.7886%" height="15" fill="rgb(224,40,46)" fg:x="6148" fg:w="112"/><text x="98.4295%" y="735.50">c..</text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (112 samples, 1.79%)</title><rect x="98.1795%" y="709" width="1.7886%" height="15" fill="rgb(236,108,47)" fg:x="6148" fg:w="112"/><text x="98.4295%" y="719.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (112 samples, 1.79%)</title><rect x="98.1795%" y="693" width="1.7886%" height="15" fill="rgb(234,93,0)" fg:x="6148" fg:w="112"/><text x="98.4295%" y="703.50">c..</text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (112 samples, 1.79%)</title><rect x="98.1795%" y="677" width="1.7886%" height="15" fill="rgb(224,213,32)" fg:x="6148" fg:w="112"/><text x="98.4295%" y="687.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (112 samples, 1.79%)</title><rect x="98.1795%" y="661" width="1.7886%" height="15" fill="rgb(251,11,48)" fg:x="6148" fg:w="112"/><text x="98.4295%" y="671.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (112 samples, 1.79%)</title><rect x="98.1795%" y="645" width="1.7886%" height="15" fill="rgb(236,173,5)" fg:x="6148" fg:w="112"/><text x="98.4295%" y="655.50">c..</text></g><g><title>microbench::measure_impl::_{{closure}} (112 samples, 1.79%)</title><rect x="98.1795%" y="629" width="1.7886%" height="15" fill="rgb(230,95,12)" fg:x="6148" fg:w="112"/><text x="98.4295%" y="639.50">m..</text></g><g><title>microbench::measure::_{{closure}} (112 samples, 1.79%)</title><rect x="98.1795%" y="613" width="1.7886%" height="15" fill="rgb(232,209,1)" fg:x="6148" fg:w="112"/><text x="98.4295%" y="623.50">m..</text></g><g><title>simd::main::_{{closure}} (112 samples, 1.79%)</title><rect x="98.1795%" y="597" width="1.7886%" height="15" fill="rgb(232,6,1)" fg:x="6148" fg:w="112"/><text x="98.4295%" y="607.50">s..</text></g><g><title>simd::cpu_compute (112 samples, 1.79%)</title><rect x="98.1795%" y="581" width="1.7886%" height="15" fill="rgb(210,224,50)" fg:x="6148" fg:w="112"/><text x="98.4295%" y="591.50">s..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (108 samples, 1.72%)</title><rect x="98.2434%" y="565" width="1.7247%" height="15" fill="rgb(228,127,35)" fg:x="6152" fg:w="108"/><text x="98.4934%" y="575.50"></text></g><g><title>simd::cpu_compute::_{{closure}} (100 samples, 1.60%)</title><rect x="98.3711%" y="549" width="1.5969%" height="15" fill="rgb(245,102,45)" fg:x="6160" fg:w="100"/><text x="98.6211%" y="559.50"></text></g><g><title>simd::ray_caste (82 samples, 1.31%)</title><rect x="98.6586%" y="533" width="1.3095%" height="15" fill="rgb(214,1,49)" fg:x="6178" fg:w="82"/><text x="98.9086%" y="543.50"></text></g><g><title>simd::ray_caste (28 samples, 0.45%)</title><rect x="99.5209%" y="517" width="0.4471%" height="15" fill="rgb(226,163,40)" fg:x="6232" fg:w="28"/><text x="99.7709%" y="527.50"></text></g><g><title>simd::ray_caste (8 samples, 0.13%)</title><rect x="99.8403%" y="501" width="0.1278%" height="15" fill="rgb(239,212,28)" fg:x="6252" fg:w="8"/><text x="100.0903%" y="511.50"></text></g><g><title>simd::ray_caste (2 samples, 0.03%)</title><rect x="99.9361%" y="485" width="0.0319%" height="15" fill="rgb(220,20,13)" fg:x="6258" fg:w="2"/><text x="100.1861%" y="495.50"></text></g><g><title>simd::ray_caste (2 samples, 0.03%)</title><rect x="99.9361%" y="469" width="0.0319%" height="15" fill="rgb(210,164,35)" fg:x="6258" fg:w="2"/><text x="100.1861%" y="479.50"></text></g><g><title>simd::ray_caste (1 samples, 0.02%)</title><rect x="99.9521%" y="453" width="0.0160%" height="15" fill="rgb(248,109,41)" fg:x="6259" fg:w="1"/><text x="100.2021%" y="463.50"></text></g><g><title>simd::ray_caste (1 samples, 0.02%)</title><rect x="99.9521%" y="437" width="0.0160%" height="15" fill="rgb(238,23,50)" fg:x="6259" fg:w="1"/><text x="100.2021%" y="447.50"></text></g><g><title>simd::ray_caste (1 samples, 0.02%)</title><rect x="99.9521%" y="421" width="0.0160%" height="15" fill="rgb(211,48,49)" fg:x="6259" fg:w="1"/><text x="100.2021%" y="431.50"></text></g><g><title>&lt;simd::material::Diffuse as simd::material::Material&gt;::scatter (1 samples, 0.02%)</title><rect x="99.9521%" y="405" width="0.0160%" height="15" fill="rgb(223,36,21)" fg:x="6259" fg:w="1"/><text x="100.2021%" y="415.50"></text></g><g><title>simd::math::Vec3::random_unit_vector (1 samples, 0.02%)</title><rect x="99.9521%" y="389" width="0.0160%" height="15" fill="rgb(207,123,46)" fg:x="6259" fg:w="1"/><text x="100.2021%" y="399.50"></text></g><g><title>rand::random (1 samples, 0.02%)</title><rect x="99.9521%" y="373" width="0.0160%" height="15" fill="rgb(240,218,32)" fg:x="6259" fg:w="1"/><text x="100.2021%" y="383.50"></text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.02%)</title><rect x="99.9521%" y="357" width="0.0160%" height="15" fill="rgb(252,5,43)" fg:x="6259" fg:w="1"/><text x="100.2021%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="99.9521%" y="341" width="0.0160%" height="15" fill="rgb(252,84,19)" fg:x="6259" fg:w="1"/><text x="100.2021%" y="351.50"></text></g><g><title>all (6,262 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(243,152,39)" fg:x="0" fg:w="6262"/><text x="0.2500%" y="1215.50"></text></g><g><title>simd (6,262 samples, 100.00%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(234,160,15)" fg:x="0" fg:w="6262"/><text x="0.2500%" y="1199.50">simd</text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.03%)</title><rect x="99.9681%" y="1173" width="0.0319%" height="15" fill="rgb(237,34,20)" fg:x="6260" fg:w="2"/><text x="100.2181%" y="1183.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.03%)</title><rect x="99.9681%" y="1157" width="0.0319%" height="15" fill="rgb(229,97,13)" fg:x="6260" fg:w="2"/><text x="100.2181%" y="1167.50"></text></g></svg></svg>